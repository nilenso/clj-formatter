["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ "],"~:excludes",["~#set",["~$peek","~$next"]],"~:name","~$rewrite-clj.reader","~:imports",["^ ","~$StringBuffer","~$goog.string.StringBuffer"],"~:requires",["^ ","~$clojure.tools.reader.impl.utils","~$cljs.tools.reader.impl.utils","~$cljs.tools.reader.impl.commons","^?","~$cljs.tools.reader.edn","^@","~$clojure.tools.reader.impl.commons","^?","~$clojure.tools.reader.impl.errors","~$cljs.tools.reader.impl.errors","~$reader-impl-errors","^C","~$r","~$cljs.tools.reader.reader-types","^C","^C","~$reader-impl-utils","^>","~$clojure.tools.reader.reader-types","^E","~$clojure.tools.reader.edn","^@","~$reader-impl-commons","^?","^E","^E","^:","^;","^>","^>","~$rewrite-clj.interop","^J","~$interop","^J","~$edn","^@"],"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$whitespace?",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/Users/shivamsinghal/projects/open-source/clj-formatter/out/rewrite_clj/reader.cljc","~:line",42,"~:column",7,"~:end-line",42,"~:end-column",18,"~:arglists",["~#list",["~$quote",["^Y",[["~$c"]]]]],"~:doc","Checks whether a given character is whitespace"],"^7","~$rewrite-clj.reader/whitespace?","^S","out/rewrite_clj/reader.cljc","^W",18,"~:method-params",["^Y",[["~$c"]]],"~:protocol-impl",null,"~:arglists-meta",["^Y",[null,null]],"^U",1,"~:variadic?",false,"^T",42,"~:ret-tag",["^4",[null,"~$boolean"]],"^V",42,"~:max-fixed-arity",1,"~:fn-var",true,"^X",["^Y",["^Z",["^Y",[["~$c"]]]]],"^[","Checks whether a given character is whitespace"],"^5",["^ ","^Q",null,"^R",["^ ","^S","/Users/shivamsinghal/projects/open-source/clj-formatter/out/rewrite_clj/reader.cljc","^T",127,"^U",7,"^V",127,"^W",11,"^X",["^Y",["^Z",["^Y",[["~$reader"]]]]],"^[","Peek next char."],"^7","~$rewrite-clj.reader/peek","^S","out/rewrite_clj/reader.cljc","^W",11,"^11",["^Y",[["^19"]]],"^12",null,"^13",["^Y",[null,null]],"^U",1,"^14",false,"^T",127,"^15",["^4",["~$any","~$string"]],"^V",127,"^17",1,"^18",true,"^X",["^Y",["^Z",["^Y",[["^19"]]]]],"^[","Peek next char."],"~$linebreak?",["^ ","^Q",null,"^R",["^ ","^S","/Users/shivamsinghal/projects/open-source/clj-formatter/out/rewrite_clj/reader.cljc","^T",48,"^U",7,"^V",48,"^W",17,"^X",["^Y",["^Z",["^Y",[["~$c"]]]]],"^[","Checks whether the character is a newline"],"^7","~$rewrite-clj.reader/linebreak?","^S","out/rewrite_clj/reader.cljc","^W",17,"^11",["^Y",[["~$c"]]],"^12",null,"^13",["^Y",[null,null]],"^U",1,"^14",false,"^T",48,"^15","^16","^V",48,"^17",1,"^18",true,"^X",["^Y",["^Z",["^Y",[["~$c"]]]]],"^[","Checks whether the character is a newline"],"~$boundary?",["^ ","^Q",null,"^R",["^ ","^S","/Users/shivamsinghal/projects/open-source/clj-formatter/out/rewrite_clj/reader.cljc","^T",30,"^U",7,"^V",30,"^W",16,"^X",["^Y",["^Z",["^Y",[["~$c"]]]]],"^[","Check whether a given char is a token boundary."],"^7","~$rewrite-clj.reader/boundary?","^S","out/rewrite_clj/reader.cljc","^W",16,"^11",["^Y",[["~$c"]]],"^12",null,"^13",["^Y",[null,null]],"^U",1,"^14",false,"^T",30,"^15","^16","^V",30,"^17",1,"^18",true,"^X",["^Y",["^Z",["^Y",[["~$c"]]]]],"^[","Check whether a given char is a token boundary."],"~$throw-reader",["^ ","^Q",null,"^R",["^ ","^S","/Users/shivamsinghal/projects/open-source/clj-formatter/out/rewrite_clj/reader.cljc","^T",18,"^U",7,"^V",18,"^W",19,"^X",["^Y",["^Z",["^Y",[["^19","~$fmt","~$&","~$data"]]]]],"^[","Throw reader exception, including line line/column.","~:top-fn",["^ ","^14",true,"~:fixed-arity",2,"^17",2,"^11",[["^Y",["^19","^1B","^1C"]]],"^X",["^Y",[["^19","^1B","~$&","^1C"]]],"^13",["^Y",[null]]]],"^7","~$rewrite-clj.reader/throw-reader","^S","out/rewrite_clj/reader.cljc","^W",19,"^1D",["^ ","^14",true,"^1E",2,"^17",2,"^11",[["^Y",["^19","^1B","^1C"]]],"^X",["^Y",[["^19","^1B","~$&","^1C"]]],"^13",["^Y",[null]]],"^11",[["^Y",["^19","^1B","^1C"]]],"^12",null,"^1E",2,"^13",["^Y",[null]],"^U",1,"^14",true,"~:methods",[["^ ","^1E",2,"^14",true,"~:tag","~$ignore"]],"^T",18,"^15","^1;","^V",18,"^17",2,"^18",true,"^X",["^Y",[["^19","^1B","~$&","^1C"]]],"^[","Throw reader exception, including line line/column."],"~$comma?",["^ ","^Q",null,"^R",["^ ","^S","/Users/shivamsinghal/projects/open-source/clj-formatter/out/rewrite_clj/reader.cljc","^T",38,"^U",7,"^V",38,"^W",13,"^X",["^Y",["^Z",["^Y",[["~$c"]]]]]],"^7","~$rewrite-clj.reader/comma?","^S","out/rewrite_clj/reader.cljc","^W",13,"^11",["^Y",[["~$c"]]],"^12",null,"^13",["^Y",[null,null]],"^U",1,"^14",false,"^T",38,"^15","^16","^V",38,"^17",1,"^18",true,"^X",["^Y",["^Z",["^Y",[["~$c"]]]]]],"~$unread",["^ ","^Q",null,"^R",["^ ","^S","/Users/shivamsinghal/projects/open-source/clj-formatter/out/rewrite_clj/reader.cljc","^T",122,"^U",7,"^V",122,"^W",13,"^X",["^Y",["^Z",["^Y",[["^19","~$ch"]]]]],"^[","Unreads a char. Puts the char back on the reader."],"^7","~$rewrite-clj.reader/unread","^S","out/rewrite_clj/reader.cljc","^W",13,"^11",["^Y",[["^19","^1M"]]],"^12",null,"^13",["^Y",[null,null]],"^U",1,"^14",false,"^T",122,"^15","^1;","^V",122,"^17",2,"^18",true,"^X",["^Y",["^Z",["^Y",[["^19","^1M"]]]]],"^[","Unreads a char. Puts the char back on the reader."],"~$whitespace-or-boundary?",["^ ","^Q",null,"^R",["^ ","^S","/Users/shivamsinghal/projects/open-source/clj-formatter/out/rewrite_clj/reader.cljc","^T",60,"^U",7,"^V",60,"^W",30,"^X",["^Y",["^Z",["^Y",[["~$c"]]]]]],"^7","~$rewrite-clj.reader/whitespace-or-boundary?","^S","out/rewrite_clj/reader.cljc","^W",30,"^11",["^Y",[["~$c"]]],"^12",null,"^13",["^Y",[null,null]],"^U",1,"^14",false,"^T",60,"^15",["^4",[null,"^16"]],"^V",60,"^17",1,"^18",true,"^X",["^Y",["^Z",["^Y",[["~$c"]]]]]],"~$read-include-linebreak",["^ ","^Q",null,"^R",["^ ","^S","/Users/shivamsinghal/projects/open-source/clj-formatter/out/rewrite_clj/reader.cljc","^T",97,"^U",7,"^V",97,"^W",29,"^X",["^Y",["^Z",["^Y",[["^19"]]]]],"^[","Read until linebreak and include it."],"^7","~$rewrite-clj.reader/read-include-linebreak","^S","out/rewrite_clj/reader.cljc","^W",29,"^11",["^Y",[["^19"]]],"^12",null,"^13",["^Y",[null,null]],"^U",1,"^14",false,"^T",97,"^15","^1<","^V",97,"^17",1,"^18",true,"^X",["^Y",["^Z",["^Y",[["^19"]]]]],"^[","Read until linebreak and include it."],"~$string-reader",["^ ","^Q",null,"^R",["^ ","^S","/Users/shivamsinghal/projects/open-source/clj-formatter/out/rewrite_clj/reader.cljc","^T",261,"^U",7,"^V",261,"^W",20,"^X",["^Y",["^Z",["^Y",[["~$s"]]]]],"^[","Create reader for strings."],"^7","~$rewrite-clj.reader/string-reader","^S","out/rewrite_clj/reader.cljc","^W",20,"^11",["^Y",[["~$s"]]],"^12",null,"^13",["^Y",[null,null]],"^U",1,"^14",false,"^T",261,"^15","^1;","^V",261,"^17",1,"^18",true,"^X",["^Y",["^Z",["^Y",[["~$s"]]]]],"^[","Create reader for strings."],"~$read-while",["^ ","^Q",null,"^R",["^ ","^S","/Users/shivamsinghal/projects/open-source/clj-formatter/out/rewrite_clj/reader.cljc","^T",67,"^U",7,"^V",67,"^W",17,"^X",["^Y",["^Z",["^Y",[["^19","~$p?"],["^19","^1V","~$eof?"]]]]],"^[","Read while the chars fulfill the given condition. Ignores\n    the unmatching char.","^1D",["^ ","^14",false,"^1E",3,"^17",3,"^11",[["^19","^1V"],["^19","^1V","^1W"]],"^X",["^Y",[["^19","^1V"],["^19","^1V","^1W"]]],"^13",["^Y",[null,null]]]],"^7","~$rewrite-clj.reader/read-while","^S","out/rewrite_clj/reader.cljc","^W",17,"^1D",["^ ","^14",false,"^1E",3,"^17",3,"^11",[["^19","^1V"],["^19","^1V","^1W"]],"^X",["^Y",[["^19","^1V"],["^19","^1V","^1W"]]],"^13",["^Y",[null,null]]],"^11",[["^19","^1V"],["^19","^1V","^1W"]],"^12",null,"^1E",3,"^13",["^Y",[null,null]],"^U",1,"^14",false,"^1G",[["^ ","^1E",2,"^14",false,"^1H","^1;"],["^ ","^1E",3,"^14",false,"^1H","^1;"]],"^T",67,"^V",67,"^17",3,"^18",true,"^X",["^Y",[["^19","^1V"],["^19","^1V","^1W"]]],"^[","Read while the chars fulfill the given condition. Ignores\n    the unmatching char."],"^1I",["^ ","^Q",null,"^R",["^ ","^S","/Users/shivamsinghal/projects/open-source/clj-formatter/out/rewrite_clj/reader.cljc","^T",111,"^U",7,"^V",111,"^W",13,"^X",["^Y",["^Z",["^Y",[["^19"]]]]],"^[","Ignore the next character."],"^7","~$rewrite-clj.reader/ignore","^S","out/rewrite_clj/reader.cljc","^W",13,"^11",["^Y",[["^19"]]],"^12",null,"^13",["^Y",[null,null]],"^U",1,"^14",false,"^T",111,"^15","~$clj-nil","^V",111,"^17",1,"^18",true,"^X",["^Y",["^Z",["^Y",[["^19"]]]]],"^[","Ignore the next character."],"~$read-n",["^ ","^Q",null,"^R",["^ ","^S","/Users/shivamsinghal/projects/open-source/clj-formatter/out/rewrite_clj/reader.cljc","^T",160,"^U",7,"^V",160,"^W",13,"^X",["^Y",["^Z",["^Y",[["^19","~$node-tag","~$read-fn","^1V","~$n"]]]]],"^[","Call the given function on the given reader until `n` values matching `p?` have been\n   collected."],"^7","~$rewrite-clj.reader/read-n","^S","out/rewrite_clj/reader.cljc","^W",13,"^11",["^Y",[["^19","^20","^21","^1V","~$n"]]],"^12",null,"^13",["^Y",[null,null]],"^U",1,"^14",false,"^T",160,"^15",["^4",["~$clj","~$cljs.core/IVector"]],"^V",160,"^17",5,"^18",true,"^X",["^Y",["^Z",["^Y",[["^19","^20","^21","^1V","~$n"]]]]],"^[","Call the given function on the given reader until `n` values matching `p?` have been\n   collected."],"~$string->edn",["^ ","^Q",null,"^R",["^ ","^S","/Users/shivamsinghal/projects/open-source/clj-formatter/out/rewrite_clj/reader.cljc","^T",106,"^U",7,"^V",106,"^W",18,"^X",["^Y",["^Z",["^Y",[["~$s"]]]]],"^[","Convert string to EDN value."],"^7","~$rewrite-clj.reader/string->edn","^S","out/rewrite_clj/reader.cljc","^W",18,"^11",["^Y",[["~$s"]]],"^12",null,"^13",["^Y",[null,null]],"^U",1,"^14",false,"^T",106,"^15","^1;","^V",106,"^17",1,"^18",true,"^X",["^Y",["^Z",["^Y",[["~$s"]]]]],"^[","Convert string to EDN value."],"~$read-until",["^ ","^Q",null,"^R",["^ ","^S","/Users/shivamsinghal/projects/open-source/clj-formatter/out/rewrite_clj/reader.cljc","^T",88,"^U",7,"^V",88,"^W",17,"^X",["^Y",["^Z",["^Y",[["^19","^1V"]]]]],"^[","Read until a char fulfills the given condition. Ignores the\n   matching char."],"^7","~$rewrite-clj.reader/read-until","^S","out/rewrite_clj/reader.cljc","^W",17,"^11",["^Y",[["^19","^1V"]]],"^12",null,"^13",["^Y",[null,null]],"^U",1,"^14",false,"^T",88,"^15","^1;","^V",88,"^17",2,"^18",true,"^X",["^Y",["^Z",["^Y",[["^19","^1V"]]]]],"^[","Read until a char fulfills the given condition. Ignores the\n   matching char."],"^6",["^ ","^Q",null,"^R",["^ ","^S","/Users/shivamsinghal/projects/open-source/clj-formatter/out/rewrite_clj/reader.cljc","^T",117,"^U",7,"^V",117,"^W",11,"^X",["^Y",["^Z",["^Y",[["^19"]]]]],"^[","Read next char."],"^7","~$rewrite-clj.reader/next","^S","out/rewrite_clj/reader.cljc","^W",11,"^11",["^Y",[["^19"]]],"^12",null,"^13",["^Y",[null,null]],"^U",1,"^14",false,"^T",117,"^15","^1;","^V",117,"^17",1,"^18",true,"^X",["^Y",["^Z",["^Y",[["^19"]]]]],"^[","Read next char."],"~$read-repeatedly",["^ ","^Q",null,"^R",["^ ","^S","/Users/shivamsinghal/projects/open-source/clj-formatter/out/rewrite_clj/reader.cljc","^T",152,"^U",7,"^V",152,"^W",22,"^X",["^Y",["^Z",["^Y",[["^19","^21"]]]]],"^[","Call the given function on the given reader until it returns\n   a non-truthy value."],"^7","~$rewrite-clj.reader/read-repeatedly","^S","out/rewrite_clj/reader.cljc","^W",22,"^11",["^Y",[["^19","^21"]]],"^12",null,"^13",["^Y",[null,null]],"^U",1,"^14",false,"^T",152,"^15","^1;","^V",152,"^17",2,"^18",true,"^X",["^Y",["^Z",["^Y",[["^19","^21"]]]]],"^[","Call the given function on the given reader until it returns\n   a non-truthy value."],"~$read-keyword",["^ ","^Q",null,"^R",["^ ","^S","/Users/shivamsinghal/projects/open-source/clj-formatter/out/rewrite_clj/reader.cljc","^T",183,"^U",7,"^V",183,"^W",19,"^X",["^Y",["^Z",["^Y",[["^19"]]]]],"^[","This customized version of clojure.tools.reader.edn's read-keyword allows for\n  an embedded `::` in a keyword to to support [garden-style keywords](https://github.com/noprompt/garden)\n  like `:&::before`. This function was transcribed from clj-kondo."],"^7","~$rewrite-clj.reader/read-keyword","^S","out/rewrite_clj/reader.cljc","^W",19,"^11",["^Y",[["^19"]]],"^12",null,"^13",["^Y",[null,null]],"^U",1,"^14",false,"^T",183,"^15","~$cljs.core/Keyword","^V",183,"^17",1,"^18",true,"^X",["^Y",["^Z",["^Y",[["^19"]]]]],"^[","This customized version of clojure.tools.reader.edn's read-keyword allows for\n  an embedded `::` in a keyword to to support [garden-style keywords](https://github.com/noprompt/garden)\n  like `:&::before`. This function was transcribed from clj-kondo."],"~$space?",["^ ","^Q",null,"^R",["^ ","^S","/Users/shivamsinghal/projects/open-source/clj-formatter/out/rewrite_clj/reader.cljc","^T",53,"^U",7,"^V",53,"^W",13,"^X",["^Y",["^Z",["^Y",[["~$c"]]]]],"^[","Checks whether the character is a space"],"^7","~$rewrite-clj.reader/space?","^S","out/rewrite_clj/reader.cljc","^W",13,"^11",["^Y",[["~$c"]]],"^12",null,"^13",["^Y",[null,null]],"^U",1,"^14",false,"^T",53,"^15",["^4",[null,"^16"]],"^V",53,"^17",1,"^18",true,"^X",["^Y",["^Z",["^Y",[["~$c"]]]]],"^[","Checks whether the character is a space"],"~$read-with-meta",["^ ","^Q",null,"^R",["^ ","^S","/Users/shivamsinghal/projects/open-source/clj-formatter/out/rewrite_clj/reader.cljc","^T",143,"^U",7,"^V",143,"^W",21,"^X",["^Y",["^Z",["^Y",[["^19","^21"]]]]],"^[","Use the given function to read value, then attach row/col metadata."],"^7","~$rewrite-clj.reader/read-with-meta","^S","out/rewrite_clj/reader.cljc","^W",21,"^11",["^Y",[["^19","^21"]]],"^12",null,"^13",["^Y",[null,null]],"^U",1,"^14",false,"^T",143,"^15",["^4",["^23","~$cljs.core/MetaFn","^1Z"]],"^V",143,"^17",2,"^18",true,"^X",["^Y",["^Z",["^Y",[["^19","^21"]]]]],"^[","Use the given function to read value, then attach row/col metadata."],"~$position",["^ ","^Q",null,"^R",["^ ","^S","/Users/shivamsinghal/projects/open-source/clj-formatter/out/rewrite_clj/reader.cljc","^T",137,"^U",7,"^V",137,"^W",15,"^X",["^Y",["^Z",["^Y",[["^19","~$row-k","~$col-k"]]]]],"^[","Create map of `row-k` and `col-k` representing the current reader position."],"^7","~$rewrite-clj.reader/position","^S","out/rewrite_clj/reader.cljc","^W",15,"^11",["^Y",[["^19","^2E","^2F"]]],"^12",null,"^13",["^Y",[null,null]],"^U",1,"^14",false,"^T",137,"^15","~$cljs.core/IMap","^V",137,"^17",3,"^18",true,"^X",["^Y",["^Z",["^Y",[["^19","^2E","^2F"]]]]],"^[","Create map of `row-k` and `col-k` representing the current reader position."]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^4",["~:end-row","^@","~:private","~:ns","^7","~$rdr","~$validate-leading?","^S","^W","^1D","~$cljs.tools.reader.edn/read-token","^11","^1E","^13","^U","^14","^T","~$read-token","~:keyword","~:col","^V","~$initch","^17","~:end-col","^X","^[","~$kind","~:test","~:row"]],"~:order",["^2Z","^2U","^2M","^2W","^2R","^2N","^2O","^7","^S","^W","^1D","^U","^T","^V","^X","^[","^2Y","^@","^2S","^14","^1E","^17","^11","^13","^2P","^2X","^2V","^2Q","^2T"]],"^[",null,"~:as-aliases",["^ "]]