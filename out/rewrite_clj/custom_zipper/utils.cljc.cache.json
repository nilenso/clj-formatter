["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$rewrite-clj.custom-zipper.utils","~:imports",null,"~:requires",["^ ","~$zraw","~$rewrite-clj.custom-zipper.core","^:","^:"],"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$update-in-path",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/Users/shivamsinghal/projects/open-source/clj-formatter/out/rewrite_clj/custom_zipper/utils.cljc","~:line",8,"~:column",8,"~:end-line",8,"~:end-column",22,"~:private",true,"~:arglists",["~#list",["~$quote",["^H",[[["~$node","~$path","~:as","~$loc"],"~$k","~$f"]]]]]],"^F",true,"^5","~$rewrite-clj.custom-zipper.utils/update-in-path","^A","out/rewrite_clj/custom_zipper/utils.cljc","^E",22,"~:method-params",["^H",[["~$p__3026","~$k","~$f"]]],"~:protocol-impl",null,"~:arglists-meta",["^H",[null,null]],"^C",1,"~:variadic?",false,"^B",8,"~:ret-tag",["^4",[null,"~$clj","~$cljs.core/MetaFn","~$clj-nil"]],"^D",8,"~:max-fixed-arity",3,"~:fn-var",true,"^G",["^H",["^I",["^H",[[["^J","^K","^L","^M"],"~$k","~$f"]]]]]],"~$remove-right",["^ ","^?",null,"^@",["^ ","^A","/Users/shivamsinghal/projects/open-source/clj-formatter/out/rewrite_clj/custom_zipper/utils.cljc","^B",17,"^C",7,"^D",17,"^E",19,"^G",["^H",["^I",["^H",[["^M"]]]]],"~:doc","Remove right sibling of the current node (if there is one)."],"^5","~$rewrite-clj.custom-zipper.utils/remove-right","^A","out/rewrite_clj/custom_zipper/utils.cljc","^E",19,"^O",["^H",[["^M"]]],"^Q",null,"^R",["^H",[null,null]],"^C",1,"^S",false,"^B",17,"^T",["^4",[null,"^U","~$any","^V","^W"]],"^D",17,"^X",1,"^Y",true,"^G",["^H",["^I",["^H",[["^M"]]]]],"^[","Remove right sibling of the current node (if there is one)."],"~$remove-left",["^ ","^?",null,"^@",["^ ","^A","/Users/shivamsinghal/projects/open-source/clj-formatter/out/rewrite_clj/custom_zipper/utils.cljc","^B",27,"^C",7,"^D",27,"^E",18,"^G",["^H",["^I",["^H",[["^M"]]]]],"^[","Remove left sibling of the current node (if there is one)."],"^5","~$rewrite-clj.custom-zipper.utils/remove-left","^A","out/rewrite_clj/custom_zipper/utils.cljc","^E",18,"^O",["^H",[["^M"]]],"^Q",null,"^R",["^H",[null,null]],"^C",1,"^S",false,"^B",27,"^T",["^4",[null,"^U","^11","^V","^W"]],"^D",27,"^X",1,"^Y",true,"^G",["^H",["^I",["^H",[["^M"]]]]],"^[","Remove left sibling of the current node (if there is one)."],"~$remove-right-while",["^ ","^?",null,"^@",["^ ","^A","/Users/shivamsinghal/projects/open-source/clj-formatter/out/rewrite_clj/custom_zipper/utils.cljc","^B",40,"^C",7,"^D",40,"^E",25,"^G",["^H",["^I",["^H",[["~$zloc","~$p?"]]]]],"^[","Remove elements to the right of the current zipper location as long as\n   the given predicate matches."],"^5","~$rewrite-clj.custom-zipper.utils/remove-right-while","^A","out/rewrite_clj/custom_zipper/utils.cljc","^E",25,"^O",["^H",[["^15","^16"]]],"^Q",null,"^R",["^H",[null,null]],"^C",1,"^S",false,"^B",40,"^D",40,"^X",2,"^Y",true,"^G",["^H",["^I",["^H",[["^15","^16"]]]]],"^[","Remove elements to the right of the current zipper location as long as\n   the given predicate matches."],"~$remove-left-while",["^ ","^?",null,"^@",["^ ","^A","/Users/shivamsinghal/projects/open-source/clj-formatter/out/rewrite_clj/custom_zipper/utils.cljc","^B",51,"^C",7,"^D",51,"^E",24,"^G",["^H",["^I",["^H",[["^15","^16"]]]]],"^[","Remove elements to the left of the current zipper location as long as\n   the given predicate matches."],"^5","~$rewrite-clj.custom-zipper.utils/remove-left-while","^A","out/rewrite_clj/custom_zipper/utils.cljc","^E",24,"^O",["^H",[["^15","^16"]]],"^Q",null,"^R",["^H",[null,null]],"^C",1,"^S",false,"^B",51,"^D",51,"^X",2,"^Y",true,"^G",["^H",["^I",["^H",[["^15","^16"]]]]],"^[","Remove elements to the left of the current zipper location as long as\n   the given predicate matches."],"~$remove-and-move-left",["^ ","^?",null,"^@",["^ ","^A","/Users/shivamsinghal/projects/open-source/clj-formatter/out/rewrite_clj/custom_zipper/utils.cljc","^B",64,"^C",7,"^D",64,"^E",27,"^G",["^H",["^I",["^H",[["^M"]]]]],"^[","Remove current node and move left. If current node is at the leftmost\n   location, returns `nil`."],"^5","~$rewrite-clj.custom-zipper.utils/remove-and-move-left","^A","out/rewrite_clj/custom_zipper/utils.cljc","^E",27,"^O",["^H",[["^M"]]],"^Q",null,"^R",["^H",[null,null]],"^C",1,"^S",false,"^B",64,"^T",["^4",["^U","^11","^V","^W"]],"^D",64,"^X",1,"^Y",true,"^G",["^H",["^I",["^H",[["^M"]]]]],"^[","Remove current node and move left. If current node is at the leftmost\n   location, returns `nil`."],"~$remove-and-move-right",["^ ","^?",null,"^@",["^ ","^A","/Users/shivamsinghal/projects/open-source/clj-formatter/out/rewrite_clj/custom_zipper/utils.cljc","^B",85,"^C",7,"^D",85,"^E",28,"^G",["^H",["^I",["^H",[["^M"]]]]],"^[","Remove current node and move right. If current node is at the rightmost\n   location, returns `nil`."],"^5","~$rewrite-clj.custom-zipper.utils/remove-and-move-right","^A","out/rewrite_clj/custom_zipper/utils.cljc","^E",28,"^O",["^H",[["^M"]]],"^Q",null,"^R",["^H",[null,null]],"^C",1,"^S",false,"^B",85,"^T",["^4",["^U","^11","^V","^W"]],"^D",85,"^X",1,"^Y",true,"^G",["^H",["^I",["^H",[["^M"]]]]],"^[","Remove current node and move right. If current node is at the rightmost\n   location, returns `nil`."],"~$remove-and-move-up",["^ ","^?",null,"^@",["^ ","^A","/Users/shivamsinghal/projects/open-source/clj-formatter/out/rewrite_clj/custom_zipper/utils.cljc","^B",105,"^C",7,"^D",105,"^E",25,"^G",["^H",["^I",["^H",[["^M"]]]]],"^[","Remove the current node and move up.\n    `[a [b |c d]] -> [a |[b d]]`\n    `[a [|b c d]] -> [a |[c d]]`"],"^5","~$rewrite-clj.custom-zipper.utils/remove-and-move-up","^A","out/rewrite_clj/custom_zipper/utils.cljc","^E",25,"^O",["^H",[["^M"]]],"^Q",null,"^R",["^H",[null,null]],"^C",1,"^S",false,"^B",105,"^T",["^4",[null,"^U","^11","^V","^W"]],"^D",105,"^X",1,"^Y",true,"^G",["^H",["^I",["^H",[["^M"]]]]],"^[","Remove the current node and move up.\n    `[a [b |c d]] -> [a |[b d]]`\n    `[a [|b c d]] -> [a |[c d]]`"]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^4",["~:ppath","~:r","~:node","~:l","~:pnodes","~:changed?","~:right","~:position","~:left"]],"~:order",["^1G","^1H","~:r","^1J","^1I","~:l","^1E","^1D","^1F"]],"^[",null,"~:as-aliases",["^ "]]