["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$rewrite-clj.parser.token","~:imports",null,"~:requires",["^ ","~$ntoken","~$rewrite-clj.node.token","^:","^:","~$r","~$rewrite-clj.reader","^;","^;"],"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$read-to-boundary",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/Users/shivamsinghal/projects/open-source/clj-formatter/out/rewrite_clj/parser/token.cljc","~:line",7,"~:column",8,"~:end-line",7,"~:end-column",24,"~:private",true,"~:arglists",["~#list",["~$quote",["^I",[["~$reader","~$&",["~$allowed"]]]]]],"~:top-fn",["^ ","~:variadic?",true,"~:fixed-arity",1,"~:max-fixed-arity",1,"~:method-params",[["^I",["^K",["^L"]]]],"^H",["^I",[["^K","~$&",["^L"]]]],"~:arglists-meta",["^I",[null]]]],"^G",true,"^5","~$rewrite-clj.parser.token/read-to-boundary","^B","out/rewrite_clj/parser/token.cljc","^F",24,"^M",["^ ","^N",true,"^O",1,"^P",1,"^Q",[["^I",["^K",["^L"]]]],"^H",["^I",[["^K","~$&",["^L"]]]],"^R",["^I",[null]]],"^Q",[["^I",["^K",["^L"]]]],"~:protocol-impl",null,"^O",1,"^R",["^I",[null]],"^D",1,"^N",true,"~:methods",[["^ ","^O",1,"^N",true,"~:tag","~$any"]],"^C",7,"~:ret-tag","^W","^E",7,"^P",1,"~:fn-var",true,"^H",["^I",[["^K","~$&",["^L"]]]]],"~$read-to-char-boundary",["^ ","^@",null,"^A",["^ ","^B","/Users/shivamsinghal/projects/open-source/clj-formatter/out/rewrite_clj/parser/token.cljc","^C",15,"^D",8,"^E",15,"^F",29,"^G",true,"^H",["^I",["^J",["^I",[["^K"]]]]]],"^G",true,"^5","~$rewrite-clj.parser.token/read-to-char-boundary","^B","out/rewrite_clj/parser/token.cljc","^F",29,"^Q",["^I",[["^K"]]],"^T",null,"^R",["^I",[null,null]],"^D",1,"^N",false,"^C",15,"^X","~$string","^E",15,"^P",1,"^Y",true,"^H",["^I",["^J",["^I",[["^K"]]]]]],"~$symbol-node",["^ ","^@",null,"^A",["^ ","^B","/Users/shivamsinghal/projects/open-source/clj-formatter/out/rewrite_clj/parser/token.cljc","^C",23,"^D",8,"^E",23,"^F",19,"^G",true,"^H",["^I",["^J",["^I",[["^K","~$value","~$value-string"]]]]],"~:doc","Symbols allow for certain boundary characters that have\n   to be handled explicitly."],"^G",true,"^5","~$rewrite-clj.parser.token/symbol-node","^B","out/rewrite_clj/parser/token.cljc","^F",19,"^Q",["^I",[["^K","^12","^13"]]],"^T",null,"^R",["^I",[null,null]],"^D",1,"^N",false,"^C",23,"^X","~$clj","^E",23,"^P",3,"^Y",true,"^H",["^I",["^J",["^I",[["^K","^12","^13"]]]]],"^14","Symbols allow for certain boundary characters that have\n   to be handled explicitly."],"~$parse-token",["^ ","^@",null,"^A",["^ ","^B","/Users/shivamsinghal/projects/open-source/clj-formatter/out/rewrite_clj/parser/token.cljc","^C",37,"^D",7,"^E",37,"^F",18,"^H",["^I",["^J",["^I",[["^K"]]]]],"^14","Parse a single token."],"^5","~$rewrite-clj.parser.token/parse-token","^B","out/rewrite_clj/parser/token.cljc","^F",18,"^Q",["^I",[["^K"]]],"^T",null,"^R",["^I",[null,null]],"^D",1,"^N",false,"^C",37,"^X","^16","^E",37,"^P",1,"^Y",true,"^H",["^I",["^J",["^I",[["^K"]]]]],"^14","Parse a single token."]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"^14",null,"~:as-aliases",["^ "]]