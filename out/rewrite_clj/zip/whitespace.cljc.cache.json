["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$rewrite-clj.zip.whitespace","~:imports",null,"~:requires",["^ ","~$zraw","~$rewrite-clj.custom-zipper.core","^:","^:","~$ncomment","~$rewrite-clj.node.comment","^<","^<","~$nextras","~$rewrite-clj.node.extras","^>","^>","~$nwhitespace","~$rewrite-clj.node.whitespace","^@","^@"],"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$insert-space-left",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/Users/shivamsinghal/projects/open-source/clj-formatter/out/rewrite_clj/zip/whitespace.cljc","~:line",65,"~:column",7,"~:end-line",65,"~:end-column",24,"~:arglists",["~#list",["~$quote",["^M",[["~$zloc"],["^O","~$n"]]]]],"~:doc","Return zipper with `n` space whitespace node inserted to the left of the current node in `zloc`, without moving location.\n   `n` defaults to 1.","~:top-fn",["^ ","~:variadic?",false,"~:fixed-arity",2,"~:max-fixed-arity",2,"~:method-params",[["^O"],["^O","~$n"]],"^L",["^M",[["^O"],["^O","~$n"]]],"~:arglists-meta",["^M",[null,null]]]],"^5","~$rewrite-clj.zip.whitespace/insert-space-left","^G","out/rewrite_clj/zip/whitespace.cljc","^K",24,"^Q",["^ ","^R",false,"^S",2,"^T",2,"^U",[["^O"],["^O","~$n"]],"^L",["^M",[["^O"],["^O","~$n"]]],"^V",["^M",[null,null]]],"^U",[["^O"],["^O","~$n"]],"~:protocol-impl",null,"^S",2,"^V",["^M",[null,null]],"^I",1,"^R",false,"~:methods",[["^ ","^S",1,"^R",false,"~:tag","~$any"],["^ ","^S",2,"^R",false,"^Z",["^4",[null,"~$clj","^[","~$cljs.core/MetaFn","~$clj-nil"]]]],"^H",65,"^J",65,"^T",2,"~:fn-var",true,"^L",["^M",[["^O"],["^O","~$n"]]],"^P","Return zipper with `n` space whitespace node inserted to the left of the current node in `zloc`, without moving location.\n   `n` defaults to 1."],"~$whitespace?",["^ ","^E",null,"^F",["^ ","^G","/Users/shivamsinghal/projects/open-source/clj-formatter/out/rewrite_clj/zip/whitespace.cljc","^H",11,"^I",7,"^J",11,"^K",18,"^L",["^M",["^N",["^M",[["^O"]]]]],"^P","Returns true when the current the node in `zloc` is a Clojure whitespace (which includes the comma)."],"^5","~$rewrite-clj.zip.whitespace/whitespace?","^G","out/rewrite_clj/zip/whitespace.cljc","^K",18,"^U",["^M",[["^O"]]],"^X",null,"^V",["^M",[null,null]],"^I",1,"^R",false,"^H",11,"~:ret-tag",["^4",["~$boolean","^12"]],"^J",11,"^T",1,"^13",true,"^L",["^M",["^N",["^M",[["^O"]]]]],"^P","Returns true when the current the node in `zloc` is a Clojure whitespace (which includes the comma)."],"~$insert-newline-left",["^ ","^E",null,"^F",["^ ","^G","/Users/shivamsinghal/projects/open-source/clj-formatter/out/rewrite_clj/zip/whitespace.cljc","^H",85,"^I",7,"^J",85,"^K",26,"^L",["^M",["^N",["^M",[["^O"],["^O","~$n"]]]]],"^P","Return zipper with `n` newlines node inserted to the left of the current node in `zloc`, without moving location.\n   `n` defaults to 1.","^Q",["^ ","^R",false,"^S",2,"^T",2,"^U",[["^O"],["^O","~$n"]],"^L",["^M",[["^O"],["^O","~$n"]]],"^V",["^M",[null,null]]]],"^5","~$rewrite-clj.zip.whitespace/insert-newline-left","^G","out/rewrite_clj/zip/whitespace.cljc","^K",26,"^Q",["^ ","^R",false,"^S",2,"^T",2,"^U",[["^O"],["^O","~$n"]],"^L",["^M",[["^O"],["^O","~$n"]]],"^V",["^M",[null,null]]],"^U",[["^O"],["^O","~$n"]],"^X",null,"^S",2,"^V",["^M",[null,null]],"^I",1,"^R",false,"^Y",[["^ ","^S",1,"^R",false,"^Z","^["],["^ ","^S",2,"^R",false,"^Z",["^4",["^10","^[","^11","^12"]]]],"^H",85,"^J",85,"^T",2,"^13",true,"^L",["^M",[["^O"],["^O","~$n"]]],"^P","Return zipper with `n` newlines node inserted to the left of the current node in `zloc`, without moving location.\n   `n` defaults to 1."],"~$linebreak?",["^ ","^E",null,"^F",["^ ","^G","/Users/shivamsinghal/projects/open-source/clj-formatter/out/rewrite_clj/zip/whitespace.cljc","^H",16,"^I",7,"^J",16,"^K",17,"^L",["^M",["^N",["^M",[["^O"]]]]],"^P","Returns true when the current node in `zloc` is a linebreak."],"^5","~$rewrite-clj.zip.whitespace/linebreak?","^G","out/rewrite_clj/zip/whitespace.cljc","^K",17,"^U",["^M",[["^O"]]],"^X",null,"^V",["^M",[null,null]],"^I",1,"^R",false,"^H",16,"^16",["^4",["^17","^12"]],"^J",16,"^T",1,"^13",true,"^L",["^M",["^N",["^M",[["^O"]]]]],"^P","Returns true when the current node in `zloc` is a linebreak."],"~$skip",["^ ","^E",null,"^F",["^ ","^G","/Users/shivamsinghal/projects/open-source/clj-formatter/out/rewrite_clj/zip/whitespace.cljc","^H",40,"^I",7,"^J",40,"^K",11,"^L",["^M",["^N",["^M",[["~$f","~$p?","^O"]]]]],"^P","Return zipper with location moved to first location not satisfying predicate `p?` starting from the node in\n   `zloc` and traversing by function `f`."],"^5","~$rewrite-clj.zip.whitespace/skip","^G","out/rewrite_clj/zip/whitespace.cljc","^K",11,"^U",["^M",[["~$f","^1=","^O"]]],"^X",null,"^V",["^M",[null,null]],"^I",1,"^R",false,"^H",40,"^16",["^4",["^[","^12"]],"^J",40,"^T",3,"^13",true,"^L",["^M",["^N",["^M",[["~$f","^1=","^O"]]]]],"^P","Return zipper with location moved to first location not satisfying predicate `p?` starting from the node in\n   `zloc` and traversing by function `f`."],"~$prepend-space",["^ ","^E",null,"^F",["^ ","^G","/Users/shivamsinghal/projects/open-source/clj-formatter/out/rewrite_clj/zip/whitespace.cljc","^H",101,"^I",7,"^J",101,"^K",20,"^L",["^M",["^N",["^M",[["^O","~$n"],["^O"]]]]],"^P","DEPRECATED: renamed to [[insert-space-left]].","^Q",["^ ","^R",false,"^S",2,"^T",2,"^U",[["^O","~$n"],["^O"]],"^L",["^M",[["^O","~$n"],["^O"]]],"^V",["^M",[null,null]]]],"^5","~$rewrite-clj.zip.whitespace/prepend-space","^G","out/rewrite_clj/zip/whitespace.cljc","^K",20,"^Q",["^ ","^R",false,"^S",2,"^T",2,"^U",[["^O","~$n"],["^O"]],"^L",["^M",[["^O","~$n"],["^O"]]],"^V",["^M",[null,null]]],"^U",[["^O","~$n"],["^O"]],"^X",null,"^S",2,"^V",["^M",[null,null]],"^I",1,"^R",false,"^Y",[["^ ","^S",2,"^R",false,"^Z",["^4",[null,"^10","^[","^11","^12"]]],["^ ","^S",1,"^R",false,"^Z",["^4",[null,"^10","^[","^11","^12"]]]],"^H",101,"^J",101,"^T",2,"^13",true,"^L",["^M",[["^O","~$n"],["^O"]]],"^P","DEPRECATED: renamed to [[insert-space-left]]."],"~$append-newline",["^ ","^E",null,"^F",["^ ","^G","/Users/shivamsinghal/projects/open-source/clj-formatter/out/rewrite_clj/zip/whitespace.cljc","^H",122,"^I",7,"^J",122,"^K",21,"^L",["^M",["^N",["^M",[["^O","~$n"],["^O"]]]]],"^P","DEPRECATED: renamed to [[insert-newline-right]].","^Q",["^ ","^R",false,"^S",2,"^T",2,"^U",[["^O","~$n"],["^O"]],"^L",["^M",[["^O","~$n"],["^O"]]],"^V",["^M",[null,null]]]],"^5","~$rewrite-clj.zip.whitespace/append-newline","^G","out/rewrite_clj/zip/whitespace.cljc","^K",21,"^Q",["^ ","^R",false,"^S",2,"^T",2,"^U",[["^O","~$n"],["^O"]],"^L",["^M",[["^O","~$n"],["^O"]]],"^V",["^M",[null,null]]],"^U",[["^O","~$n"],["^O"]],"^X",null,"^S",2,"^V",["^M",[null,null]],"^I",1,"^R",false,"^Y",[["^ ","^S",2,"^R",false,"^Z",["^4",["^10","^[","^11","^12"]]],["^ ","^S",1,"^R",false,"^Z",["^4",["^10","^[","^11","^12"]]]],"^H",122,"^J",122,"^T",2,"^13",true,"^L",["^M",[["^O","~$n"],["^O"]]],"^P","DEPRECATED: renamed to [[insert-newline-right]]."],"~$prepend-newline",["^ ","^E",null,"^F",["^ ","^G","/Users/shivamsinghal/projects/open-source/clj-formatter/out/rewrite_clj/zip/whitespace.cljc","^H",115,"^I",7,"^J",115,"^K",22,"^L",["^M",["^N",["^M",[["^O","~$n"],["^O"]]]]],"^P","DEPRECATED: renamed to [[insert-newline-left]].","^Q",["^ ","^R",false,"^S",2,"^T",2,"^U",[["^O","~$n"],["^O"]],"^L",["^M",[["^O","~$n"],["^O"]]],"^V",["^M",[null,null]]]],"^5","~$rewrite-clj.zip.whitespace/prepend-newline","^G","out/rewrite_clj/zip/whitespace.cljc","^K",22,"^Q",["^ ","^R",false,"^S",2,"^T",2,"^U",[["^O","~$n"],["^O"]],"^L",["^M",[["^O","~$n"],["^O"]]],"^V",["^M",[null,null]]],"^U",[["^O","~$n"],["^O"]],"^X",null,"^S",2,"^V",["^M",[null,null]],"^I",1,"^R",false,"^Y",[["^ ","^S",2,"^R",false,"^Z",["^4",["^10","^[","^11","^12"]]],["^ ","^S",1,"^R",false,"^Z",["^4",["^10","^[","^11","^12"]]]],"^H",115,"^J",115,"^T",2,"^13",true,"^L",["^M",[["^O","~$n"],["^O"]]],"^P","DEPRECATED: renamed to [[insert-newline-left]]."],"~$append-space",["^ ","^E",null,"^F",["^ ","^G","/Users/shivamsinghal/projects/open-source/clj-formatter/out/rewrite_clj/zip/whitespace.cljc","^H",108,"^I",7,"^J",108,"^K",19,"^L",["^M",["^N",["^M",[["^O","~$n"],["^O"]]]]],"^P","DEPRECATED: renamed to [[insert-space-right]].","^Q",["^ ","^R",false,"^S",2,"^T",2,"^U",[["^O","~$n"],["^O"]],"^L",["^M",[["^O","~$n"],["^O"]]],"^V",["^M",[null,null]]]],"^5","~$rewrite-clj.zip.whitespace/append-space","^G","out/rewrite_clj/zip/whitespace.cljc","^K",19,"^Q",["^ ","^R",false,"^S",2,"^T",2,"^U",[["^O","~$n"],["^O"]],"^L",["^M",[["^O","~$n"],["^O"]]],"^V",["^M",[null,null]]],"^U",[["^O","~$n"],["^O"]],"^X",null,"^S",2,"^V",["^M",[null,null]],"^I",1,"^R",false,"^Y",[["^ ","^S",2,"^R",false,"^Z",["^4",[null,"^10","^[","^11","^12"]]],["^ ","^S",1,"^R",false,"^Z",["^4",[null,"^10","^[","^11","^12"]]]],"^H",108,"^J",108,"^T",2,"^13",true,"^L",["^M",[["^O","~$n"],["^O"]]],"^P","DEPRECATED: renamed to [[insert-space-right]]."],"~$skip-whitespace-left",["^ ","^E",null,"^F",["^ ","^G","/Users/shivamsinghal/projects/open-source/clj-formatter/out/rewrite_clj/zip/whitespace.cljc","^H",58,"^I",7,"^J",58,"^K",27,"^L",["^M",["^N",["^M",[["^O"]]]]],"^P","Return zipper with location moved to first non-whitespace/non-comment starting from current node in `zloc` traversing left."],"^5","~$rewrite-clj.zip.whitespace/skip-whitespace-left","^G","out/rewrite_clj/zip/whitespace.cljc","^K",27,"^U",["^M",[["^O"]]],"^X",null,"^V",["^M",[null,null]],"^I",1,"^R",false,"^H",58,"^16",["^4",["^[","^12"]],"^J",58,"^T",1,"^13",true,"^L",["^M",["^N",["^M",[["^O"]]]]],"^P","Return zipper with location moved to first non-whitespace/non-comment starting from current node in `zloc` traversing left."],"~$insert-space-right",["^ ","^E",null,"^F",["^ ","^G","/Users/shivamsinghal/projects/open-source/clj-formatter/out/rewrite_clj/zip/whitespace.cljc","^H",75,"^I",7,"^J",75,"^K",25,"^L",["^M",["^N",["^M",[["^O"],["^O","~$n"]]]]],"^P","Return zipper with `n` space whitespace node inserted to the right of the current node in `zloc`, without moving location.\n   `n` defaults to 1.","^Q",["^ ","^R",false,"^S",2,"^T",2,"^U",[["^O"],["^O","~$n"]],"^L",["^M",[["^O"],["^O","~$n"]]],"^V",["^M",[null,null]]]],"^5","~$rewrite-clj.zip.whitespace/insert-space-right","^G","out/rewrite_clj/zip/whitespace.cljc","^K",25,"^Q",["^ ","^R",false,"^S",2,"^T",2,"^U",[["^O"],["^O","~$n"]],"^L",["^M",[["^O"],["^O","~$n"]]],"^V",["^M",[null,null]]],"^U",[["^O"],["^O","~$n"]],"^X",null,"^S",2,"^V",["^M",[null,null]],"^I",1,"^R",false,"^Y",[["^ ","^S",1,"^R",false,"^Z","^["],["^ ","^S",2,"^R",false,"^Z",["^4",[null,"^10","^[","^11","^12"]]]],"^H",75,"^J",75,"^T",2,"^13",true,"^L",["^M",[["^O"],["^O","~$n"]]],"^P","Return zipper with `n` space whitespace node inserted to the right of the current node in `zloc`, without moving location.\n   `n` defaults to 1."],"~$skip-whitespace",["^ ","^E",null,"^F",["^ ","^G","/Users/shivamsinghal/projects/open-source/clj-formatter/out/rewrite_clj/zip/whitespace.cljc","^H",50,"^I",7,"^J",50,"^K",22,"^L",["^M",["^N",["^M",[["^O"],["~$f","^O"]]]]],"^P","Return zipper with location moved to first non-whitespace/non-comment starting from current node in `zloc`\n   and traversing by function `f`.\n\n   `f` defaults to [[right]]","^Q",["^ ","^R",false,"^S",2,"^T",2,"^U",[["^O"],["~$f","^O"]],"^L",["^M",[["^O"],["~$f","^O"]]],"^V",["^M",[null,null]]]],"^5","~$rewrite-clj.zip.whitespace/skip-whitespace","^G","out/rewrite_clj/zip/whitespace.cljc","^K",22,"^Q",["^ ","^R",false,"^S",2,"^T",2,"^U",[["^O"],["~$f","^O"]],"^L",["^M",[["^O"],["~$f","^O"]]],"^V",["^M",[null,null]]],"^U",[["^O"],["~$f","^O"]],"^X",null,"^S",2,"^V",["^M",[null,null]],"^I",1,"^R",false,"^Y",[["^ ","^S",1,"^R",false,"^Z","^["],["^ ","^S",2,"^R",false,"^Z",["^4",["^[","^12"]]]],"^H",50,"^J",50,"^T",2,"^13",true,"^L",["^M",[["^O"],["~$f","^O"]]],"^P","Return zipper with location moved to first non-whitespace/non-comment starting from current node in `zloc`\n   and traversing by function `f`.\n\n   `f` defaults to [[right]]"],"~$comment?",["^ ","^E",null,"^F",["^ ","^G","/Users/shivamsinghal/projects/open-source/clj-formatter/out/rewrite_clj/zip/whitespace.cljc","^H",21,"^I",7,"^J",21,"^K",15,"^L",["^M",["^N",["^M",[["^O"]]]]],"^P","Returns true when the current node in `zloc` is a comment."],"^5","~$rewrite-clj.zip.whitespace/comment?","^G","out/rewrite_clj/zip/whitespace.cljc","^K",15,"^U",["^M",[["^O"]]],"^X",null,"^V",["^M",[null,null]],"^I",1,"^R",false,"^H",21,"^16",["^4",["^17","^12"]],"^J",21,"^T",1,"^13",true,"^L",["^M",["^N",["^M",[["^O"]]]]],"^P","Returns true when the current node in `zloc` is a comment."],"~$whitespace-not-linebreak?",["^ ","^E",null,"^F",["^ ","^G","/Users/shivamsinghal/projects/open-source/clj-formatter/out/rewrite_clj/zip/whitespace.cljc","^H",26,"^I",7,"^J",26,"^K",32,"^L",["^M",["^N",["^M",[["^O"]]]]],"^P","Returns true when current node in `zloc` is a whitespace but not a linebreak."],"^5","~$rewrite-clj.zip.whitespace/whitespace-not-linebreak?","^G","out/rewrite_clj/zip/whitespace.cljc","^K",32,"^U",["^M",[["^O"]]],"^X",null,"^V",["^M",[null,null]],"^I",1,"^R",false,"^H",26,"^16",["^4",["^17","^12"]],"^J",26,"^T",1,"^13",true,"^L",["^M",["^N",["^M",[["^O"]]]]],"^P","Returns true when current node in `zloc` is a whitespace but not a linebreak."],"~$insert-newline-right",["^ ","^E",null,"^F",["^ ","^G","/Users/shivamsinghal/projects/open-source/clj-formatter/out/rewrite_clj/zip/whitespace.cljc","^H",92,"^I",7,"^J",92,"^K",27,"^L",["^M",["^N",["^M",[["^O"],["^O","~$n"]]]]],"^P","Return zipper with `n` newlines node inserted to the right of the current node in `zloc`, without moving location.\n   `n` defaults to 1.","^Q",["^ ","^R",false,"^S",2,"^T",2,"^U",[["^O"],["^O","~$n"]],"^L",["^M",[["^O"],["^O","~$n"]]],"^V",["^M",[null,null]]]],"^5","~$rewrite-clj.zip.whitespace/insert-newline-right","^G","out/rewrite_clj/zip/whitespace.cljc","^K",27,"^Q",["^ ","^R",false,"^S",2,"^T",2,"^U",[["^O"],["^O","~$n"]],"^L",["^M",[["^O"],["^O","~$n"]]],"^V",["^M",[null,null]]],"^U",[["^O"],["^O","~$n"]],"^X",null,"^S",2,"^V",["^M",[null,null]],"^I",1,"^R",false,"^Y",[["^ ","^S",1,"^R",false,"^Z","^["],["^ ","^S",2,"^R",false,"^Z",["^4",["^10","^[","^11","^12"]]]],"^H",92,"^J",92,"^T",2,"^13",true,"^L",["^M",[["^O"],["^O","~$n"]]],"^P","Return zipper with `n` newlines node inserted to the right of the current node in `zloc`, without moving location.\n   `n` defaults to 1."],"~$whitespace-or-comment?",["^ ","^E",null,"^F",["^ ","^G","/Users/shivamsinghal/projects/open-source/clj-formatter/out/rewrite_clj/zip/whitespace.cljc","^H",33,"^I",7,"^J",33,"^K",29,"^L",["^M",["^N",["^M",[["^O"]]]]],"^P","Returns true when current node in `zloc` is whitespace or a comment."],"^5","~$rewrite-clj.zip.whitespace/whitespace-or-comment?","^G","out/rewrite_clj/zip/whitespace.cljc","^K",29,"^U",["^M",[["^O"]]],"^X",null,"^V",["^M",[null,null]],"^I",1,"^R",false,"^H",33,"^16",["^4",["^17","^12"]],"^J",33,"^T",1,"^13",true,"^L",["^M",["^N",["^M",[["^O"]]]]],"^P","Returns true when current node in `zloc` is whitespace or a comment."]],"~:cljs.spec/registry-ref",[],"~:require-macros",["^ ","^?","^@","^@","^@"],"^P",null,"~:as-aliases",["^ "]]