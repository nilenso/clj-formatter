["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ "],"~:excludes",["~#set",["~$find"]],"~:name","~$rewrite-clj.zip.findz","~:imports",null,"~:requires",["^ ","~$zraw","~$rewrite-clj.custom-zipper.core","^;","^;","~$base","~$rewrite-clj.zip.base","^=","^=","~$m","~$rewrite-clj.zip.move","^>","^>"],"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","^5",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/Users/shivamsinghal/projects/open-source/clj-formatter/out/rewrite_clj/zip/findz.cljc","~:line",31,"~:column",7,"~:end-line",31,"~:end-column",11,"~:arglists",["~#list",["~$quote",["^J",[["~$zloc","~$p?"],["^L","~$f","^M"]]]]],"~:doc","Return `zloc` located to the first node satisfying predicate `p?` else nil.\n   Search starts at the current node and continues via movement function `f`.\n\n   `f` defaults to [[right]]","~:top-fn",["^ ","~:variadic?",false,"~:fixed-arity",3,"~:max-fixed-arity",3,"~:method-params",[["^L","^M"],["^L","~$f","^M"]],"^I",["^J",[["^L","^M"],["^L","~$f","^M"]]],"~:arglists-meta",["^J",[null,null]]]],"^6","~$rewrite-clj.zip.findz/find","^D","out/rewrite_clj/zip/findz.cljc","^H",11,"^O",["^ ","^P",false,"^Q",3,"^R",3,"^S",[["^L","^M"],["^L","~$f","^M"]],"^I",["^J",[["^L","^M"],["^L","~$f","^M"]]],"^T",["^J",[null,null]]],"^S",[["^L","^M"],["^L","~$f","^M"]],"~:protocol-impl",null,"^Q",3,"^T",["^J",[null,null]],"^F",1,"^P",false,"~:methods",[["^ ","^Q",2,"^P",false,"~:tag","~$any"],["^ ","^Q",3,"^P",false,"^X",["^4",["^Y","~$clj-nil"]]]],"^E",31,"^G",31,"^R",3,"~:fn-var",true,"^I",["^J",[["^L","^M"],["^L","~$f","^M"]]],"^N","Return `zloc` located to the first node satisfying predicate `p?` else nil.\n   Search starts at the current node and continues via movement function `f`.\n\n   `f` defaults to [[right]]"],"~$find-token",["^ ","^B",null,"^C",["^ ","^D","/Users/shivamsinghal/projects/open-source/clj-formatter/out/rewrite_clj/zip/findz.cljc","^E",110,"^F",7,"^G",110,"^H",17,"^I",["^J",["^K",["^J",[["^L","^M"],["^L","~$f","^M"]]]]],"^N","Return `zloc` located to the the first token node satisfying predicate `p?`.\n  Search starts at the current node and continues via movement function `f`.\n\n   `f` defaults to [[right]]","^O",["^ ","^P",false,"^Q",3,"^R",3,"^S",[["^L","^M"],["^L","~$f","^M"]],"^I",["^J",[["^L","^M"],["^L","~$f","^M"]]],"^T",["^J",[null,null]]]],"^6","~$rewrite-clj.zip.findz/find-token","^D","out/rewrite_clj/zip/findz.cljc","^H",17,"^O",["^ ","^P",false,"^Q",3,"^R",3,"^S",[["^L","^M"],["^L","~$f","^M"]],"^I",["^J",[["^L","^M"],["^L","~$f","^M"]]],"^T",["^J",[null,null]]],"^S",[["^L","^M"],["^L","~$f","^M"]],"^V",null,"^Q",3,"^T",["^J",[null,null]],"^F",1,"^P",false,"^W",[["^ ","^Q",2,"^P",false,"^X","^Y"],["^ ","^Q",3,"^P",false,"^X",["^4",["^Y","^Z"]]]],"^E",110,"^G",110,"^R",3,"^[",true,"^I",["^J",[["^L","^M"],["^L","~$f","^M"]]],"^N","Return `zloc` located to the the first token node satisfying predicate `p?`.\n  Search starts at the current node and continues via movement function `f`.\n\n   `f` defaults to [[right]]"],"~$find-next-depth-first",["^ ","^B",null,"^C",["^ ","^D","/Users/shivamsinghal/projects/open-source/clj-formatter/out/rewrite_clj/zip/findz.cljc","^E",77,"^F",7,"^G",77,"^H",28,"^I",["^J",["^K",["^J",[["^L","^M"]]]]],"^N","Return `zloc` located to next node satisfying predicate `p?` else `nil`.\n   Search starts depth-first after the current node."],"^6","~$rewrite-clj.zip.findz/find-next-depth-first","^D","out/rewrite_clj/zip/findz.cljc","^H",28,"^S",["^J",[["^L","^M"]]],"^V",null,"^T",["^J",[null,null]],"^F",1,"^P",false,"^E",77,"~:ret-tag",["^4",["^Y","^Z"]],"^G",77,"^R",2,"^[",true,"^I",["^J",["^K",["^J",[["^L","^M"]]]]],"^N","Return `zloc` located to next node satisfying predicate `p?` else `nil`.\n   Search starts depth-first after the current node."],"~$find-next-token",["^ ","^B",null,"^C",["^ ","^D","/Users/shivamsinghal/projects/open-source/clj-formatter/out/rewrite_clj/zip/findz.cljc","^E",121,"^F",7,"^G",121,"^H",22,"^I",["^J",["^K",["^J",[["^L","^M"],["^L","~$f","^M"]]]]],"^N","Return `zloc` located to the next token node satisfying predicate `p?` else `nil`.\n  Search starts one movement `f` after the current node and continues via `f`.\n\n   `f` defaults to [[right]]","^O",["^ ","^P",false,"^Q",3,"^R",3,"^S",[["^L","^M"],["^L","~$f","^M"]],"^I",["^J",[["^L","^M"],["^L","~$f","^M"]]],"^T",["^J",[null,null]]]],"^6","~$rewrite-clj.zip.findz/find-next-token","^D","out/rewrite_clj/zip/findz.cljc","^H",22,"^O",["^ ","^P",false,"^Q",3,"^R",3,"^S",[["^L","^M"],["^L","~$f","^M"]],"^I",["^J",[["^L","^M"],["^L","~$f","^M"]]],"^T",["^J",[null,null]]],"^S",[["^L","^M"],["^L","~$f","^M"]],"^V",null,"^Q",3,"^T",["^J",[null,null]],"^F",1,"^P",false,"^W",[["^ ","^Q",2,"^P",false,"^X","^Y"],["^ ","^Q",3,"^P",false,"^X",["^4",["^Y","^Z"]]]],"^E",121,"^G",121,"^R",3,"^[",true,"^I",["^J",[["^L","^M"],["^L","~$f","^M"]]],"^N","Return `zloc` located to the next token node satisfying predicate `p?` else `nil`.\n  Search starts one movement `f` after the current node and continues via `f`.\n\n   `f` defaults to [[right]]"],"~$tag-predicate",["^ ","^B",null,"^C",["^ ","^D","/Users/shivamsinghal/projects/open-source/clj-formatter/out/rewrite_clj/zip/findz.cljc","^E",11,"^F",8,"^G",11,"^H",21,"~:private",true,"^I",["^J",["^K",["^J",[["~$t","~$&",["~$additional"]]]]]],"^O",["^ ","^P",true,"^Q",1,"^R",1,"^S",[["^J",["~$t",["^19"]]]],"^I",["^J",[["~$t","~$&",["^19"]]]],"^T",["^J",[null]]]],"^18",true,"^6","~$rewrite-clj.zip.findz/tag-predicate","^D","out/rewrite_clj/zip/findz.cljc","^H",21,"^O",["^ ","^P",true,"^Q",1,"^R",1,"^S",[["^J",["~$t",["^19"]]]],"^I",["^J",[["~$t","~$&",["^19"]]]],"^T",["^J",[null]]],"^S",[["^J",["~$t",["^19"]]]],"^V",null,"^Q",1,"^T",["^J",[null]],"^F",1,"^P",true,"^W",[["^ ","^Q",1,"^P",true,"^X","~$function"]],"^E",11,"^14","^Y","^G",11,"^R",1,"^[",true,"^I",["^J",[["~$t","~$&",["^19"]]]]],"~$find-tag-by-pos",["^ ","^B",null,"^C",["^ ","^D","/Users/shivamsinghal/projects/open-source/clj-formatter/out/rewrite_clj/zip/findz.cljc","^E",104,"^F",7,"^G",104,"^H",22,"^I",["^J",["^K",["^J",[["^L","~$pos","~$t"]]]]],"^N","Return `zloc` located to the last node spanning position `pos` with tag `t` else `nil`.\n  Search is depth-first from the current node."],"^6","~$rewrite-clj.zip.findz/find-tag-by-pos","^D","out/rewrite_clj/zip/findz.cljc","^H",22,"^S",["^J",[["^L","^1=","~$t"]]],"^V",null,"^T",["^J",[null,null]],"^F",1,"^P",false,"^E",104,"^14",["^4",["^Y","^Z"]],"^G",104,"^R",3,"^[",true,"^I",["^J",["^K",["^J",[["^L","^1=","~$t"]]]]],"^N","Return `zloc` located to the last node spanning position `pos` with tag `t` else `nil`.\n  Search is depth-first from the current node."],"~$find-tag",["^ ","^B",null,"^C",["^ ","^D","/Users/shivamsinghal/projects/open-source/clj-formatter/out/rewrite_clj/zip/findz.cljc","^E",83,"^F",7,"^G",83,"^H",15,"^I",["^J",["^K",["^J",[["^L","~$t"],["^L","~$f","~$t"]]]]],"^N","Return `zloc` located to the first node with tag `t` else `nil`.\n   Search starts at the current node and continues via movement function `f`.\n\n   `f` defaults to [[right]]","^O",["^ ","^P",false,"^Q",3,"^R",3,"^S",[["^L","~$t"],["^L","~$f","~$t"]],"^I",["^J",[["^L","~$t"],["^L","~$f","~$t"]]],"^T",["^J",[null,null]]]],"^6","~$rewrite-clj.zip.findz/find-tag","^D","out/rewrite_clj/zip/findz.cljc","^H",15,"^O",["^ ","^P",false,"^Q",3,"^R",3,"^S",[["^L","~$t"],["^L","~$f","~$t"]],"^I",["^J",[["^L","~$t"],["^L","~$f","~$t"]]],"^T",["^J",[null,null]]],"^S",[["^L","~$t"],["^L","~$f","~$t"]],"^V",null,"^Q",3,"^T",["^J",[null,null]],"^F",1,"^P",false,"^W",[["^ ","^Q",2,"^P",false,"^X","^Y"],["^ ","^Q",3,"^P",false,"^X",["^4",["^Y","^Z"]]]],"^E",83,"^G",83,"^R",3,"^[",true,"^I",["^J",[["^L","~$t"],["^L","~$f","~$t"]]],"^N","Return `zloc` located to the first node with tag `t` else `nil`.\n   Search starts at the current node and continues via movement function `f`.\n\n   `f` defaults to [[right]]"],"~$find-value",["^ ","^B",null,"^C",["^ ","^D","/Users/shivamsinghal/projects/open-source/clj-formatter/out/rewrite_clj/zip/findz.cljc","^E",131,"^F",7,"^G",131,"^H",17,"^I",["^J",["^K",["^J",[["^L","~$v"],["^L","~$f","~$v"]]]]],"^N","Return `zloc` located to the first token node that `sexpr`esses to `v` else `nil`.\n   Search starts from the current node and continues via movement function `f`.\n\n   `v` can be a single value or a set. When `v` is a set, matches on any value in set.\n\n   `f` defaults to [[right]] in short form call.\n\n  See docs for [sexpr nuances](/doc/01-user-guide.adoc#sexpr-nuances).","^O",["^ ","^P",false,"^Q",3,"^R",3,"^S",[["^L","~$v"],["^L","~$f","~$v"]],"^I",["^J",[["^L","~$v"],["^L","~$f","~$v"]]],"^T",["^J",[null,null]]]],"^6","~$rewrite-clj.zip.findz/find-value","^D","out/rewrite_clj/zip/findz.cljc","^H",17,"^O",["^ ","^P",false,"^Q",3,"^R",3,"^S",[["^L","~$v"],["^L","~$f","~$v"]],"^I",["^J",[["^L","~$v"],["^L","~$f","~$v"]]],"^T",["^J",[null,null]]],"^S",[["^L","~$v"],["^L","~$f","~$v"]],"^V",null,"^Q",3,"^T",["^J",[null,null]],"^F",1,"^P",false,"^W",[["^ ","^Q",2,"^P",false,"^X","^Y"],["^ ","^Q",3,"^P",false,"^X",["^4",["^Y","^Z"]]]],"^E",131,"^G",131,"^R",3,"^[",true,"^I",["^J",[["^L","~$v"],["^L","~$f","~$v"]]],"^N","Return `zloc` located to the first token node that `sexpr`esses to `v` else `nil`.\n   Search starts from the current node and continues via movement function `f`.\n\n   `v` can be a single value or a set. When `v` is a set, matches on any value in set.\n\n   `f` defaults to [[right]] in short form call.\n\n  See docs for [sexpr nuances](/doc/01-user-guide.adoc#sexpr-nuances)."],"~$find-next",["^ ","^B",null,"^C",["^ ","^D","/Users/shivamsinghal/projects/open-source/clj-formatter/out/rewrite_clj/zip/findz.cljc","^E",67,"^F",7,"^G",67,"^H",16,"^I",["^J",["^K",["^J",[["^L","^M"],["^L","~$f","^M"]]]]],"^N","Return `zloc` located to the next node satisfying predicate `p?` else `nil`.\n   Search starts one movement `f` from the current node and continues via `f`.\n\n   `f` defaults to [[right]]","^O",["^ ","^P",false,"^Q",3,"^R",3,"^S",[["^L","^M"],["^L","~$f","^M"]],"^I",["^J",[["^L","^M"],["^L","~$f","^M"]]],"^T",["^J",[null,null]]]],"^6","~$rewrite-clj.zip.findz/find-next","^D","out/rewrite_clj/zip/findz.cljc","^H",16,"^O",["^ ","^P",false,"^Q",3,"^R",3,"^S",[["^L","^M"],["^L","~$f","^M"]],"^I",["^J",[["^L","^M"],["^L","~$f","^M"]]],"^T",["^J",[null,null]]],"^S",[["^L","^M"],["^L","~$f","^M"]],"^V",null,"^Q",3,"^T",["^J",[null,null]],"^F",1,"^P",false,"^W",[["^ ","^Q",2,"^P",false,"^X","^Y"],["^ ","^Q",3,"^P",false,"^X",["^4",["^Y","^Z"]]]],"^E",67,"^G",67,"^R",3,"^[",true,"^I",["^J",[["^L","^M"],["^L","~$f","^M"]]],"^N","Return `zloc` located to the next node satisfying predicate `p?` else `nil`.\n   Search starts one movement `f` from the current node and continues via `f`.\n\n   `f` defaults to [[right]]"],"~$find-next-tag",["^ ","^B",null,"^C",["^ ","^D","/Users/shivamsinghal/projects/open-source/clj-formatter/out/rewrite_clj/zip/findz.cljc","^E",93,"^F",7,"^G",93,"^H",20,"^I",["^J",["^K",["^J",[["^L","~$t"],["^L","~$f","~$t"]]]]],"^N","Return `zloc` located to the next node with tag `t` else `nil`.\n  Search starts one movement `f` after the current node and continues via `f`.\n\n   `f` defaults to [[right]]","^O",["^ ","^P",false,"^Q",3,"^R",3,"^S",[["^L","~$t"],["^L","~$f","~$t"]],"^I",["^J",[["^L","~$t"],["^L","~$f","~$t"]]],"^T",["^J",[null,null]]]],"^6","~$rewrite-clj.zip.findz/find-next-tag","^D","out/rewrite_clj/zip/findz.cljc","^H",20,"^O",["^ ","^P",false,"^Q",3,"^R",3,"^S",[["^L","~$t"],["^L","~$f","~$t"]],"^I",["^J",[["^L","~$t"],["^L","~$f","~$t"]]],"^T",["^J",[null,null]]],"^S",[["^L","~$t"],["^L","~$f","~$t"]],"^V",null,"^Q",3,"^T",["^J",[null,null]],"^F",1,"^P",false,"^W",[["^ ","^Q",2,"^P",false,"^X","^Y"],["^ ","^Q",3,"^P",false,"^X",["^4",["^Y","^Z"]]]],"^E",93,"^G",93,"^R",3,"^[",true,"^I",["^J",[["^L","~$t"],["^L","~$f","~$t"]]],"^N","Return `zloc` located to the next node with tag `t` else `nil`.\n  Search starts one movement `f` after the current node and continues via `f`.\n\n   `f` defaults to [[right]]"],"~$find-last-by-pos",["^ ","^B",null,"^C",["^ ","^D","/Users/shivamsinghal/projects/open-source/clj-formatter/out/rewrite_clj/zip/findz.cljc","^E",46,"^F",7,"^G",46,"^H",23,"^I",["^J",["^K",["^J",[["^L","^1="],["^L","^1=","^M"]]]]],"^N","Return `zloc` located to the last node spanning position `pos` that satisfies predicate `p?` else `nil`.\n   Search is depth-first from the current node.\n\n  NOTE: Does not ignore whitespace/comment nodes.","^O",["^ ","^P",false,"^Q",3,"^R",3,"^S",[["^L","^1="],["^L","^1=","^M"]],"^I",["^J",[["^L","^1="],["^L","^1=","^M"]]],"^T",["^J",[null,null]]]],"^6","~$rewrite-clj.zip.findz/find-last-by-pos","^D","out/rewrite_clj/zip/findz.cljc","^H",23,"^O",["^ ","^P",false,"^Q",3,"^R",3,"^S",[["^L","^1="],["^L","^1=","^M"]],"^I",["^J",[["^L","^1="],["^L","^1=","^M"]]],"^T",["^J",[null,null]]],"^S",[["^L","^1="],["^L","^1=","^M"]],"^V",null,"^Q",3,"^T",["^J",[null,null]],"^F",1,"^P",false,"^W",[["^ ","^Q",2,"^P",false,"^X","^Y"],["^ ","^Q",3,"^P",false,"^X",["^4",["^Y","^Z"]]]],"^E",46,"^G",46,"^R",3,"^[",true,"^I",["^J",[["^L","^1="],["^L","^1=","^M"]]],"^N","Return `zloc` located to the last node spanning position `pos` that satisfies predicate `p?` else `nil`.\n   Search is depth-first from the current node.\n\n  NOTE: Does not ignore whitespace/comment nodes."],"~$find-depth-first",["^ ","^B",null,"^C",["^ ","^D","/Users/shivamsinghal/projects/open-source/clj-formatter/out/rewrite_clj/zip/findz.cljc","^E",61,"^F",7,"^G",61,"^H",23,"^I",["^J",["^K",["^J",[["^L","^M"]]]]],"^N","Return `zloc` located to the first node satisfying predicate `p?` else `nil`.\n   Search is depth-first from the current node."],"^6","~$rewrite-clj.zip.findz/find-depth-first","^D","out/rewrite_clj/zip/findz.cljc","^H",23,"^S",["^J",[["^L","^M"]]],"^V",null,"^T",["^J",[null,null]],"^F",1,"^P",false,"^E",61,"^14",["^4",["^Y","^Z"]],"^G",61,"^R",2,"^[",true,"^I",["^J",["^K",["^J",[["^L","^M"]]]]],"^N","Return `zloc` located to the first node satisfying predicate `p?` else `nil`.\n   Search is depth-first from the current node."],"~$find-next-value",["^ ","^B",null,"^C",["^ ","^D","/Users/shivamsinghal/projects/open-source/clj-formatter/out/rewrite_clj/zip/findz.cljc","^E",148,"^F",7,"^G",148,"^H",22,"^I",["^J",["^K",["^J",[["^L","~$v"],["^L","~$f","~$v"]]]]],"^N","Return `zloc` located to the next token node that `sexpr`esses to `v` else `nil`.\n   Search starts one movement `f` from the current location, and continues via `f`.\n\n   `v` can be a single value or a set. When `v` is a set matches on any value in set.\n\n   `f` defaults to [[right]] in short form call.\n\n  See docs for [sexpr nuances](/doc/01-user-guide.adoc#sexpr-nuances).","^O",["^ ","^P",false,"^Q",3,"^R",3,"^S",[["^L","~$v"],["^L","~$f","~$v"]],"^I",["^J",[["^L","~$v"],["^L","~$f","~$v"]]],"^T",["^J",[null,null]]]],"^6","~$rewrite-clj.zip.findz/find-next-value","^D","out/rewrite_clj/zip/findz.cljc","^H",22,"^O",["^ ","^P",false,"^Q",3,"^R",3,"^S",[["^L","~$v"],["^L","~$f","~$v"]],"^I",["^J",[["^L","~$v"],["^L","~$f","~$v"]]],"^T",["^J",[null,null]]],"^S",[["^L","~$v"],["^L","~$f","~$v"]],"^V",null,"^Q",3,"^T",["^J",[null,null]],"^F",1,"^P",false,"^W",[["^ ","^Q",2,"^P",false,"^X","^Y"],["^ ","^Q",3,"^P",false,"^X",["^4",["^Y","^Z"]]]],"^E",148,"^G",148,"^R",3,"^[",true,"^I",["^J",[["^L","~$v"],["^L","~$f","~$v"]]],"^N","Return `zloc` located to the next token node that `sexpr`esses to `v` else `nil`.\n   Search starts one movement `f` from the current location, and continues via `f`.\n\n   `v` can be a single value or a set. When `v` is a set matches on any value in set.\n\n   `f` defaults to [[right]] in short form call.\n\n  See docs for [sexpr nuances](/doc/01-user-guide.adoc#sexpr-nuances)."],"~$position-in-range?",["^ ","^B",null,"^C",["^ ","^D","/Users/shivamsinghal/projects/open-source/clj-formatter/out/rewrite_clj/zip/findz.cljc","^E",19,"^F",8,"^G",19,"^H",26,"^18",true,"^I",["^J",["^K",["^J",[["^L","^1="]]]]]],"^18",true,"^6","~$rewrite-clj.zip.findz/position-in-range?","^D","out/rewrite_clj/zip/findz.cljc","^H",26,"^S",["^J",[["^L","^1="]]],"^V",null,"^T",["^J",[null,null]],"^F",1,"^P",false,"^E",19,"^14","~$boolean","^G",19,"^R",2,"^[",true,"^I",["^J",["^K",["^J",[["^L","^1="]]]]]]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^4",["~:pos","~:token","~:col","~:row"]],"~:order",["^1W","^1V","^1T","^1U"]],"^N",null,"~:as-aliases",["^ "]]