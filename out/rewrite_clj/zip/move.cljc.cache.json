["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ "],"~:excludes",["~#set",["~$next"]],"~:name","~$rewrite-clj.zip.move","~:imports",null,"~:requires",["^ ","~$zraw","~$rewrite-clj.custom-zipper.core","^;","^;","~$ws","~$rewrite-clj.zip.whitespace","^=","^="],"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$rightmost",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/Users/shivamsinghal/projects/open-source/clj-formatter/out/rewrite_clj/zip/move.cljc","~:line",69,"~:column",7,"~:end-line",69,"~:end-column",16,"~:arglists",["~#list",["~$quote",["^J",[["~$zloc"]]]]],"~:doc","Return zipper with location moved to the rightmost non-whitespace/non-comment sibling of current node in `zloc`."],"^6","~$rewrite-clj.zip.move/rightmost","^D","out/rewrite_clj/zip/move.cljc","^H",16,"~:method-params",["^J",[["^L"]]],"~:protocol-impl",null,"~:arglists-meta",["^J",[null,null]],"^F",1,"~:variadic?",false,"^E",69,"~:ret-tag",["^4",["~$any","~$clj-nil"]],"^G",69,"~:max-fixed-arity",1,"~:fn-var",true,"^I",["^J",["^K",["^J",[["^L"]]]]],"^M","Return zipper with location moved to the rightmost non-whitespace/non-comment sibling of current node in `zloc`."],"~$left",["^ ","^B",null,"^C",["^ ","^D","/Users/shivamsinghal/projects/open-source/clj-formatter/out/rewrite_clj/zip/move.cljc","^E",13,"^F",7,"^G",13,"^H",11,"^I",["^J",["^K",["^J",[["^L"]]]]],"^M","Return zipper with location moved left to next non-whitespace/non-comment sibling of current node in `zloc`."],"^6","~$rewrite-clj.zip.move/left","^D","out/rewrite_clj/zip/move.cljc","^H",11,"^O",["^J",[["^L"]]],"^P",null,"^Q",["^J",[null,null]],"^F",1,"^R",false,"^E",13,"^S",["^4",["^T","^U"]],"^G",13,"^V",1,"^W",true,"^I",["^J",["^K",["^J",[["^L"]]]]],"^M","Return zipper with location moved left to next non-whitespace/non-comment sibling of current node in `zloc`."],"~$leftmost",["^ ","^B",null,"^C",["^ ","^D","/Users/shivamsinghal/projects/open-source/clj-formatter/out/rewrite_clj/zip/move.cljc","^E",62,"^F",7,"^G",62,"^H",15,"^I",["^J",["^K",["^J",[["^L"]]]]],"^M","Return zipper with location moved to the leftmost non-whitespace/non-comment sibling of current node in `zloc`."],"^6","~$rewrite-clj.zip.move/leftmost","^D","out/rewrite_clj/zip/move.cljc","^H",15,"^O",["^J",[["^L"]]],"^P",null,"^Q",["^J",[null,null]],"^F",1,"^R",false,"^E",62,"^S",["^4",["^T","^U"]],"^G",62,"^V",1,"^W",true,"^I",["^J",["^K",["^J",[["^L"]]]]],"^M","Return zipper with location moved to the leftmost non-whitespace/non-comment sibling of current node in `zloc`."],"~$down",["^ ","^B",null,"^C",["^ ","^D","/Users/shivamsinghal/projects/open-source/clj-formatter/out/rewrite_clj/zip/move.cljc","^E",18,"^F",7,"^G",18,"^H",11,"^I",["^J",["^K",["^J",[["^L"]]]]],"^M","Return zipper with location moved down to the first non-whitespace/non-comment child node of the current node in `zloc`, or nil if no applicable children."],"^6","~$rewrite-clj.zip.move/down","^D","out/rewrite_clj/zip/move.cljc","^H",11,"^O",["^J",[["^L"]]],"^P",null,"^Q",["^J",[null,null]],"^F",1,"^R",false,"^E",18,"^S",["^4",["^T","^U"]],"^G",18,"^V",1,"^W",true,"^I",["^J",["^K",["^J",[["^L"]]]]],"^M","Return zipper with location moved down to the first non-whitespace/non-comment child node of the current node in `zloc`, or nil if no applicable children."],"~$rightmost?",["^ ","^B",null,"^C",["^ ","^D","/Users/shivamsinghal/projects/open-source/clj-formatter/out/rewrite_clj/zip/move.cljc","^E",45,"^F",7,"^G",45,"^H",17,"^I",["^J",["^K",["^J",[["^L"]]]]],"^M","Return true if at rightmost non-whitespace/non-comment sibling node in `zloc`."],"^6","~$rewrite-clj.zip.move/rightmost?","^D","out/rewrite_clj/zip/move.cljc","^H",17,"^O",["^J",[["^L"]]],"^P",null,"^Q",["^J",[null,null]],"^F",1,"^R",false,"^E",45,"^S","~$boolean","^G",45,"^V",1,"^W",true,"^I",["^J",["^K",["^J",[["^L"]]]]],"^M","Return true if at rightmost non-whitespace/non-comment sibling node in `zloc`."],"~$end?",["^ ","^B",null,"^C",["^ ","^D","/Users/shivamsinghal/projects/open-source/clj-formatter/out/rewrite_clj/zip/move.cljc","^E",38,"^F",7,"^G",38,"^H",11,"^I",["^J",["^K",["^J",[["^L"]]]]],"^M","Return true if `zloc` is at end of depth-first traversal."],"^6","~$rewrite-clj.zip.move/end?","^D","out/rewrite_clj/zip/move.cljc","^H",11,"^O",["^J",[["^L"]]],"^P",null,"^Q",["^J",[null,null]],"^F",1,"^R",false,"^E",38,"^S",["^4",["^14","^T"]],"^G",38,"^V",1,"^W",true,"^I",["^J",["^K",["^J",[["^L"]]]]],"^M","Return true if `zloc` is at end of depth-first traversal."],"~$up",["^ ","^B",null,"^C",["^ ","^D","/Users/shivamsinghal/projects/open-source/clj-formatter/out/rewrite_clj/zip/move.cljc","^E",23,"^F",7,"^G",23,"^H",9,"^I",["^J",["^K",["^J",[["^L"]]]]],"^M","Return zipper with location moved up to next non-whitespace/non-comment parent of current node in `zloc`, or `nil` if at the top."],"^6","~$rewrite-clj.zip.move/up","^D","out/rewrite_clj/zip/move.cljc","^H",9,"^O",["^J",[["^L"]]],"^P",null,"^Q",["^J",[null,null]],"^F",1,"^R",false,"^E",23,"^S",["^4",["^T","^U"]],"^G",23,"^V",1,"^W",true,"^I",["^J",["^K",["^J",[["^L"]]]]],"^M","Return zipper with location moved up to next non-whitespace/non-comment parent of current node in `zloc`, or `nil` if at the top."],"~$leftmost?",["^ ","^B",null,"^C",["^ ","^D","/Users/shivamsinghal/projects/open-source/clj-formatter/out/rewrite_clj/zip/move.cljc","^E",50,"^F",7,"^G",50,"^H",16,"^I",["^J",["^K",["^J",[["^L"]]]]],"^M","Return true if at leftmost non-whitespace/non-comment sibling node in `zloc`."],"^6","~$rewrite-clj.zip.move/leftmost?","^D","out/rewrite_clj/zip/move.cljc","^H",16,"^O",["^J",[["^L"]]],"^P",null,"^Q",["^J",[null,null]],"^F",1,"^R",false,"^E",50,"^S","^14","^G",50,"^V",1,"^W",true,"^I",["^J",["^K",["^J",[["^L"]]]]],"^M","Return true if at leftmost non-whitespace/non-comment sibling node in `zloc`."],"^5",["^ ","^B",null,"^C",["^ ","^D","/Users/shivamsinghal/projects/open-source/clj-formatter/out/rewrite_clj/zip/move.cljc","^E",28,"^F",7,"^G",28,"^H",11,"^I",["^J",["^K",["^J",[["^L"]]]]],"^M","Return zipper with location moved to the next depth-first non-whitespace/non-comment node in `zloc`.\n   End can be detected with [[end?]], if already at end, stays there."],"^6","~$rewrite-clj.zip.move/next","^D","out/rewrite_clj/zip/move.cljc","^H",11,"^O",["^J",[["^L"]]],"^P",null,"^Q",["^J",[null,null]],"^F",1,"^R",false,"^E",28,"^S",["^4",["~$clj","^T","~$cljs.core/MetaFn","^U"]],"^G",28,"^V",1,"^W",true,"^I",["^J",["^K",["^J",[["^L"]]]]],"^M","Return zipper with location moved to the next depth-first non-whitespace/non-comment node in `zloc`.\n   End can be detected with [[end?]], if already at end, stays there."],"~$prev",["^ ","^B",null,"^C",["^ ","^D","/Users/shivamsinghal/projects/open-source/clj-formatter/out/rewrite_clj/zip/move.cljc","^E",55,"^F",7,"^G",55,"^H",11,"^I",["^J",["^K",["^J",[["^L"]]]]],"^M","Return zipper with location moved to the previous depth-first non-whitespace/non-comment node in `zloc`. If already at root, returns nil."],"^6","~$rewrite-clj.zip.move/prev","^D","out/rewrite_clj/zip/move.cljc","^H",11,"^O",["^J",[["^L"]]],"^P",null,"^Q",["^J",[null,null]],"^F",1,"^R",false,"^E",55,"^S",["^4",["^T","^U"]],"^G",55,"^V",1,"^W",true,"^I",["^J",["^K",["^J",[["^L"]]]]],"^M","Return zipper with location moved to the previous depth-first non-whitespace/non-comment node in `zloc`. If already at root, returns nil."],"~$right",["^ ","^B",null,"^C",["^ ","^D","/Users/shivamsinghal/projects/open-source/clj-formatter/out/rewrite_clj/zip/move.cljc","^E",8,"^F",7,"^G",8,"^H",12,"^I",["^J",["^K",["^J",[["^L"]]]]],"^M","Return zipper with location moved right to next non-whitespace/non-comment sibling of current node in `zloc`."],"^6","~$rewrite-clj.zip.move/right","^D","out/rewrite_clj/zip/move.cljc","^H",12,"^O",["^J",[["^L"]]],"^P",null,"^Q",["^J",[null,null]],"^F",1,"^R",false,"^E",8,"^S",["^4",["^T","^U"]],"^G",8,"^V",1,"^W",true,"^I",["^J",["^K",["^J",[["^L"]]]]],"^M","Return zipper with location moved right to next non-whitespace/non-comment sibling of current node in `zloc`."]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^4",["~:rewrite-clj.zip.move/end?"]],"~:order",["^1F"]],"^M",null,"~:as-aliases",["^ "]]