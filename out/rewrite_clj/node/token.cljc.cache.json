["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$rewrite-clj.node.token","~:imports",null,"~:requires",["^ ","~$node","~$rewrite-clj.node.protocols","^:","^:"],"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$map->SymbolNode",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/Users/shivamsinghal/projects/open-source/clj-formatter/out/rewrite_clj/node/token.cljc","~:end-column",22,"~:column",12,"~:internal-ctor",true,"~:factory","~:map","~:line",41,"~:end-line",41,"~:arglists",["~#list",["~$quote",["^J",[["~$G__2728"]]]]],"~:doc","Factory function for rewrite-clj.node.token/SymbolNode, taking a map of keywords to field values."],"^5","~$rewrite-clj.node.token/map->SymbolNode","^A","out/rewrite_clj/node/token.cljc","^B",22,"~:method-params",["^J",[["^L"]]],"~:protocol-impl",null,"~:arglists-meta",["^J",[null,null]],"^C",1,"^D",true,"~:variadic?",false,"^E","^F","^G",41,"~:ret-tag","~$rewrite-clj.node.token/SymbolNode","^H",41,"~:max-fixed-arity",1,"~:fn-var",true,"^I",["^J",["^K",["^J",[["^L"]]]]],"^M","Factory function for rewrite-clj.node.token/SymbolNode, taking a map of keywords to field values."],"~$TokenNode",["^ ","~:num-fields",2,"~:protocols",["^4",["~$cljs.core/IRecord","~$cljs.core/IKVReduce","~$cljs.core/IEquiv","~$cljs.core/IHash","~$cljs.core/ICollection","~$rewrite-clj.node.token/Object","~$cljs.core/ICounted","~$cljs.core/ISeqable","~$cljs.core/IMeta","~$cljs.core/ICloneable","~$cljs.core/IPrintWithWriter","~$cljs.core/IIterable","~$rewrite-clj.node.protocols/Node","~$cljs.core/IWithMeta","~$cljs.core/IAssociative","~$cljs.core/IMap","~$cljs.core/ILookup"]],"^5","~$rewrite-clj.node.token/TokenNode","^A","out/rewrite_clj/node/token.cljc","^B",21,"~:type",true,"^C",12,"^D",true,"^G",27,"~:record",true,"^H",27,"~:tag","~$function","~:skip-protocol-flag",["^4",["^Z","^[","^10","^11","^12","^14","^15","^16","^17","^18","^19","^1;","^1<","^1=","^1>"]]],"~$symbol-qualifier",["^ ","^?",null,"^@",["^ ","^A","/Users/shivamsinghal/projects/open-source/clj-formatter/out/rewrite_clj/node/token.cljc","^G",12,"^C",8,"^H",12,"^B",24,"~:private",true,"^I",["^J",["^K",["^J",[["~$value"]]]]]],"^1F",true,"^5","~$rewrite-clj.node.token/symbol-qualifier","^A","out/rewrite_clj/node/token.cljc","^B",24,"^O",["^J",[["^1G"]]],"^P",null,"^Q",["^J",[null,null]],"^C",1,"^R",false,"^G",12,"^S",["^4",["^1=","~$clj-nil"]],"^H",12,"^U",1,"^V",true,"^I",["^J",["^K",["^J",[["^1G"]]]]]],"~$->TokenNode",["^ ","^?",null,"^@",["^ ","^A","/Users/shivamsinghal/projects/open-source/clj-formatter/out/rewrite_clj/node/token.cljc","^B",21,"^C",12,"^D",true,"^E","~:positional","^G",27,"^H",27,"^I",["^J",["^K",["^J",[["^1G","~$string-value"]]]]],"^M","Positional factory function for rewrite-clj.node.token/TokenNode."],"^5","~$rewrite-clj.node.token/->TokenNode","^A","out/rewrite_clj/node/token.cljc","^B",21,"^O",["^J",[["^1G","^1L"]]],"^P",null,"^Q",["^J",[null,null]],"^C",1,"^D",true,"^R",false,"^E","^1K","^G",27,"^S","^1?","^H",27,"^U",2,"^V",true,"^I",["^J",["^K",["^J",[["^1G","^1L"]]]]],"^M","Positional factory function for rewrite-clj.node.token/TokenNode."],"~$symbol-sexpr",["^ ","^?",null,"^@",["^ ","^A","/Users/shivamsinghal/projects/open-source/clj-formatter/out/rewrite_clj/node/token.cljc","^G",17,"^C",8,"^H",17,"^B",20,"^1F",true,"^I",["^J",["^K",["^J",[["^1G","~$map-qualifier",["^ ","~:keys",["~$auto-resolve"]]]]]]]],"^1F",true,"^5","~$rewrite-clj.node.token/symbol-sexpr","^A","out/rewrite_clj/node/token.cljc","^B",20,"^O",["^J",[["^1G","^1O","~$p__2703"]]],"^P",null,"^Q",["^J",[null,null]],"^C",1,"^R",false,"^G",17,"^S","~$cljs.core/Symbol","^H",17,"^U",3,"^V",true,"^I",["^J",["^K",["^J",[["^1G","^1O",["^ ","^1P",["^1Q"]]]]]]]],"~$choose-qualifier",["^ ","^?",null,"^@",["^ ","^A","/Users/shivamsinghal/projects/open-source/clj-formatter/out/rewrite_clj/node/token.cljc","^G",8,"^C",8,"^H",8,"^B",24,"^1F",true,"^I",["^J",["^K",["^J",[["^1O","~$sym-qualifier"]]]]]],"^1F",true,"^5","~$rewrite-clj.node.token/choose-qualifier","^A","out/rewrite_clj/node/token.cljc","^B",24,"^O",["^J",[["^1O","^1V"]]],"^P",null,"^Q",["^J",[null,null]],"^C",1,"^R",false,"^G",8,"^S",["^4",[null,"^1I"]],"^H",8,"^U",2,"^V",true,"^I",["^J",["^K",["^J",[["^1O","^1V"]]]]]],"~$->SymbolNode",["^ ","^?",null,"^@",["^ ","^A","/Users/shivamsinghal/projects/open-source/clj-formatter/out/rewrite_clj/node/token.cljc","^B",22,"^C",12,"^D",true,"^E","^1K","^G",41,"^H",41,"^I",["^J",["^K",["^J",[["^1G","^1L","^1O"]]]]],"^M","Positional factory function for rewrite-clj.node.token/SymbolNode."],"^5","~$rewrite-clj.node.token/->SymbolNode","^A","out/rewrite_clj/node/token.cljc","^B",22,"^O",["^J",[["^1G","^1L","^1O"]]],"^P",null,"^Q",["^J",[null,null]],"^C",1,"^D",true,"^R",false,"^E","^1K","^G",41,"^S","^T","^H",41,"^U",3,"^V",true,"^I",["^J",["^K",["^J",[["^1G","^1L","^1O"]]]]],"^M","Positional factory function for rewrite-clj.node.token/SymbolNode."],"~$SymbolNode",["^ ","^X",3,"^Y",["^4",["^Z","~$rewrite-clj.node.protocols/MapQualifiable","^[","^10","^11","^12","^13","^14","^15","^16","^17","^18","^19","^1:","^1;","^1<","^1=","^1>"]],"^5","^T","^A","out/rewrite_clj/node/token.cljc","^B",22,"^1@",true,"^C",12,"^D",true,"^G",41,"^1A",true,"^H",41,"^1B","^1C","^1D",["^4",["^Z","^[","^10","^11","^12","^14","^15","^16","^17","^18","^19","^1;","^1<","^1=","^1>"]]],"~$map->TokenNode",["^ ","^?",null,"^@",["^ ","^A","/Users/shivamsinghal/projects/open-source/clj-formatter/out/rewrite_clj/node/token.cljc","^B",21,"^C",12,"^D",true,"^E","^F","^G",27,"^H",27,"^I",["^J",["^K",["^J",[["~$G__2711"]]]]],"^M","Factory function for rewrite-clj.node.token/TokenNode, taking a map of keywords to field values."],"^5","~$rewrite-clj.node.token/map->TokenNode","^A","out/rewrite_clj/node/token.cljc","^B",21,"^O",["^J",[["^21"]]],"^P",null,"^Q",["^J",[null,null]],"^C",1,"^D",true,"^R",false,"^E","^F","^G",27,"^S","^1?","^H",27,"^U",1,"^V",true,"^I",["^J",["^K",["^J",[["^21"]]]]],"^M","Factory function for rewrite-clj.node.token/TokenNode, taking a map of keywords to field values."],"~$symbol-node?",["^ ","^?",null,"^@",["^ ","^A","/Users/shivamsinghal/projects/open-source/clj-formatter/out/rewrite_clj/node/token.cljc","^G",64,"^C",7,"^H",64,"^B",19,"^I",["^J",["^K",["^J",[["~$n"]]]]],"^M","Returns true if `n` is a node representing a symbol."],"^5","~$rewrite-clj.node.token/symbol-node?","^A","out/rewrite_clj/node/token.cljc","^B",19,"^O",["^J",[["~$n"]]],"^P",null,"^Q",["^J",[null,null]],"^C",1,"^R",false,"^G",64,"^S","~$boolean","^H",64,"^U",1,"^V",true,"^I",["^J",["^K",["^J",[["~$n"]]]]],"^M","Returns true if `n` is a node representing a symbol."],"~$token-node",["^ ","^?",null,"^@",["^ ","^A","/Users/shivamsinghal/projects/open-source/clj-formatter/out/rewrite_clj/node/token.cljc","^G",71,"^C",7,"^H",71,"^B",17,"^I",["^J",["^K",["^J",[["^1G"],["^1G","^1L"]]]]],"^M","Create node for an unspecified token of `value`.\n\n   ```Clojure\n   (require '[rewrite-clj.node :as n])\n\n   (-> (n/token-node 'sym) n/string)\n   ;; => \"sym\"\n\n   (-> (n/token-node 42) n/string)\n   ;; => \"42\"\n   ```","~:top-fn",["^ ","^R",false,"~:fixed-arity",2,"^U",2,"^O",[["^1G"],["^1G","^1L"]],"^I",["^J",[["^1G"],["^1G","^1L"]]],"^Q",["^J",[null,null]]]],"^5","~$rewrite-clj.node.token/token-node","^A","out/rewrite_clj/node/token.cljc","^B",17,"^27",["^ ","^R",false,"^28",2,"^U",2,"^O",[["^1G"],["^1G","^1L"]],"^I",["^J",[["^1G"],["^1G","^1L"]]],"^Q",["^J",[null,null]]],"^O",[["^1G"],["^1G","^1L"]],"^P",null,"^28",2,"^Q",["^J",[null,null]],"^C",1,"^R",false,"~:methods",[["^ ","^28",1,"^R",false,"^1B","~$any"],["^ ","^28",2,"^R",false,"^1B","~$clj"]],"^G",71,"^H",71,"^U",2,"^V",true,"^I",["^J",[["^1G"],["^1G","^1L"]]],"^M","Create node for an unspecified token of `value`.\n\n   ```Clojure\n   (require '[rewrite-clj.node :as n])\n\n   (-> (n/token-node 'sym) n/string)\n   ;; => \"sym\"\n\n   (-> (n/token-node 42) n/string)\n   ;; => \"42\"\n   ```"]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^4",["~:auto-resolved?","~:map-qualifier","~:symbol","~:value","^1O","~:prefix","^1G","~:string-value","~:token","~:current","^1L","~:auto-resolve"]],"~:order",["^2E","^2I","^2A","^2H","^2D","^2F","^2G","^1G","^1L","^2B","^2C","^1O"]],"^M",null,"~:as-aliases",["^ "]]