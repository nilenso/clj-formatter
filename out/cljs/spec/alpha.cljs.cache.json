["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ "],"~:excludes",["~#set",["~$cat","~$*","~$or","~$merge","~$keys","~$+","~$and","~$def"]],"~:name","~$cljs.spec.alpha","~:imports",null,"~:requires",["^ ","~$cljs.core","^?","~$gobj","~$goog.object","^A","^A","~$walk","~$clojure.walk","~$gen","~$cljs.spec.gen.alpha","~$c","^?","~$str","~$clojure.string","^G","^G","^C","^C","^E","^E"],"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$form",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","~:line",181,"~:column",7,"~:end-line",181,"~:end-column",11,"~:arglists",["~#list",["~$quote",["^T",[["~$spec"]]]]],"~:doc","returns the spec as data"],"^;","~$cljs.spec.alpha/form","^N","out/cljs/spec/alpha.cljs","^R",11,"~:method-params",["^T",[["^V"]]],"~:protocol-impl",null,"~:arglists-meta",["^T",[null,null]],"^P",1,"~:variadic?",false,"^O",181,"~:ret-tag","~$any","^Q",181,"~:max-fixed-arity",1,"~:fn-var",true,"^S",["^T",["^U",["^T",[["^V"]]]]],"^W","returns the spec as data"],"~$->t_cljs$spec$alpha1154",["^ ","^L",null,"^M",["^ ","~:anonymous",true,"~:protocols",["^4",["~$cljs.spec.alpha/Spec","~$cljs.core/IMeta","~$cljs.spec.alpha/Specize","~$cljs.core/IWithMeta"]],"~:skip-protocol-flag",["^4",["^19","^1;"]],"~:factory","~:positional","^S",["^T",["^U",["^T",[["^K","~$mmvar","~$retag","~$gfn","~$id","~$predx","~$dval","~$tag","~$meta1155"]]]]],"^W","Positional factory function for cljs.spec.alpha/t_cljs$spec$alpha1154.","^N",null],"^17",["^4",["^18","^19","^1:","^1;"]],"^;","~$cljs.spec.alpha/->t_cljs$spec$alpha1154","^N","out/cljs/spec/alpha.cljs","^Y",["^T",[["^K","^1?","^1@","^1A","^1B","^1C","^1D","^1E","^1F"]]],"^Z",null,"^[",["^T",[null,null]],"^16",true,"^P",6,"^10",false,"^1=","^1>","^O",556,"^11","~$cljs.spec.alpha/t_cljs$spec$alpha1154","^13",9,"^14",true,"^S",["^T",["^U",["^T",[["^K","^1?","^1@","^1A","^1B","^1C","^1D","^1E","^1F"]]]]],"^1<",["^4",["^19","^1;"]],"^W","Positional factory function for cljs.spec.alpha/t_cljs$spec$alpha1154."],"~$nilable-impl",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",1410,"^P",19,"^Q",1410,"^R",31,"~:skip-wiki",true,"^S",["^T",["^U",["^T",[["^K","~$pred","^1A"]]]]],"^W","Do not call this directly, use 'nilable'"],"^;","~$cljs.spec.alpha/nilable-impl","^N","out/cljs/spec/alpha.cljs","^R",31,"^Y",["^T",[["^K","^1K","^1A"]]],"^Z",null,"^1J",true,"^[",["^T",[null,null]],"^P",1,"^10",false,"^O",1410,"^11","~$cljs.spec.alpha/t_cljs$spec$alpha1458","^Q",1410,"^13",3,"^14",true,"^S",["^T",["^U",["^T",[["^K","^1K","^1A"]]]]],"^W","Do not call this directly, use 'nilable'"],"~$*recursion-limit*",["^ ","^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",21,"^P",16,"^Q",21,"^R",33,"~:dynamic",true],"^;","~$cljs.spec.alpha/*recursion-limit*","^N","out/cljs/spec/alpha.cljs","^R",33,"^P",1,"^1O",true,"^O",21,"^Q",21,"~:tag","^12","^W","A soft limit on how many times a branching spec (or/alt/*/opt-keys/multi-spec)\n  can be recursed through during generation. After this a\n  non-recursive branch will be chosen."],"~$*coll-error-limit*",["^ ","^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",35,"^P",16,"^Q",35,"^R",34,"^1O",true],"^;","~$cljs.spec.alpha/*coll-error-limit*","^N","out/cljs/spec/alpha.cljs","^R",34,"^P",1,"^1O",true,"^O",35,"^Q",35,"^1Q","^12","^W","The number of errors reported by explain in a collection spec'ed with 'every'"],"~$empty-coll",["^ ","^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",841,"^P",16,"^Q",841,"^R",26,"~:private",true],"^1U",true,"^;","~$cljs.spec.alpha/empty-coll","^N","out/cljs/spec/alpha.cljs","^R",26,"^P",1,"^O",841,"^Q",841,"^1Q","~$cljs.core/IMap"],"~$explain-printer",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",235,"^P",7,"^Q",235,"^R",22,"^S",["^T",["^U",["^T",[["~$ed"]]]]],"^W","Default printer for explain-data. nil indicates a successful validation."],"^;","~$cljs.spec.alpha/explain-printer","^N","out/cljs/spec/alpha.cljs","^R",22,"^Y",["^T",[["^1Y"]]],"^Z",null,"^[",["^T",[null,null]],"^P",1,"^10",false,"^O",235,"^11","~$clj-nil","^Q",235,"^13",1,"^14",true,"^S",["^T",["^U",["^T",[["^1Y"]]]]],"^W","Default printer for explain-data. nil indicates a successful validation."],"~$op-explain",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",1159,"^P",8,"^Q",1159,"^R",18,"^1U",true,"^S",["^T",["^U",["^T",[["^K","~$p","~$path","~$via","~$in","~$input"]]]]]],"^1U",true,"^;","~$cljs.spec.alpha/op-explain","^N","out/cljs/spec/alpha.cljs","^R",18,"^Y",["^T",[["^K","~$p","^21","^22","^23","^24"]]],"^Z",null,"^[",["^T",[null,null]],"^P",1,"^10",false,"^O",1159,"^11",["^4",["~$cljs.core/IVector","^12","^1["]],"^Q",1159,"^13",6,"^14",true,"^S",["^T",["^U",["^T",[["^K","~$p","^21","^22","^23","^24"]]]]]],"~$Specize",["^ ","^M",["^ ","~:protocol-symbol",true,"^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^R",21,"^P",14,"^O",131,"~:protocol-info",["^ ","~:methods",["^ ","~$specize*",[["~$_"],["~$_","^K"]]]],"^Q",131,"~:sigs",["^ ","~:specize*",["^ ","^;","^2;","^S",["^T",[["~$_"],["~$_","^K"]]],"^W",null]],"~:jsdoc",["^T",["@interface"]]],"^28",true,"^;","^1:","^N","out/cljs/spec/alpha.cljs","^R",21,"^P",1,"^O",131,"^29",["^ ","^2:",["^ ","^2;",[["~$_"],["~$_","^K"]]]],"~:info",null,"^Q",131,"^1Q","^12","^2<",["^ ","^2=",["^ ","^;","^2;","^S",["^T",[["~$_"],["~$_","^K"]]],"^W",null]],"~:impls",["^4",["~$cljs.spec.alpha/t_cljs$spec$alpha1177","~$cljs.spec.alpha/t_cljs$spec$alpha1249","~$cljs.core/Keyword","~$cljs.spec.alpha/t_cljs$spec$alpha1143","~$cljs.spec.alpha/t_cljs$spec$alpha1430","~$default","^1M","~$cljs.core/PersistentHashSet","~$cljs.spec.alpha/t_cljs$spec$alpha1455","~$cljs.spec.alpha/t_cljs$spec$alpha1235","^1H","~$cljs.core/PersistentTreeSet","~$cljs.core/Symbol","~$cljs.spec.alpha/t_cljs$spec$alpha1168","~$cljs.spec.alpha/t_cljs$spec$alpha1260","~$cljs.spec.alpha/t_cljs$spec$alpha1087","~$cljs.spec.alpha/t_cljs$spec$alpha1423"]],"^2>",["^T",["@interface"]]],"~$t_cljs$spec$alpha1423",["^ ","~:num-fields",3,"^17",["^4",["^18","^19","^1:","^1;"]],"^;","^2O","^N","out/cljs/spec/alpha.cljs","~:type",true,"^16",true,"^P",3,"^O",1297,"~:record",false,"^1Q","~$function","^1<",["^4",["^19","^1;"]]],"~$alt-impl",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",1044,"^P",19,"^Q",1044,"^R",27,"^1J",true,"^S",["^T",["^U",["^T",[["~$ks","~$ps","~$forms"]]]]],"^W","Do not call this directly, use 'alt'"],"^;","~$cljs.spec.alpha/alt-impl","^N","out/cljs/spec/alpha.cljs","^R",27,"^Y",["^T",[["^2V","^2W","^2X"]]],"^Z",null,"^1J",true,"^[",["^T",[null,null]],"^P",1,"^10",false,"^O",1044,"^11",["^4",["~$clj","^12"]],"^Q",1044,"^13",3,"^14",true,"^S",["^T",["^U",["^T",[["^2V","^2W","^2X"]]]]],"^W","Do not call this directly, use 'alt'"],"~$tagged-ret",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",656,"^P",8,"^Q",656,"^R",18,"^1U",true,"^S",["^T",["^U",["^T",[["^1E","~$ret"]]]]]],"^1U",true,"^;","~$cljs.spec.alpha/tagged-ret","^N","out/cljs/spec/alpha.cljs","^R",18,"^Y",["^T",[["^1E","^30"]]],"^Z",null,"^[",["^T",[null,null]],"^P",1,"^10",false,"^O",656,"^11","~$cljs.core/MapEntry","^Q",656,"^13",2,"^14",true,"^S",["^T",["^U",["^T",[["^1E","^30"]]]]]],"~$pvalid?",["^ ","^L",null,"^M",["^ ","^1U",true,"^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^R",15,"~:top-fn",["^ ","^10",false,"~:fixed-arity",3,"^13",3,"^Y",[["^1K","~$x"],["^1K","~$x","^K"]],"^S",["^T",[["^1K","~$x"],["^1K","~$x","^K"]]],"^[",["^T",[null,null]]],"^P",8,"^O",380,"^Q",380,"^S",["^T",["^U",["^T",[["^1K","~$x"],["^1K","~$x","^K"]]]]],"^W","internal helper function that returns true when x is valid for spec."],"^1U",true,"^;","~$cljs.spec.alpha/pvalid?","^N","out/cljs/spec/alpha.cljs","^R",15,"^34",["^ ","^10",false,"^35",3,"^13",3,"^Y",[["^1K","~$x"],["^1K","~$x","^K"]],"^S",["^T",[["^1K","~$x"],["^1K","~$x","^K"]]],"^[",["^T",[null,null]]],"^Y",[["^1K","~$x"],["^1K","~$x","^K"]],"^Z",null,"^35",3,"^[",["^T",[null,null]],"^P",1,"^10",false,"^2:",[["^ ","^35",2,"^10",false,"^1Q","~$boolean"],["^ ","^35",3,"^10",false,"^1Q","^37"]],"^O",380,"^Q",380,"^13",3,"^14",true,"^S",["^T",[["^1K","~$x"],["^1K","~$x","^K"]]],"^W","internal helper function that returns true when x is valid for spec."],"~$def-impl",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",306,"^P",19,"^Q",306,"^R",27,"^1J",true,"^S",["^T",["^U",["^T",[["~$k","^K","^V"]]]]],"^W","Do not call this directly, use 'def'"],"^;","~$cljs.spec.alpha/def-impl","^N","out/cljs/spec/alpha.cljs","^R",27,"^Y",["^T",[["~$k","^K","^V"]]],"^Z",null,"^1J",true,"^[",["^T",[null,null]],"^P",1,"^10",false,"^O",306,"^Q",306,"^13",3,"^14",true,"^S",["^T",["^U",["^T",[["~$k","^K","^V"]]]]],"^W","Do not call this directly, use 'def'"],"~$->t_cljs$spec$alpha1143",["^ ","^L",null,"^M",["^ ","^16",true,"^17",["^4",["^18","^19","^1:","^1;"]],"^1<",["^4",["^19","^1;"]],"^1=","^1>","^S",["^T",["^U",["^T",[["^K","^1K","^1A","~$cpred?","~$unc","~$meta1144"]]]]],"^W","Positional factory function for cljs.spec.alpha/t_cljs$spec$alpha1143.","^N",null],"^17",["^4",["^18","^19","^1:","^1;"]],"^;","~$cljs.spec.alpha/->t_cljs$spec$alpha1143","^N","out/cljs/spec/alpha.cljs","^Y",["^T",[["^K","^1K","^1A","^3;","^3<","^3="]]],"^Z",null,"^[",["^T",[null,null]],"^16",true,"^P",6,"^10",false,"^1=","^1>","^O",520,"^11","^2D","^13",6,"^14",true,"^S",["^T",["^U",["^T",[["^K","^1K","^1A","^3;","^3<","^3="]]]]],"^1<",["^4",["^19","^1;"]],"^W","Positional factory function for cljs.spec.alpha/t_cljs$spec$alpha1143."],"~$*explain-out*",["^ ","^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",262,"^P",16,"^Q",262,"^R",29,"^1O",true],"^;","~$cljs.spec.alpha/*explain-out*","^N","out/cljs/spec/alpha.cljs","^R",29,"^P",1,"^1O",true,"^O",262,"^Q",262,"^1Q","^12"],"~$*runtime-asserts*",["^ ","^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",1482,"^P",3,"^Q",1482,"^R",20,"^1U",true,"^1O",true],"^1U",true,"^;","~$cljs.spec.alpha/*runtime-asserts*","^N","out/cljs/spec/alpha.cljs","^R",20,"^P",1,"^1O",true,"^O",1480,"^Q",1482,"^1Q","^12"],"~$regex-spec-impl",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",1294,"^P",19,"^Q",1294,"^R",34,"^1J",true,"^S",["^T",["^U",["^T",[["~$re","^1A"]]]]],"^W","Do not call this directly, use 'spec' with a regex op argument"],"^;","~$cljs.spec.alpha/regex-spec-impl","^N","out/cljs/spec/alpha.cljs","^R",34,"^Y",["^T",[["^3D","^1A"]]],"^Z",null,"^1J",true,"^[",["^T",[null,null]],"^P",1,"^10",false,"^O",1294,"^11","^2O","^Q",1294,"^13",2,"^14",true,"^S",["^T",["^U",["^T",[["^3D","^1A"]]]]],"^W","Do not call this directly, use 'spec' with a regex op argument"],"~$merge-spec-impl",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",813,"^P",19,"^Q",813,"^R",34,"^1J",true,"^S",["^T",["^U",["^T",[["^2X","~$preds","^1A"]]]]],"^W","Do not call this directly, use 'merge'"],"^;","~$cljs.spec.alpha/merge-spec-impl","^N","out/cljs/spec/alpha.cljs","^R",34,"^Y",["^T",[["^2X","^3G","^1A"]]],"^Z",null,"^1J",true,"^[",["^T",[null,null]],"^P",1,"^10",false,"^O",813,"^11","^2B","^Q",813,"^13",3,"^14",true,"^S",["^T",["^U",["^T",[["^2X","^3G","^1A"]]]]],"^W","Do not call this directly, use 'merge'"],"~$explain-data*",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",219,"^P",7,"^Q",219,"^R",20,"^S",["^T",["^U",["^T",[["^V","^21","^22","^23","~$x"]]]]]],"^;","~$cljs.spec.alpha/explain-data*","^N","out/cljs/spec/alpha.cljs","^R",20,"^Y",["^T",[["^V","^21","^22","^23","~$x"]]],"^Z",null,"^[",["^T",[null,null]],"^P",1,"^10",false,"^O",219,"^11",["^4",["^1W","^1["]],"^Q",219,"^13",5,"^14",true,"^S",["^T",["^U",["^T",[["^V","^21","^22","^23","~$x"]]]]]],"~$add-ret",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",1110,"^P",8,"^Q",1110,"^R",15,"^1U",true,"^S",["^T",["^U",["^T",[["~$p","~$r","~$k"]]]]]],"^1U",true,"^;","~$cljs.spec.alpha/add-ret","^N","out/cljs/spec/alpha.cljs","^R",15,"^Y",["^T",[["~$p","~$r","~$k"]]],"^Z",null,"^[",["^T",[null,null]],"^P",1,"^10",false,"^O",1110,"^11",["^4",[null,"^2Z","^12"]],"^Q",1110,"^13",3,"^14",true,"^S",["^T",["^U",["^T",[["~$p","~$r","~$k"]]]]]],"~$explain-pred-list",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",738,"^P",8,"^Q",738,"^R",25,"^1U",true,"^S",["^T",["^U",["^T",[["^2X","^3G","^21","^22","^23","~$x"]]]]]],"^1U",true,"^;","~$cljs.spec.alpha/explain-pred-list","^N","out/cljs/spec/alpha.cljs","^R",25,"^Y",["^T",[["^2X","^3G","^21","^22","^23","~$x"]]],"^Z",null,"^[",["^T",[null,null]],"^P",1,"^10",false,"^O",738,"^11",["^4",["^26","^12","^1["]],"^Q",738,"^13",6,"^14",true,"^S",["^T",["^U",["^T",[["^2X","^3G","^21","^22","^23","~$x"]]]]]],"~$t_cljs$spec$alpha1087",["^ ","^2Q",19,"^17",["^4",["^18","^19","^1:","^1;"]],"^;","^2N","^N","out/cljs/spec/alpha.cljs","^2R",true,"^16",true,"^P",5,"^O",430,"^2S",false,"^1Q","^2T","^1<",["^4",["^19","^1;"]]],"~$MAX_INT",["^ ","^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",19,"^P",14,"^Q",19,"^R",21,"~:const",true],"^;","~$cljs.spec.alpha/MAX_INT","^N","out/cljs/spec/alpha.cljs","^R",21,"~:const-expr",["^ ","~:op","^3Q","~:val",9007199254740991,"~:env",["^ ","~:context","~:expr"],"~:form",9007199254740991,"^1Q","~$number"],"^P",1,"^3Q",true,"^O",19,"^Q",19,"^1Q","^3Z"],"~$check-asserts",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",1490,"^P",7,"^Q",1490,"^R",20,"^S",["^T",["^U",["^T",[["~$flag"]]]]],"^W","Enable or disable spec asserts that have been compiled\nwith '*compile-asserts*' true.  See 'assert'.\nInitially set to boolean value of cljs.spec.alpha/*runtime-asserts*.\nDefaults to false."],"^;","~$cljs.spec.alpha/check-asserts","^N","out/cljs/spec/alpha.cljs","^R",20,"^Y",["^T",[["^40"]]],"^Z",null,"^[",["^T",[null,null]],"^P",1,"^10",false,"^O",1490,"^Q",1490,"^13",1,"^14",true,"^S",["^T",["^U",["^T",[["^40"]]]]],"^W","Enable or disable spec asserts that have been compiled\nwith '*compile-asserts*' true.  See 'assert'.\nInitially set to boolean value of cljs.spec.alpha/*runtime-asserts*.\nDefaults to false."],"~$alt2",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",1042,"^P",8,"^Q",1042,"^R",12,"^1U",true,"^S",["^T",["^U",["^T",[["~$p1","~$p2"]]]]]],"^1U",true,"^;","~$cljs.spec.alpha/alt2","^N","out/cljs/spec/alpha.cljs","^R",12,"^Y",["^T",[["^43","^44"]]],"^Z",null,"^[",["^T",[null,null]],"^P",1,"^10",false,"^O",1042,"^11",["^4",[null,"^12","^1W","^1["]],"^Q",1042,"^13",2,"^14",true,"^S",["^T",["^U",["^T",[["^43","^44"]]]]]],"~$and-k-gen",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",417,"^P",8,"^Q",417,"^R",17,"^1U",true,"^S",["^T",["^U",["^T",[["~$s"]]]]],"^W","returns a tuple generator made up of generators for every element\n  in s."],"^1U",true,"^;","~$cljs.spec.alpha/and-k-gen","^N","out/cljs/spec/alpha.cljs","^R",17,"^Y",["^T",[["~$s"]]],"^Z",null,"^[",["^T",[null,null]],"^P",1,"^10",false,"^O",417,"^11","^12","^Q",417,"^13",1,"^14",true,"^S",["^T",["^U",["^T",[["~$s"]]]]],"^W","returns a tuple generator made up of generators for every element\n  in s."],"~$->t_cljs$spec$alpha1430",["^ ","^L",null,"^M",["^ ","^16",true,"^17",["^4",["^18","^19","^1:","^1;","~$cljs.core/ILookup"]],"^1<",["^4",["^19","^1;","^49"]],"^1=","^1>","^S",["^T",["^U",["^T",[["~$argspec","~$aform","~$retspec","~$rform","~$fnspec","~$fform","^1A","~$specs","~$meta1431"]]]]],"^W","Positional factory function for cljs.spec.alpha/t_cljs$spec$alpha1430.","^N",null],"^17",["^4",["^18","^19","^1:","^1;","^49"]],"^;","~$cljs.spec.alpha/->t_cljs$spec$alpha1430","^N","out/cljs/spec/alpha.cljs","^Y",["^T",[["^4:","^4;","^4<","^4=","^4>","^4?","^1A","^4@","^4A"]]],"^Z",null,"^[",["^T",[null,null]],"^16",true,"^P",5,"^10",false,"^1=","^1>","^O",1346,"^11","^2E","^13",9,"^14",true,"^S",["^T",["^U",["^T",[["^4:","^4;","^4<","^4=","^4>","^4?","^1A","^4@","^4A"]]]]],"^1<",["^4",["^19","^1;","^49"]],"^W","Positional factory function for cljs.spec.alpha/t_cljs$spec$alpha1430."],"~$assert*",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",1498,"^P",7,"^Q",1498,"^R",14,"^S",["^T",["^U",["^T",[["^V","~$x"]]]]],"^W","Do not call this directly, use 'assert'."],"^;","~$cljs.spec.alpha/assert*","^N","out/cljs/spec/alpha.cljs","^R",14,"^Y",["^T",[["^V","~$x"]]],"^Z",null,"^[",["^T",[null,null]],"^P",1,"^10",false,"^O",1498,"^Q",1498,"^13",2,"^14",true,"^S",["^T",["^U",["^T",[["^V","~$x"]]]]],"^W","Do not call this directly, use 'assert'."],"~$fn-sym",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",123,"^P",8,"^Q",123,"^R",14,"^1U",true,"^S",["^T",["^U",["^T",[["~$f-n"]]]]]],"^1U",true,"^;","~$cljs.spec.alpha/fn-sym","^N","out/cljs/spec/alpha.cljs","^R",14,"^Y",["^T",[["^4F"]]],"^Z",null,"^[",["^T",[null,null]],"^P",1,"^10",false,"^O",123,"^11",["^4",["^12","^2K","^1["]],"^Q",123,"^13",1,"^14",true,"^S",["^T",["^U",["^T",[["^4F"]]]]]],"~$inst-in-range?",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",1445,"^P",7,"^Q",1445,"^R",21,"^S",["^T",["^U",["^T",[["~$start","~$end","~$inst"]]]]],"^W","Return true if inst at or after start and before end"],"^;","~$cljs.spec.alpha/inst-in-range?","^N","out/cljs/spec/alpha.cljs","^R",21,"^Y",["^T",[["^4I","^4J","^4K"]]],"^Z",null,"^[",["^T",[null,null]],"^P",1,"^10",false,"^O",1445,"^11","^37","^Q",1445,"^13",3,"^14",true,"^S",["^T",["^U",["^T",[["^4I","^4J","^4K"]]]]],"^W","Return true if inst at or after start and before end"],"~$registry-ref",["^ ","^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",47,"^P",20,"^Q",47,"^R",32,"^1U",true],"^1U",true,"^;","~$cljs.spec.alpha/registry-ref","^N","out/cljs/spec/alpha.cljs","^R",32,"^P",1,"^O",47,"^Q",47,"^1Q","~$cljs.core/Atom"],"~$accept?",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",979,"^P",8,"^Q",979,"^R",15,"^1U",true,"^S",["^T",["^U",["^T",[[["^ ","~:keys",["~:cljs.spec.alpha/op"]]]]]]]],"^1U",true,"^;","~$cljs.spec.alpha/accept?","^N","out/cljs/spec/alpha.cljs","^R",15,"^Y",["^T",[["~$p__1309"]]],"^Z",null,"^[",["^T",[null,null]],"^P",1,"^10",false,"^O",979,"^11","^37","^Q",979,"^13",1,"^14",true,"^S",["^T",["^U",["^T",[[["^ ","^4Q",["^4R"]]]]]]]],"~$and-spec-impl",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",749,"^P",19,"^Q",749,"^R",32,"^1J",true,"^S",["^T",["^U",["^T",[["^2X","^3G","^1A"]]]]],"^W","Do not call this directly, use 'and'"],"^;","~$cljs.spec.alpha/and-spec-impl","^N","out/cljs/spec/alpha.cljs","^R",32,"^Y",["^T",[["^2X","^3G","^1A"]]],"^Z",null,"^1J",true,"^[",["^T",[null,null]],"^P",1,"^10",false,"^O",749,"^11","^2I","^Q",749,"^13",3,"^14",true,"^S",["^T",["^U",["^T",[["^2X","^3G","^1A"]]]]],"^W","Do not call this directly, use 'and'"],"~$accept",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",977,"^P",8,"^Q",977,"^R",14,"^1U",true,"^S",["^T",["^U",["^T",[["~$x"]]]]]],"^1U",true,"^;","~$cljs.spec.alpha/accept","^N","out/cljs/spec/alpha.cljs","^R",14,"^Y",["^T",[["~$x"]]],"^Z",null,"^[",["^T",[null,null]],"^P",1,"^10",false,"^O",977,"^11","^1W","^Q",977,"^13",1,"^14",true,"^S",["^T",["^U",["^T",[["~$x"]]]]]],"~$recur-limit?",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",351,"^P",8,"^Q",351,"^R",20,"^1U",true,"^S",["^T",["^U",["^T",[["~$rmap","^1B","^21","~$k"]]]]]],"^1U",true,"^;","~$cljs.spec.alpha/recur-limit?","^N","out/cljs/spec/alpha.cljs","^R",20,"^Y",["^T",[["^4Z","^1B","^21","~$k"]]],"^Z",null,"^[",["^T",[null,null]],"^P",1,"^10",false,"^O",351,"^11","^37","^Q",351,"^13",4,"^14",true,"^S",["^T",["^U",["^T",[["^4Z","^1B","^21","~$k"]]]]]],"~$t_cljs$spec$alpha1177",["^ ","^2Q",9,"^17",["^4",["^18","^19","^1:","^1;"]],"^;","^2A","^N","out/cljs/spec/alpha.cljs","^2R",true,"^16",true,"^P",5,"^O",697,"^2S",false,"^1Q","^2T","^1<",["^4",["^19","^1;"]]],"~$describe*",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",45,"^P",4,"^Q",45,"^R",13,"~:protocol","^18","^W",null,"^S",["^T",["^U",["^T",[["^V"]]]]]],"^52","^18","^;","~$cljs.spec.alpha/describe*","^N","out/cljs/spec/alpha.cljs","^R",13,"^Y",["^T",[["^V"]]],"^Z",null,"^[",["^T",[null,null]],"^P",1,"^10",false,"^O",39,"^11","^12","^Q",45,"^13",1,"^14",true,"^S",["^T",["^U",["^T",[["^V"]]]]],"^W",null],"~$map-spec-impl",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",423,"^P",19,"^Q",423,"^R",32,"^1J",true,"^S",["^T",["^U",["^T",[[["^ ","^4Q",["~$req-un","~$opt-un","~$keys-pred","~$pred-exprs","~$opt-keys","~$req-specs","~$req","~$req-keys","~$opt-specs","~$pred-forms","~$opt","^1A"],"~:as","~$argm"]]]]]],"^W","Do not call this directly, use 'spec' with a map argument"],"^;","~$cljs.spec.alpha/map-spec-impl","^N","out/cljs/spec/alpha.cljs","^R",32,"^Y",["^T",[["~$p__1085"]]],"^Z",null,"^1J",true,"^[",["^T",[null,null]],"^P",1,"^10",false,"^O",423,"^11","^2N","^Q",423,"^13",1,"^14",true,"^S",["^T",["^U",["^T",[[["^ ","^4Q",["^55","^56","^57","^58","^59","^5:","^5;","^5<","^5=","^5>","^5?","^1A"],"^5@","^5A"]]]]]],"^W","Do not call this directly, use 'spec' with a map argument"],"~$reg-resolve!",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",66,"^P",8,"^Q",66,"^R",20,"^1U",true,"^S",["^T",["^U",["^T",[["~$k"]]]]],"^W","returns the spec/regex at end of alias chain starting with k, throws if not found, k if k not ident"],"^1U",true,"^;","~$cljs.spec.alpha/reg-resolve!","^N","out/cljs/spec/alpha.cljs","^R",20,"^Y",["^T",[["~$k"]]],"^Z",null,"^[",["^T",[null,null]],"^P",1,"^10",false,"^O",66,"^11",["^4",[null,"^12"]],"^Q",66,"^13",1,"^14",true,"^S",["^T",["^U",["^T",[["~$k"]]]]],"^W","returns the spec/regex at end of alias chain starting with k, throws if not found, k if k not ident"],"~$t_cljs$spec$alpha1143",["^ ","^2Q",6,"^17",["^4",["^18","^19","^1:","^1;"]],"^;","^2D","^N","out/cljs/spec/alpha.cljs","^2R",true,"^16",true,"^P",6,"^O",520,"^2S",false,"^1Q","^2T","^1<",["^4",["^19","^1;"]]],"~$re-explain",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",1268,"^P",8,"^Q",1268,"^R",18,"^1U",true,"^S",["^T",["^U",["^T",[["^21","^22","^23","^3D","^24"]]]]]],"^1U",true,"^;","~$cljs.spec.alpha/re-explain","^N","out/cljs/spec/alpha.cljs","^R",18,"^Y",["^T",[["^21","^22","^23","^3D","^24"]]],"^Z",null,"^[",["^T",[null,null]],"^P",1,"^10",false,"^O",1268,"^11",["^4",["^26","^12","^1["]],"^Q",1268,"^13",5,"^14",true,"^S",["^T",["^U",["^T",[["^21","^22","^23","^3D","^24"]]]]]],"~$alts",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",1041,"^P",8,"^Q",1041,"^R",12,"^1U",true,"^S",["^T",["^U",["^T",[["~$&","^2W"]]]]],"^34",["^ ","^10",true,"^35",0,"^13",0,"^Y",[["^T",["^2W"]]],"^S",["^T",[["~$&","^2W"]]],"^[",["^T",[null]]]],"^1U",true,"^;","~$cljs.spec.alpha/alts","^N","out/cljs/spec/alpha.cljs","^R",12,"^34",["^ ","^10",true,"^35",0,"^13",0,"^Y",[["^T",["^2W"]]],"^S",["^T",[["~$&","^2W"]]],"^[",["^T",[null]]],"^Y",[["^T",["^2W"]]],"^Z",null,"^35",0,"^[",["^T",[null]],"^P",1,"^10",true,"^2:",[["^ ","^35",0,"^10",true,"^1Q",["^4",["^12","^1W","^1["]]]],"^O",1041,"^11","^12","^Q",1041,"^13",0,"^14",true,"^S",["^T",[["~$&","^2W"]]]],"~$with-name",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",85,"^P",8,"^Q",85,"^R",17,"^1U",true,"^S",["^T",["^U",["^T",[["^V","~$name"]]]]]],"^1U",true,"^;","~$cljs.spec.alpha/with-name","^N","out/cljs/spec/alpha.cljs","^R",17,"^Y",["^T",[["^V","^5L"]]],"^Z",null,"^[",["^T",[null,null]],"^P",1,"^10",false,"^O",85,"^11",["^4",["^2Z","^12","^2C","^2K","~$cljs.core/MetaFn","^1["]],"^Q",85,"^13",2,"^14",true,"^S",["^T",["^U",["^T",[["^V","^5L"]]]]]],"~$explain",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",270,"^P",7,"^Q",270,"^R",14,"^S",["^T",["^U",["^T",[["^V","~$x"]]]]],"^W","Given a spec and a value that fails to conform, prints an explanation to *out*."],"^;","~$cljs.spec.alpha/explain","^N","out/cljs/spec/alpha.cljs","^R",14,"^Y",["^T",[["^V","~$x"]]],"^Z",null,"^[",["^T",[null,null]],"^P",1,"^10",false,"^O",270,"^11","^12","^Q",270,"^13",2,"^14",true,"^S",["^T",["^U",["^T",[["^V","~$x"]]]]],"^W","Given a spec and a value that fails to conform, prints an explanation to *out*."],"~$spec-name",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",93,"^P",8,"^Q",93,"^R",17,"^1U",true,"^S",["^T",["^U",["^T",[["^V"]]]]]],"^1U",true,"^;","~$cljs.spec.alpha/spec-name","^N","out/cljs/spec/alpha.cljs","^R",17,"^Y",["^T",[["^V"]]],"^Z",null,"^[",["^T",[null,null]],"^P",1,"^10",false,"^O",93,"^11",["^4",["^12","^2C","^2K","^1["]],"^Q",93,"^13",1,"^14",true,"^S",["^T",["^U",["^T",[["^V"]]]]]],"~$map-spec",["^ ","^;","~$cljs.spec.alpha/map-spec","^N","out/cljs/spec/alpha.cljs","^O",335,"^P",1,"^Q",335,"^R",18,"~:declared",true,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",335,"^P",10,"^Q",335,"^R",18,"^5U",true]],"~$->t_cljs$spec$alpha1458",["^ ","^L",null,"^M",["^ ","^16",true,"^17",["^4",["^18","^19","^1:","^1;"]],"^1<",["^4",["^19","^1;"]],"^1=","^1>","^S",["^T",["^U",["^T",[["^K","^1K","^1A","^V","~$meta1459"]]]]],"^W","Positional factory function for cljs.spec.alpha/t_cljs$spec$alpha1458.","^N",null],"^17",["^4",["^18","^19","^1:","^1;"]],"^;","~$cljs.spec.alpha/->t_cljs$spec$alpha1458","^N","out/cljs/spec/alpha.cljs","^Y",["^T",[["^K","^1K","^1A","^V","^5W"]]],"^Z",null,"^[",["^T",[null,null]],"^16",true,"^P",5,"^10",false,"^1=","^1>","^O",1414,"^11","^1M","^13",5,"^14",true,"^S",["^T",["^U",["^T",[["^K","^1K","^1A","^V","^5W"]]]]],"^1<",["^4",["^19","^1;"]],"^W","Positional factory function for cljs.spec.alpha/t_cljs$spec$alpha1458."],"~$->t_cljs$spec$alpha1423",["^ ","^L",null,"^M",["^ ","^16",true,"^17",["^4",["^18","^19","^1:","^1;"]],"^1<",["^4",["^19","^1;"]],"^1=","^1>","^S",["^T",["^U",["^T",[["^3D","^1A","~$meta1424"]]]]],"^W","Positional factory function for cljs.spec.alpha/t_cljs$spec$alpha1423.","^N",null],"^17",["^4",["^18","^19","^1:","^1;"]],"^;","~$cljs.spec.alpha/->t_cljs$spec$alpha1423","^N","out/cljs/spec/alpha.cljs","^Y",["^T",[["^3D","^1A","^5Z"]]],"^Z",null,"^[",["^T",[null,null]],"^16",true,"^P",3,"^10",false,"^1=","^1>","^O",1297,"^11","^2O","^13",3,"^14",true,"^S",["^T",["^U",["^T",[["^3D","^1A","^5Z"]]]]],"^1<",["^4",["^19","^1;"]],"^W","Positional factory function for cljs.spec.alpha/t_cljs$spec$alpha1423."],"~$with-gen*",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",44,"^P",4,"^Q",44,"^R",13,"^52","^18","^W",null,"^S",["^T",["^U",["^T",[["^V","^1A"]]]]]],"^52","^18","^;","~$cljs.spec.alpha/with-gen*","^N","out/cljs/spec/alpha.cljs","^R",13,"^Y",["^T",[["^V","^1A"]]],"^Z",null,"^[",["^T",[null,null]],"^P",1,"^10",false,"^O",39,"^11","^12","^Q",44,"^13",2,"^14",true,"^S",["^T",["^U",["^T",[["^V","^1A"]]]]],"^W",null],"~$t_cljs$spec$alpha1249",["^ ","^2Q",4,"^17",["^4",["^18","^19","^1:","^1;"]],"^;","^2B","^N","out/cljs/spec/alpha.cljs","^2R",true,"^16",true,"^P",3,"^O",816,"^2S",false,"^1Q","^2T","^1<",["^4",["^19","^1;"]]],"~$k-gen",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",397,"^P",8,"^Q",397,"^R",13,"^1U",true,"^S",["^T",["^U",["^T",[["~$f"]]]]],"^W","returns a generator for form f, which can be a keyword or a list\n  starting with 'or or 'and."],"^1U",true,"^;","~$cljs.spec.alpha/k-gen","^N","out/cljs/spec/alpha.cljs","^R",13,"^Y",["^T",[["~$f"]]],"^Z",null,"^[",["^T",[null,null]],"^P",1,"^10",false,"^O",397,"^11",["^4",["^12","^1["]],"^Q",397,"^13",1,"^14",true,"^S",["^T",["^U",["^T",[["~$f"]]]]],"^W","returns a generator for form f, which can be a keyword or a list\n  starting with 'or or 'and."],"~$or-spec-impl",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",659,"^P",19,"^Q",659,"^R",31,"^1J",true,"^S",["^T",["^U",["^T",[["^8","^2X","^3G","^1A"]]]]],"^W","Do not call this directly, use 'or'"],"^;","~$cljs.spec.alpha/or-spec-impl","^N","out/cljs/spec/alpha.cljs","^R",31,"^Y",["^T",[["^8","^2X","^3G","^1A"]]],"^Z",null,"^1J",true,"^[",["^T",[null,null]],"^P",1,"^10",false,"^O",659,"^11","^2A","^Q",659,"^13",4,"^14",true,"^S",["^T",["^U",["^T",[["^8","^2X","^3G","^1A"]]]]],"^W","Do not call this directly, use 'or'"],"~$specize",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",159,"^P",8,"^Q",159,"^R",15,"^1U",true,"^S",["^T",["^U",["^T",[["~$s"],["~$s","^K"]]]]],"^34",["^ ","^10",false,"^35",2,"^13",2,"^Y",[["~$s"],["~$s","^K"]],"^S",["^T",[["~$s"],["~$s","^K"]]],"^[",["^T",[null,null]]]],"^1U",true,"^;","~$cljs.spec.alpha/specize","^N","out/cljs/spec/alpha.cljs","^R",15,"^34",["^ ","^10",false,"^35",2,"^13",2,"^Y",[["~$s"],["~$s","^K"]],"^S",["^T",[["~$s"],["~$s","^K"]]],"^[",["^T",[null,null]]],"^Y",[["~$s"],["~$s","^K"]],"^Z",null,"^35",2,"^[",["^T",[null,null]],"^P",1,"^10",false,"^2:",[["^ ","^35",1,"^10",false,"^1Q",["^4",["^18","^12"]]],["^ ","^35",2,"^10",false,"^1Q",["^4",["^18","^12"]]]],"^O",159,"^Q",159,"^13",2,"^14",true,"^S",["^T",[["~$s"],["~$s","^K"]]]],"~$*fspec-iterations*",["^ ","^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",27,"^P",16,"^Q",27,"^R",34,"^1O",true],"^;","~$cljs.spec.alpha/*fspec-iterations*","^N","out/cljs/spec/alpha.cljs","^R",34,"^P",1,"^1O",true,"^O",27,"^Q",27,"^1Q","^12","^W","The number of times an anonymous fn specified by fspec will be (generatively) tested during conform"],"~$Spec",["^ ","^M",["^ ","^28",true,"^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^R",18,"^P",14,"^O",39,"^29",["^ ","^2:",["^ ","~$conform*",[["^V","~$x"]],"~$unform*",[["^V","~$y"]],"~$explain*",[["^V","^21","^22","^23","~$x"]],"~$gen*",[["^V","~$overrides","^21","^4Z"]],"^60",[["^V","^1A"]],"^51",[["^V"]]]],"^Q",39,"^2<",["^ ","~:conform*",["^ ","^;","^6<","^S",["^T",[["^V","~$x"]]],"^W",null],"~:unform*",["^ ","^;","^6=","^S",["^T",[["^V","~$y"]]],"^W",null],"~:explain*",["^ ","^;","^6>","^S",["^T",[["^V","^21","^22","^23","~$x"]]],"^W",null],"~:gen*",["^ ","^;","^6?","^S",["^T",[["^V","^6@","^21","^4Z"]]],"^W",null],"~:with-gen*",["^ ","^;","^60","^S",["^T",[["^V","^1A"]]],"^W",null],"~:describe*",["^ ","^;","^51","^S",["^T",[["^V"]]],"^W",null]],"^2>",["^T",["@interface"]]],"^28",true,"^;","^18","^N","out/cljs/spec/alpha.cljs","^R",18,"^P",1,"^O",39,"^29",["^ ","^2:",["^ ","^6<",[["^V","~$x"]],"^6=",[["^V","~$y"]],"^6>",[["^V","^21","^22","^23","~$x"]],"^6?",[["^V","^6@","^21","^4Z"]],"^60",[["^V","^1A"]],"^51",[["^V"]]]],"^2?",null,"^Q",39,"^1Q","^12","^2<",["^ ","^6A",["^ ","^;","^6<","^S",["^T",[["^V","~$x"]]],"^W",null],"^6B",["^ ","^;","^6=","^S",["^T",[["^V","~$y"]]],"^W",null],"^6C",["^ ","^;","^6>","^S",["^T",[["^V","^21","^22","^23","~$x"]]],"^W",null],"^6D",["^ ","^;","^6?","^S",["^T",[["^V","^6@","^21","^4Z"]]],"^W",null],"^6E",["^ ","^;","^60","^S",["^T",[["^V","^1A"]]],"^W",null],"^6F",["^ ","^;","^51","^S",["^T",[["^V"]]],"^W",null]],"^2@",["^4",["^2A","^2B","^2D","^2E","^1M","^2H","^2I","^1H","^2L","^2M","^2N","^2O"]],"^2>",["^T",["@interface"]]],"~$unform",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",174,"^P",7,"^Q",174,"^R",13,"^S",["^T",["^U",["^T",[["^V","~$x"]]]]],"^W","Given a spec and a value created by or compliant with a call to\n  'conform' with the same spec, returns a value with all conform\n   destructuring undone."],"^;","~$cljs.spec.alpha/unform","^N","out/cljs/spec/alpha.cljs","^R",13,"^Y",["^T",[["^V","~$x"]]],"^Z",null,"^[",["^T",[null,null]],"^P",1,"^10",false,"^O",174,"^11","^12","^Q",174,"^13",2,"^14",true,"^S",["^T",["^U",["^T",[["^V","~$x"]]]]],"^W","Given a spec and a value created by or compliant with a call to\n  'conform' with the same spec, returns a value with all conform\n   destructuring undone."],"~$valid?",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",371,"^P",7,"^Q",371,"^R",13,"^S",["^T",["^U",["^T",[["^V","~$x"],["^V","~$x","^K"]]]]],"^W","Helper function that returns true when x is valid for spec.","^34",["^ ","^10",false,"^35",3,"^13",3,"^Y",[["^V","~$x"],["^V","~$x","^K"]],"^S",["^T",[["^V","~$x"],["^V","~$x","^K"]]],"^[",["^T",[null,null]]]],"^;","~$cljs.spec.alpha/valid?","^N","out/cljs/spec/alpha.cljs","^R",13,"^34",["^ ","^10",false,"^35",3,"^13",3,"^Y",[["^V","~$x"],["^V","~$x","^K"]],"^S",["^T",[["^V","~$x"],["^V","~$x","^K"]]],"^[",["^T",[null,null]]],"^Y",[["^V","~$x"],["^V","~$x","^K"]],"^Z",null,"^35",3,"^[",["^T",[null,null]],"^P",1,"^10",false,"^2:",[["^ ","^35",2,"^10",false,"^1Q","^37"],["^ ","^35",3,"^10",false,"^1Q","^37"]],"^O",371,"^Q",371,"^13",3,"^14",true,"^S",["^T",[["^V","~$x"],["^V","~$x","^K"]]],"^W","Helper function that returns true when x is valid for spec."],"^D",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",293,"^P",7,"^Q",293,"^R",10,"^S",["^T",["^U",["^T",[["^V"],["^V","^6@"]]]]],"^W","Given a spec, returns the generator for it, or throws if none can\n  be constructed. Optionally an overrides map can be provided which\n  should map spec names or paths (vectors of keywords) to no-arg\n  generator-creating fns. These will be used instead of the generators at those\n  names/paths. Note that parent generator (in the spec or overrides\n  map) will supersede those of any subtrees. A generator for a regex\n  op must always return a sequential collection (i.e. a generator for\n  s/? should return either an empty sequence/vector or a\n  sequence/vector with one item in it)","^34",["^ ","^10",false,"^35",2,"^13",2,"^Y",[["^V"],["^V","^6@"]],"^S",["^T",[["^V"],["^V","^6@"]]],"^[",["^T",[null,null]]]],"^;","~$cljs.spec.alpha/gen","^N","out/cljs/spec/alpha.cljs","^R",10,"^34",["^ ","^10",false,"^35",2,"^13",2,"^Y",[["^V"],["^V","^6@"]],"^S",["^T",[["^V"],["^V","^6@"]]],"^[",["^T",[null,null]]],"^Y",[["^V"],["^V","^6@"]],"^Z",null,"^35",2,"^[",["^T",[null,null]],"^P",1,"^10",false,"^2:",[["^ ","^35",1,"^10",false,"^1Q","^12"],["^ ","^35",2,"^10",false,"^1Q","^12"]],"^O",293,"^Q",293,"^13",2,"^14",true,"^S",["^T",[["^V"],["^V","^6@"]]],"^W","Given a spec, returns the generator for it, or throws if none can\n  be constructed. Optionally an overrides map can be provided which\n  should map spec names or paths (vectors of keywords) to no-arg\n  generator-creating fns. These will be used instead of the generators at those\n  names/paths. Note that parent generator (in the spec or overrides\n  map) will supersede those of any subtrees. A generator for a regex\n  op must always return a sequential collection (i.e. a generator for\n  s/? should return either an empty sequence/vector or a\n  sequence/vector with one item in it)"],"~$->t_cljs$spec$alpha1455",["^ ","^L",null,"^M",["^ ","^16",true,"^17",["^4",["^18","^19","^1:","^1;"]],"^1<",["^4",["^19","^1;"]],"^1=","^1>","^S",["^T",["^U",["^T",[["^V","~$meta1456"]]]]],"^W","Positional factory function for cljs.spec.alpha/t_cljs$spec$alpha1455.","^N",null],"^17",["^4",["^18","^19","^1:","^1;"]],"^;","~$cljs.spec.alpha/->t_cljs$spec$alpha1455","^N","out/cljs/spec/alpha.cljs","^Y",["^T",[["^V","^6M"]]],"^Z",null,"^[",["^T",[null,null]],"^16",true,"^P",5,"^10",false,"^1=","^1>","^O",1394,"^11","^2H","^13",2,"^14",true,"^S",["^T",["^U",["^T",[["^V","^6M"]]]]],"^1<",["^4",["^19","^1;"]],"^W","Positional factory function for cljs.spec.alpha/t_cljs$spec$alpha1455."],"~$nonconforming",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",1389,"^P",7,"^Q",1389,"^R",20,"^S",["^T",["^U",["^T",[["^V"]]]]],"^W","takes a spec and returns a spec that has the same properties except\n  'conform' returns the original (not the conformed) value. Note, will specize regex ops."],"^;","~$cljs.spec.alpha/nonconforming","^N","out/cljs/spec/alpha.cljs","^R",20,"^Y",["^T",[["^V"]]],"^Z",null,"^[",["^T",[null,null]],"^P",1,"^10",false,"^O",1389,"^11","^2H","^Q",1389,"^13",1,"^14",true,"^S",["^T",["^U",["^T",[["^V"]]]]],"^W","takes a spec and returns a spec that has the same properties except\n  'conform' returns the original (not the conformed) value. Note, will specize regex ops."],"^6=",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",41,"^P",4,"^Q",41,"^R",11,"^52","^18","^W",null,"^S",["^T",["^U",["^T",[["^V","~$y"]]]]]],"^52","^18","^;","~$cljs.spec.alpha/unform*","^N","out/cljs/spec/alpha.cljs","^R",11,"^Y",["^T",[["^V","~$y"]]],"^Z",null,"^[",["^T",[null,null]],"^P",1,"^10",false,"^O",39,"^11","^12","^Q",41,"^13",2,"^14",true,"^S",["^T",["^U",["^T",[["^V","~$y"]]]]],"^W",null],"~$->sym",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",323,"^P",8,"^Q",323,"^R",13,"^1U",true,"^S",["^T",["^U",["^T",[["~$x"]]]]],"^W","Returns a symbol from a symbol or var"],"^1U",true,"^;","~$cljs.spec.alpha/->sym","^N","out/cljs/spec/alpha.cljs","^R",13,"^Y",["^T",[["~$x"]]],"^Z",null,"^[",["^T",[null,null]],"^P",1,"^10",false,"^O",323,"^11",["^4",[null,"^12"]],"^Q",323,"^13",1,"^14",true,"^S",["^T",["^U",["^T",[["~$x"]]]]],"^W","Returns a symbol from a symbol or var"],"~$abbrev",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",187,"^P",7,"^Q",187,"^R",13,"^S",["^T",["^U",["^T",[["^K"]]]]]],"^;","~$cljs.spec.alpha/abbrev","^N","out/cljs/spec/alpha.cljs","^R",13,"^Y",["^T",[["^K"]]],"^Z",null,"^[",["^T",[null,null]],"^P",1,"^10",false,"^O",187,"^11",["^4",[null,"^12","^2K"]],"^Q",187,"^13",1,"^14",true,"^S",["^T",["^U",["^T",[["^K"]]]]]],"~$regex?",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",80,"^P",7,"^Q",80,"^R",13,"^S",["^T",["^U",["^T",[["~$x"]]]]],"^W","returns x if x is a (cljs.spec.alpha) regex op, else logical false"],"^;","~$cljs.spec.alpha/regex?","^N","out/cljs/spec/alpha.cljs","^R",13,"^Y",["^T",[["~$x"]]],"^Z",null,"^[",["^T",[null,null]],"^P",1,"^10",false,"^O",80,"^11",["^4",[null,"^12"]],"^Q",80,"^13",1,"^14",true,"^S",["^T",["^U",["^T",[["~$x"]]]]],"^W","returns x if x is a (cljs.spec.alpha) regex op, else logical false"],"~$or-k-gen",["^ ","^L",null,"^M",["^ ","^1U",true,"^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^R",16,"^34",["^ ","^10",false,"^35",2,"^13",2,"^Y",[["~$s"],["~$min-count","~$s"]],"^S",["^T",[["~$s"],["^6Y","~$s"]]],"^[",["^T",[null,null]]],"^P",8,"^O",406,"^Q",406,"^S",["^T",["^U",["^T",[["~$s"],["^6Y","~$s"]]]]],"^W","returns a tuple generator made up of generators for a random subset\n  of min-count (default 0) to all elements in s."],"^1U",true,"^;","~$cljs.spec.alpha/or-k-gen","^N","out/cljs/spec/alpha.cljs","^R",16,"^34",["^ ","^10",false,"^35",2,"^13",2,"^Y",[["~$s"],["^6Y","~$s"]],"^S",["^T",[["~$s"],["^6Y","~$s"]]],"^[",["^T",[null,null]]],"^Y",[["~$s"],["^6Y","~$s"]],"^Z",null,"^35",2,"^[",["^T",[null,null]],"^P",1,"^10",false,"^2:",[["^ ","^35",1,"^10",false,"^1Q","^12"],["^ ","^35",2,"^10",false,"^1Q","^12"]],"^O",406,"^Q",406,"^13",2,"^14",true,"^S",["^T",[["~$s"],["^6Y","~$s"]]],"^W","returns a tuple generator made up of generators for a random subset\n  of min-count (default 0) to all elements in s."],"~$int-in-range?",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",1452,"^P",7,"^Q",1452,"^R",20,"^S",["^T",["^U",["^T",[["^4I","^4J","~$val"]]]]],"^W","Return true if start <= val, val < end and val is a fixed\n  precision integer."],"^;","~$cljs.spec.alpha/int-in-range?","^N","out/cljs/spec/alpha.cljs","^R",20,"^Y",["^T",[["^4I","^4J","^70"]]],"^Z",null,"^[",["^T",[null,null]],"^P",1,"^10",false,"^O",1452,"^11",["^4",["^37","^12"]],"^Q",1452,"^13",3,"^14",true,"^S",["^T",["^U",["^T",[["^4I","^4J","^70"]]]]],"^W","Return true if start <= val, val < end and val is a fixed\n  precision integer."],"~$dt",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",358,"^P",8,"^Q",358,"^R",10,"^1U",true,"^S",["^T",["^U",["^T",[["^1K","~$x","^K"],["^1K","~$x","^K","^3;"]]]]],"^34",["^ ","^10",false,"^35",4,"^13",4,"^Y",[["^1K","~$x","^K"],["^1K","~$x","^K","^3;"]],"^S",["^T",[["^1K","~$x","^K"],["^1K","~$x","^K","^3;"]]],"^[",["^T",[null,null]]]],"^1U",true,"^;","~$cljs.spec.alpha/dt","^N","out/cljs/spec/alpha.cljs","^R",10,"^34",["^ ","^10",false,"^35",4,"^13",4,"^Y",[["^1K","~$x","^K"],["^1K","~$x","^K","^3;"]],"^S",["^T",[["^1K","~$x","^K"],["^1K","~$x","^K","^3;"]]],"^[",["^T",[null,null]]],"^Y",[["^1K","~$x","^K"],["^1K","~$x","^K","^3;"]],"^Z",null,"^35",4,"^[",["^T",[null,null]],"^P",1,"^10",false,"^2:",[["^ ","^35",3,"^10",false,"^1Q","^12"],["^ ","^35",4,"^10",false,"^1Q",["^4",[null,"^12","^2C"]]]],"^O",358,"^Q",358,"^13",4,"^14",true,"^S",["^T",[["^1K","~$x","^K"],["^1K","~$x","^K","^3;"]]]],"~$preturn",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",1074,"^P",8,"^Q",1074,"^R",15,"^1U",true,"^S",["^T",["^U",["^T",[["~$p"]]]]]],"^1U",true,"^;","~$cljs.spec.alpha/preturn","^N","out/cljs/spec/alpha.cljs","^R",15,"^Y",["^T",[["~$p"]]],"^Z",null,"^[",["^T",[null,null]],"^P",1,"^10",false,"^O",1074,"^11",["^4",[null,"^12","^2C","^32","^1["]],"^Q",1074,"^13",1,"^14",true,"^S",["^T",["^U",["^T",[["~$p"]]]]]],"~$re-conform",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",1255,"^P",8,"^Q",1255,"^R",18,"^1U",true,"^S",["^T",["^U",["^T",[["~$p",["~$x","~$&","~$xs","^5@","~$data"]]]]]]],"^1U",true,"^;","~$cljs.spec.alpha/re-conform","^N","out/cljs/spec/alpha.cljs","^R",18,"^Y",["^T",[["~$p","~$p__1404"]]],"^Z",null,"^[",["^T",[null,null]],"^P",1,"^10",false,"^O",1255,"^11",["^4",[null,"^12","^2C","^32","^1["]],"^Q",1255,"^13",2,"^14",true,"^S",["^T",["^U",["^T",[["~$p",["~$x","~$&","^77","^5@","^78"]]]]]]],"~$spec?",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",74,"^P",7,"^Q",74,"^R",12,"^S",["^T",["^U",["^T",[["~$x"]]]]],"^W","returns x if x is a spec object, else logical false"],"^;","~$cljs.spec.alpha/spec?","^N","out/cljs/spec/alpha.cljs","^R",12,"^Y",["^T",[["~$x"]]],"^Z",null,"^[",["^T",[null,null]],"^P",1,"^10",false,"^O",74,"^11",["^4",["^18","^1["]],"^Q",74,"^13",1,"^14",true,"^S",["^T",["^U",["^T",[["~$x"]]]]],"^W","returns x if x is a spec object, else logical false"],"~$t_cljs$spec$alpha1430",["^ ","^2Q",9,"^17",["^4",["^18","^19","^1:","^1;","^49"]],"^;","^2E","^N","out/cljs/spec/alpha.cljs","^2R",true,"^16",true,"^P",5,"^O",1346,"^2S",false,"^1Q","^2T","^1<",["^4",["^19","^1;","^49"]]],"~$registry",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",318,"^P",7,"^Q",318,"^R",15,"^S",["^T",["^U",["^T",[[]]]]],"^W","returns the registry map, prefer 'get-spec' to lookup a spec by name"],"^;","~$cljs.spec.alpha/registry","^N","out/cljs/spec/alpha.cljs","^R",15,"^Y",["^T",[[]]],"^Z",null,"^[",["^T",[null,null]],"^P",1,"^10",false,"^O",318,"^11","^12","^Q",318,"^13",0,"^14",true,"^S",["^T",["^U",["^T",[[]]]]],"^W","returns the registry map, prefer 'get-spec' to lookup a spec by name"],"~$rep+impl",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",1010,"^P",19,"^Q",1010,"^R",27,"^1J",true,"^S",["^T",["^U",["^T",[["^K","~$p"]]]]],"^W","Do not call this directly, use '+'"],"^;","~$cljs.spec.alpha/rep+impl","^N","out/cljs/spec/alpha.cljs","^R",27,"^Y",["^T",[["^K","~$p"]]],"^Z",null,"^1J",true,"^[",["^T",[null,null]],"^P",1,"^10",false,"^O",1010,"^11",["^4",["^12","^1W","^1["]],"^Q",1010,"^13",2,"^14",true,"^S",["^T",["^U",["^T",[["^K","~$p"]]]]],"^W","Do not call this directly, use '+'"],"~$deriv",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",1123,"^P",8,"^Q",1123,"^R",13,"^1U",true,"^S",["^T",["^U",["^T",[["~$p","~$x"]]]]]],"^1U",true,"^;","~$cljs.spec.alpha/deriv","^N","out/cljs/spec/alpha.cljs","^R",13,"^Y",["^T",[["~$p","~$x"]]],"^Z",null,"^[",["^T",[null,null]],"^P",1,"^10",false,"^O",1123,"^11",["^4",[null,"^12","^1W","^1["]],"^Q",1123,"^13",2,"^14",true,"^S",["^T",["^U",["^T",[["~$p","~$x"]]]]]],"~$t_cljs$spec$alpha1455",["^ ","^2Q",2,"^17",["^4",["^18","^19","^1:","^1;"]],"^;","^2H","^N","out/cljs/spec/alpha.cljs","^2R",true,"^16",true,"^P",5,"^O",1394,"^2S",false,"^1Q","^2T","^1<",["^4",["^19","^1;"]]],"~$deep-resolve",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",49,"^P",8,"^Q",49,"^R",20,"^1U",true,"^S",["^T",["^U",["^T",[["~$reg","~$k"]]]]]],"^1U",true,"^;","~$cljs.spec.alpha/deep-resolve","^N","out/cljs/spec/alpha.cljs","^R",20,"^Y",["^T",[["^7F","~$k"]]],"^Z",null,"^[",["^T",[null,null]],"^P",1,"^10",false,"^O",49,"^Q",49,"^13",2,"^14",true,"^S",["^T",["^U",["^T",[["^7F","~$k"]]]]]],"~$exercise",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",1436,"^P",7,"^Q",1436,"^R",15,"^S",["^T",["^U",["^T",[["^V"],["^V","~$n"],["^V","~$n","^6@"]]]]],"^W","generates a number (default 10) of values compatible with spec and maps conform over them,\n  returning a sequence of [val conformed-val] tuples. Optionally takes\n  a generator overrides map as per gen","^34",["^ ","^10",false,"^35",3,"^13",3,"^Y",[["^V"],["^V","~$n"],["^V","~$n","^6@"]],"^S",["^T",[["^V"],["^V","~$n"],["^V","~$n","^6@"]]],"^[",["^T",[null,null,null]]]],"^;","~$cljs.spec.alpha/exercise","^N","out/cljs/spec/alpha.cljs","^R",15,"^34",["^ ","^10",false,"^35",3,"^13",3,"^Y",[["^V"],["^V","~$n"],["^V","~$n","^6@"]],"^S",["^T",[["^V"],["^V","~$n"],["^V","~$n","^6@"]]],"^[",["^T",[null,null,null]]],"^Y",[["^V"],["^V","~$n"],["^V","~$n","^6@"]],"^Z",null,"^35",3,"^[",["^T",[null,null,null]],"^P",1,"^10",false,"^2:",[["^ ","^35",1,"^10",false,"^1Q","^12"],["^ ","^35",2,"^10",false,"^1Q","^12"],["^ ","^35",3,"^10",false,"^1Q","~$cljs.core/LazySeq"]],"^O",1436,"^Q",1436,"^13",3,"^14",true,"^S",["^T",[["^V"],["^V","~$n"],["^V","~$n","^6@"]]],"^W","generates a number (default 10) of values compatible with spec and maps conform over them,\n  returning a sequence of [val conformed-val] tuples. Optionally takes\n  a generator overrides map as per gen"],"~$explain-data",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",226,"^P",7,"^Q",226,"^R",19,"^S",["^T",["^U",["^T",[["^V","~$x"]]]]],"^W","Given a spec and a value x which ought to conform, returns nil if x\n  conforms, else a map with at least the key ::problems whose value is\n  a collection of problem-maps, where problem-map has at least :path :pred and :val\n  keys describing the predicate and the value that failed at that\n  path."],"^;","~$cljs.spec.alpha/explain-data","^N","out/cljs/spec/alpha.cljs","^R",19,"^Y",["^T",[["^V","~$x"]]],"^Z",null,"^[",["^T",[null,null]],"^P",1,"^10",false,"^O",226,"^11",["^4",["^1W","^1["]],"^Q",226,"^13",2,"^14",true,"^S",["^T",["^U",["^T",[["^V","~$x"]]]]],"^W","Given a spec and a value x which ought to conform, returns nil if x\n  conforms, else a map with at least the key ::problems whose value is\n  a collection of problem-maps, where problem-map has at least :path :pred and :val\n  keys describing the predicate and the value that failed at that\n  path."],"~$tuple-impl",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^R",29,"^34",["^ ","^10",false,"^35",3,"^13",3,"^Y",[["^2X","^3G"],["^2X","^3G","^1A"]],"^S",["^T",[["^2X","^3G"],["^2X","^3G","^1A"]]],"^[",["^T",[null,null]]],"^1J",true,"^P",19,"^O",594,"^Q",594,"^S",["^T",["^U",["^T",[["^2X","^3G"],["^2X","^3G","^1A"]]]]],"^W","Do not call this directly, use 'tuple'"],"^;","~$cljs.spec.alpha/tuple-impl","^N","out/cljs/spec/alpha.cljs","^R",29,"^34",["^ ","^10",false,"^35",3,"^13",3,"^Y",[["^2X","^3G"],["^2X","^3G","^1A"]],"^S",["^T",[["^2X","^3G"],["^2X","^3G","^1A"]]],"^[",["^T",[null,null]]],"^Y",[["^2X","^3G"],["^2X","^3G","^1A"]],"^Z",null,"^35",3,"^1J",true,"^[",["^T",[null,null]],"^P",1,"^10",false,"^2:",[["^ ","^35",2,"^10",false,"^1Q","^12"],["^ ","^35",3,"^10",false,"^1Q","^2L"]],"^O",594,"^Q",594,"^13",3,"^14",true,"^S",["^T",[["^2X","^3G"],["^2X","^3G","^1A"]]],"^W","Do not call this directly, use 'tuple'"],"~$->t_cljs$spec$alpha1168",["^ ","^L",null,"^M",["^ ","^16",true,"^17",["^4",["^18","^19","^1:","^1;"]],"^1<",["^4",["^19","^1;"]],"^1=","^1>","^S",["^T",["^U",["^T",[["^2X","^3G","^1A","^4@","~$cnt","~$meta1169"]]]]],"^W","Positional factory function for cljs.spec.alpha/t_cljs$spec$alpha1168.","^N",null],"^17",["^4",["^18","^19","^1:","^1;"]],"^;","~$cljs.spec.alpha/->t_cljs$spec$alpha1168","^N","out/cljs/spec/alpha.cljs","^Y",["^T",[["^2X","^3G","^1A","^4@","^7P","^7Q"]]],"^Z",null,"^[",["^T",[null,null]],"^16",true,"^P",6,"^10",false,"^1=","^1>","^O",600,"^11","^2L","^13",6,"^14",true,"^S",["^T",["^U",["^T",[["^2X","^3G","^1A","^4@","^7P","^7Q"]]]]],"^1<",["^4",["^19","^1;"]],"^W","Positional factory function for cljs.spec.alpha/t_cljs$spec$alpha1168."],"~$multi-spec-impl",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^R",34,"^34",["^ ","^10",false,"^35",4,"^13",4,"^Y",[["^K","^1?","^1@"],["^K","^1?","^1@","^1A"]],"^S",["^T",[["^K","^1?","^1@"],["^K","^1?","^1@","^1A"]]],"^[",["^T",[null,null]]],"^1J",true,"^P",19,"^O",544,"^Q",544,"^S",["^T",["^U",["^T",[["^K","^1?","^1@"],["^K","^1?","^1@","^1A"]]]]],"^W","Do not call this directly, use 'multi-spec'"],"^;","~$cljs.spec.alpha/multi-spec-impl","^N","out/cljs/spec/alpha.cljs","^R",34,"^34",["^ ","^10",false,"^35",4,"^13",4,"^Y",[["^K","^1?","^1@"],["^K","^1?","^1@","^1A"]],"^S",["^T",[["^K","^1?","^1@"],["^K","^1?","^1@","^1A"]]],"^[",["^T",[null,null]]],"^Y",[["^K","^1?","^1@"],["^K","^1?","^1@","^1A"]],"^Z",null,"^35",4,"^1J",true,"^[",["^T",[null,null]],"^P",1,"^10",false,"^2:",[["^ ","^35",3,"^10",false,"^1Q","^12"],["^ ","^35",4,"^10",false,"^1Q","^1H"]],"^O",544,"^Q",544,"^13",4,"^14",true,"^S",["^T",[["^K","^1?","^1@"],["^K","^1?","^1@","^1A"]]],"^W","Do not call this directly, use 'multi-spec'"],"~$conform",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",168,"^P",7,"^Q",168,"^R",14,"^S",["^T",["^U",["^T",[["^V","~$x"]]]]],"^W","Given a spec and a value, returns :cljs.spec.alpha/invalid if value does\n  not match spec, else the (possibly destructured) value."],"^;","~$cljs.spec.alpha/conform","^N","out/cljs/spec/alpha.cljs","^R",14,"^Y",["^T",[["^V","~$x"]]],"^Z",null,"^[",["^T",[null,null]],"^P",1,"^10",false,"^O",168,"^11","^12","^Q",168,"^13",2,"^14",true,"^S",["^T",["^U",["^T",[["^V","~$x"]]]]],"^W","Given a spec and a value, returns :cljs.spec.alpha/invalid if value does\n  not match spec, else the (possibly destructured) value."],"~$t_cljs$spec$alpha1168",["^ ","^2Q",6,"^17",["^4",["^18","^19","^1:","^1;"]],"^;","^2L","^N","out/cljs/spec/alpha.cljs","^2R",true,"^16",true,"^P",6,"^O",600,"^2S",false,"^1Q","^2T","^1<",["^4",["^19","^1;"]]],"^6?",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",43,"^P",4,"^Q",43,"^R",8,"^52","^18","^W",null,"^S",["^T",["^U",["^T",[["^V","^6@","^21","^4Z"]]]]]],"^52","^18","^;","~$cljs.spec.alpha/gen*","^N","out/cljs/spec/alpha.cljs","^R",8,"^Y",["^T",[["^V","^6@","^21","^4Z"]]],"^Z",null,"^[",["^T",[null,null]],"^P",1,"^10",false,"^O",39,"^11","^12","^Q",43,"^13",4,"^14",true,"^S",["^T",["^U",["^T",[["^V","^6@","^21","^4Z"]]]]],"^W",null],"~$fspec-impl",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",1342,"^P",19,"^Q",1342,"^R",29,"^1J",true,"^S",["^T",["^U",["^T",[["^4:","^4;","^4<","^4=","^4>","^4?","^1A"]]]]],"^W","Do not call this directly, use 'fspec'"],"^;","~$cljs.spec.alpha/fspec-impl","^N","out/cljs/spec/alpha.cljs","^R",29,"^Y",["^T",[["^4:","^4;","^4<","^4=","^4>","^4?","^1A"]]],"^Z",null,"^1J",true,"^[",["^T",[null,null]],"^P",1,"^10",false,"^O",1342,"^11","^2E","^Q",1342,"^13",7,"^14",true,"^S",["^T",["^U",["^T",[["^4:","^4;","^4<","^4=","^4>","^4?","^1A"]]]]],"^W","Do not call this directly, use 'fspec'"],"~$->t_cljs$spec$alpha1235",["^ ","^L",null,"^M",["^ ","^16",true,"^17",["^4",["^18","^19","^1:","^1;"]],"^1<",["^4",["^19","^1;"]],"^1=","^1>","^S",["^T",["^U",["^T",[["^2X","^3G","^1A","^4@","~$cform","~$meta1236"]]]]],"^W","Positional factory function for cljs.spec.alpha/t_cljs$spec$alpha1235.","^N",null],"^17",["^4",["^18","^19","^1:","^1;"]],"^;","~$cljs.spec.alpha/->t_cljs$spec$alpha1235","^N","out/cljs/spec/alpha.cljs","^Y",["^T",[["^2X","^3G","^1A","^4@","^80","^81"]]],"^Z",null,"^[",["^T",[null,null]],"^16",true,"^P",5,"^10",false,"^1=","^1>","^O",780,"^11","^2I","^13",6,"^14",true,"^S",["^T",["^U",["^T",[["^2X","^3G","^1A","^4@","^80","^81"]]]]],"^1<",["^4",["^19","^1;"]],"^W","Positional factory function for cljs.spec.alpha/t_cljs$spec$alpha1235."],"~$inck",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",355,"^P",8,"^Q",355,"^R",12,"^1U",true,"^S",["^T",["^U",["^T",[["~$m","~$k"]]]]]],"^1U",true,"^;","~$cljs.spec.alpha/inck","^N","out/cljs/spec/alpha.cljs","^R",12,"^Y",["^T",[["~$m","~$k"]]],"^Z",null,"^[",["^T",[null,null]],"^P",1,"^10",false,"^O",355,"^11",["^4",["^2Z","^12"]],"^Q",355,"^13",2,"^14",true,"^S",["^T",["^U",["^T",[["~$m","~$k"]]]]]],"~$*coll-check-limit*",["^ ","^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",31,"^P",16,"^Q",31,"^R",34,"^1O",true],"^;","~$cljs.spec.alpha/*coll-check-limit*","^N","out/cljs/spec/alpha.cljs","^R",34,"^P",1,"^1O",true,"^O",31,"^Q",31,"^1Q","^12","^W","The number of items validated in a collection spec'ed with 'every'"],"~$t_cljs$spec$alpha1260",["^ ","^2Q",25,"^17",["^4",["^18","^19","^1:","^1;"]],"^;","^2M","^N","out/cljs/spec/alpha.cljs","^2R",true,"^16",true,"^P",6,"^O",881,"^2S",false,"^1Q","^2T","^1<",["^4",["^19","^1;"]]],"~$get-spec",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",330,"^P",7,"^Q",330,"^R",15,"^S",["^T",["^U",["^T",[["~$k"]]]]],"^W","Returns spec registered for keyword/symbol/var k, or nil."],"^;","~$cljs.spec.alpha/get-spec","^N","out/cljs/spec/alpha.cljs","^R",15,"^Y",["^T",[["~$k"]]],"^Z",null,"^[",["^T",[null,null]],"^P",1,"^10",false,"^O",330,"^11",["^4",["^12","^1["]],"^Q",330,"^13",1,"^14",true,"^S",["^T",["^U",["^T",[["~$k"]]]]],"^W","Returns spec registered for keyword/symbol/var k, or nil."],"~$->t_cljs$spec$alpha1249",["^ ","^L",null,"^M",["^ ","^16",true,"^17",["^4",["^18","^19","^1:","^1;"]],"^1<",["^4",["^19","^1;"]],"^1=","^1>","^S",["^T",["^U",["^T",[["^2X","^3G","^1A","~$meta1250"]]]]],"^W","Positional factory function for cljs.spec.alpha/t_cljs$spec$alpha1249.","^N",null],"^17",["^4",["^18","^19","^1:","^1;"]],"^;","~$cljs.spec.alpha/->t_cljs$spec$alpha1249","^N","out/cljs/spec/alpha.cljs","^Y",["^T",[["^2X","^3G","^1A","^8;"]]],"^Z",null,"^[",["^T",[null,null]],"^16",true,"^P",3,"^10",false,"^1=","^1>","^O",816,"^11","^2B","^13",4,"^14",true,"^S",["^T",["^U",["^T",[["^2X","^3G","^1A","^8;"]]]]],"^1<",["^4",["^19","^1;"]],"^W","Positional factory function for cljs.spec.alpha/t_cljs$spec$alpha1249."],"~$gensub",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",282,"^P",8,"^Q",282,"^R",14,"^1U",true,"^S",["^T",["^U",["^T",[["^V","^6@","^21","^4Z","^K"]]]]]],"^1U",true,"^;","~$cljs.spec.alpha/gensub","^N","out/cljs/spec/alpha.cljs","^R",14,"^Y",["^T",[["^V","^6@","^21","^4Z","^K"]]],"^Z",null,"^[",["^T",[null,null]],"^P",1,"^10",false,"^O",282,"^11","^12","^Q",282,"^13",5,"^14",true,"^S",["^T",["^U",["^T",[["^V","^6@","^21","^4Z","^K"]]]]]],"~$the-spec",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",116,"^P",8,"^Q",116,"^R",16,"^1U",true,"^S",["^T",["^U",["^T",[["~$spec-or-k"]]]]],"^W","spec-or-k must be a spec, regex or kw/sym, else returns nil. Throws if unresolvable kw/sym"],"^1U",true,"^;","~$cljs.spec.alpha/the-spec","^N","out/cljs/spec/alpha.cljs","^R",16,"^Y",["^T",[["^8@"]]],"^Z",null,"^[",["^T",[null,null]],"^P",1,"^10",false,"^O",116,"^11",["^4",["^12","^1["]],"^Q",116,"^13",1,"^14",true,"^S",["^T",["^U",["^T",[["^8@"]]]]],"^W","spec-or-k must be a spec, regex or kw/sym, else returns nil. Throws if unresolvable kw/sym"],"~$coll-prob",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",793,"^P",8,"^Q",793,"^R",17,"^1U",true,"^S",["^T",["^U",["^T",[["~$x","~$kfn","~$kform","~$distinct","~$count","^6Y","~$max-count","^21","^22","^23"]]]]]],"^1U",true,"^;","~$cljs.spec.alpha/coll-prob","^N","out/cljs/spec/alpha.cljs","^R",17,"^Y",["^T",[["~$x","^8C","^8D","^8E","^8F","^6Y","^8G","^21","^22","^23"]]],"^Z",null,"^[",["^T",[null,null]],"^P",1,"^10",false,"^O",793,"^11",["^4",["^26","^12","^1["]],"^Q",793,"^13",10,"^14",true,"^S",["^T",["^U",["^T",[["~$x","^8C","^8D","^8E","^8F","^6Y","^8G","^21","^22","^23"]]]]]],"~$every-impl",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^R",29,"^34",["^ ","^10",false,"^35",4,"^13",4,"^Y",[["^K","^1K","~$opts"],["^K","^1K",["^ ","~$conform-into","~:into","~$describe-form","~:cljs.spec.alpha/describe","^4Q",["~$kind","~:cljs.spec.alpha/kind-form","^8F","^8G","^6Y","^8E","~$gen-max","~:cljs.spec.alpha/kfn","~:cljs.spec.alpha/cpred","~$conform-keys","~:cljs.spec.alpha/conform-all"],"~:or",["^ ","^8Q",20],"^5@","^8J"],"^1A"]],"^S",["^T",[["^K","^1K","^8J"],["^K","^1K",["^ ","^8K","^8L","^8M","^8N","^4Q",["^8O","^8P","^8F","^8G","^6Y","^8E","^8Q","^8R","^8S","^8T","^8U"],"^8V",["^ ","^8Q",20],"^5@","^8J"],"^1A"]]],"^[",["^T",[null,null]]],"^1J",true,"^P",19,"^O",843,"^Q",843,"^S",["^T",["^U",["^T",[["^K","^1K","^8J"],["^K","^1K",["^ ","^8K","^8L","^8M","^8N","^4Q",["^8O","^8P","^8F","^8G","^6Y","^8E","^8Q","^8R","^8S","^8T","^8U"],"^8V",["^ ","^8Q",20],"^5@","^8J"],"^1A"]]]]],"^W","Do not call this directly, use 'every', 'every-kv', 'coll-of' or 'map-of'"],"^;","~$cljs.spec.alpha/every-impl","^N","out/cljs/spec/alpha.cljs","^R",29,"^34",["^ ","^10",false,"^35",4,"^13",4,"^Y",[["^K","^1K","^8J"],["^K","^1K",["^ ","^8K","^8L","^8M","^8N","^4Q",["^8O","^8P","^8F","^8G","^6Y","^8E","^8Q","^8R","^8S","^8T","^8U"],"^8V",["^ ","^8Q",20],"^5@","^8J"],"^1A"]],"^S",["^T",[["^K","^1K","^8J"],["^K","^1K",["^ ","^8K","^8L","^8M","^8N","^4Q",["^8O","^8P","^8F","^8G","^6Y","^8E","^8Q","^8R","^8S","^8T","^8U"],"^8V",["^ ","^8Q",20],"^5@","^8J"],"^1A"]]],"^[",["^T",[null,null]]],"^Y",[["^K","^1K","^8J"],["^K","^1K",["^ ","^8K","^8L","^8M","^8N","^4Q",["^8O","^8P","^8F","^8G","^6Y","^8E","^8Q","^8R","^8S","^8T","^8U"],"^8V",["^ ","^8Q",20],"^5@","^8J"],"^1A"]],"^Z",null,"^35",4,"^1J",true,"^[",["^T",[null,null]],"^P",1,"^10",false,"^2:",[["^ ","^35",3,"^10",false,"^1Q","^12"],["^ ","^35",4,"^10",false,"^1Q","^2M"]],"^O",843,"^Q",843,"^13",4,"^14",true,"^S",["^T",[["^K","^1K","^8J"],["^K","^1K",["^ ","^8K","^8L","^8M","^8N","^4Q",["^8O","^8P","^8F","^8G","^6Y","^8E","^8Q","^8R","^8S","^8T","^8U"],"^8V",["^ ","^8Q",20],"^5@","^8J"],"^1A"]]],"^W","Do not call this directly, use 'every', 'every-kv', 'coll-of' or 'map-of'"],"~$t_cljs$spec$alpha1458",["^ ","^2Q",5,"^17",["^4",["^18","^19","^1:","^1;"]],"^;","^1M","^N","out/cljs/spec/alpha.cljs","^2R",true,"^16",true,"^P",5,"^O",1414,"^2S",false,"^1Q","^2T","^1<",["^4",["^19","^1;"]]],"~$accept-nil?",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",1060,"^P",8,"^Q",1060,"^R",19,"^1U",true,"^S",["^T",["^U",["^T",[["~$p"]]]]]],"^1U",true,"^;","~$cljs.spec.alpha/accept-nil?","^N","out/cljs/spec/alpha.cljs","^R",19,"^Y",["^T",[["~$p"]]],"^Z",null,"^[",["^T",[null,null]],"^P",1,"^10",false,"^O",1060,"^11",["^4",["^37","^12","^1["]],"^Q",1060,"^13",1,"^14",true,"^S",["^T",["^U",["^T",[["~$p"]]]]]],"~$maybe-spec",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",105,"^P",8,"^Q",105,"^R",18,"^1U",true,"^S",["^T",["^U",["^T",[["^8@"]]]]],"^W","spec-or-k must be a spec, regex or resolvable kw/sym, else returns nil."],"^1U",true,"^;","~$cljs.spec.alpha/maybe-spec","^N","out/cljs/spec/alpha.cljs","^R",18,"^Y",["^T",[["^8@"]]],"^Z",null,"^[",["^T",[null,null]],"^P",1,"^10",false,"^O",105,"^11",["^4",[null,"^2Z","^18","^12","^2C","^2K","^5N","^1["]],"^Q",105,"^13",1,"^14",true,"^S",["^T",["^U",["^T",[["^8@"]]]]],"^W","spec-or-k must be a spec, regex or resolvable kw/sym, else returns nil."],"~$spec-impl",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^R",28,"^34",["^ ","^10",false,"^35",5,"^13",5,"^Y",[["^K","^1K","^1A","^3;"],["^K","^1K","^1A","^3;","^3<"]],"^S",["^T",[["^K","^1K","^1A","^3;"],["^K","^1K","^1A","^3;","^3<"]]],"^[",["^T",[null,null]]],"^1J",true,"^P",19,"^O",511,"^Q",511,"^S",["^T",["^U",["^T",[["^K","^1K","^1A","^3;"],["^K","^1K","^1A","^3;","^3<"]]]]],"^W","Do not call this directly, use 'spec'"],"^;","~$cljs.spec.alpha/spec-impl","^N","out/cljs/spec/alpha.cljs","^R",28,"^34",["^ ","^10",false,"^35",5,"^13",5,"^Y",[["^K","^1K","^1A","^3;"],["^K","^1K","^1A","^3;","^3<"]],"^S",["^T",[["^K","^1K","^1A","^3;"],["^K","^1K","^1A","^3;","^3<"]]],"^[",["^T",[null,null]]],"^Y",[["^K","^1K","^1A","^3;"],["^K","^1K","^1A","^3;","^3<"]],"^Z",null,"^35",5,"^1J",true,"^[",["^T",[null,null]],"^P",1,"^10",false,"^2:",[["^ ","^35",4,"^10",false,"^1Q","^12"],["^ ","^35",5,"^10",false,"^1Q",["^4",[null,"^2Z","^12","^2D","^1["]]]],"^O",511,"^Q",511,"^13",5,"^14",true,"^S",["^T",[["^K","^1K","^1A","^3;"],["^K","^1K","^1A","^3;","^3<"]]],"^W","Do not call this directly, use 'spec'"],"~$->t_cljs$spec$alpha1260",["^ ","^L",null,"^M",["^ ","^16",true,"^17",["^4",["^18","^19","^1:","^1;"]],"^1<",["^4",["^19","^1;"]],"^1=","^1>","^S",["^T",["^U",["^T",[["^K","^8G","~$check?","^1A","^8Q","^1K","~$cpred","^8T","~$kind-form","~$addcv","~$cfns","^8M","^8E","^V","~$map__1259","^8C","~$gen-into","^8F","^6Y","^8J","^8O","~$conform-all","^8K","~$p__1258","~$meta1261"]]]]],"^W","Positional factory function for cljs.spec.alpha/t_cljs$spec$alpha1260.","^N",null],"^17",["^4",["^18","^19","^1:","^1;"]],"^;","~$cljs.spec.alpha/->t_cljs$spec$alpha1260","^N","out/cljs/spec/alpha.cljs","^Y",["^T",[["^K","^8G","^94","^1A","^8Q","^1K","^95","^8T","^96","^97","^98","^8M","^8E","^V","^99","^8C","^9:","^8F","^6Y","^8J","^8O","^9;","^8K","^9<","^9="]]],"^Z",null,"^[",["^T",[null,null]],"^16",true,"^P",6,"^10",false,"^1=","^1>","^O",881,"^11","^2M","^13",25,"^14",true,"^S",["^T",["^U",["^T",[["^K","^8G","^94","^1A","^8Q","^1K","^95","^8T","^96","^97","^98","^8M","^8E","^V","^99","^8C","^9:","^8F","^6Y","^8J","^8O","^9;","^8K","^9<","^9="]]]]],"^1<",["^4",["^19","^1;"]],"^W","Positional factory function for cljs.spec.alpha/t_cljs$spec$alpha1260."],"~$invalid?",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",163,"^P",7,"^Q",163,"^R",15,"^S",["^T",["^U",["^T",[["^30"]]]]],"^W","tests the validity of a conform return value"],"^;","~$cljs.spec.alpha/invalid?","^N","out/cljs/spec/alpha.cljs","^R",15,"^Y",["^T",[["^30"]]],"^Z",null,"^[",["^T",[null,null]],"^P",1,"^10",false,"^O",163,"^11","^37","^Q",163,"^13",1,"^14",true,"^S",["^T",["^U",["^T",[["^30"]]]]],"^W","tests the validity of a conform return value"],"~$amp-impl",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",1015,"^P",19,"^Q",1015,"^R",27,"^1J",true,"^S",["^T",["^U",["^T",[["^3D","~$re-form","^3G","^5>"]]]]],"^W","Do not call this directly, use '&'"],"^;","~$cljs.spec.alpha/amp-impl","^N","out/cljs/spec/alpha.cljs","^R",27,"^Y",["^T",[["^3D","^9B","^3G","^5>"]]],"^Z",null,"^1J",true,"^[",["^T",[null,null]],"^P",1,"^10",false,"^O",1015,"^11","^1W","^Q",1015,"^13",4,"^14",true,"^S",["^T",["^U",["^T",[["^3D","^9B","^3G","^5>"]]]]],"^W","Do not call this directly, use '&'"],"~$pcat*",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",982,"^P",8,"^Q",982,"^R",13,"^1U",true,"^S",["^T",["^U",["^T",[[["~#cmap",[["^43","~$&","~$pr","^5@","^2W"],"~:ps",["~$k1","~$&","~$kr","^5@","^2V"],"~:ks",["~$f1","~$&","~$fr","^5@","^2X"],"~:forms","^30","~:ret","~$rep+","~:rep+"]]]]]]]],"^1U",true,"^;","~$cljs.spec.alpha/pcat*","^N","out/cljs/spec/alpha.cljs","^R",13,"^Y",["^T",[["~$p__1311"]]],"^Z",null,"^[",["^T",[null,null]],"^P",1,"^10",false,"^O",982,"^11",["^4",["^12","^1W","^1["]],"^Q",982,"^13",1,"^14",true,"^S",["^T",["^U",["^T",[[["^9E",[["^43","~$&","^9F","^5@","^2W"],"^9G",["^9H","~$&","^9I","^5@","^2V"],"^9J",["^9K","~$&","^9L","^5@","^2X"],"^9M","^30","^9N","^9O","^9P"]]]]]]]],"~$->t_cljs$spec$alpha1177",["^ ","^L",null,"^M",["^ ","^16",true,"^17",["^4",["^18","^19","^1:","^1;"]],"^1<",["^4",["^19","^1;"]],"^1=","^1>","^S",["^T",["^U",["^T",[["^8","^2X","^3G","^1A","^1B","~$kps","^4@","^80","~$meta1178"]]]]],"^W","Positional factory function for cljs.spec.alpha/t_cljs$spec$alpha1177.","^N",null],"^17",["^4",["^18","^19","^1:","^1;"]],"^;","~$cljs.spec.alpha/->t_cljs$spec$alpha1177","^N","out/cljs/spec/alpha.cljs","^Y",["^T",[["^8","^2X","^3G","^1A","^1B","^9T","^4@","^80","^9U"]]],"^Z",null,"^[",["^T",[null,null]],"^16",true,"^P",5,"^10",false,"^1=","^1>","^O",697,"^11","^2A","^13",9,"^14",true,"^S",["^T",["^U",["^T",[["^8","^2X","^3G","^1A","^1B","^9T","^4@","^80","^9U"]]]]],"^1<",["^4",["^19","^1;"]],"^W","Positional factory function for cljs.spec.alpha/t_cljs$spec$alpha1177."],"~$alt*",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",1029,"^P",8,"^Q",1029,"^R",12,"^1U",true,"^S",["^T",["^U",["^T",[["^2W","^2V","^2X"]]]]]],"^1U",true,"^;","~$cljs.spec.alpha/alt*","^N","out/cljs/spec/alpha.cljs","^R",12,"^Y",["^T",[["^2W","^2V","^2X"]]],"^Z",null,"^[",["^T",[null,null]],"^P",1,"^10",false,"^O",1029,"^11",["^4",["^12","^1W","^1["]],"^Q",1029,"^13",3,"^14",true,"^S",["^T",["^U",["^T",[["^2W","^2V","^2X"]]]]]],"~$cat-impl",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",994,"^P",19,"^Q",994,"^R",27,"^1J",true,"^S",["^T",["^U",["^T",[["^2V","^2W","^2X"]]]]],"^W","Do not call this directly, use 'cat'"],"^;","~$cljs.spec.alpha/cat-impl","^N","out/cljs/spec/alpha.cljs","^R",27,"^Y",["^T",[["^2V","^2W","^2X"]]],"^Z",null,"^1J",true,"^[",["^T",[null,null]],"^P",1,"^10",false,"^O",994,"^11",["^4",["^12","^1W","^1["]],"^Q",994,"^13",3,"^14",true,"^S",["^T",["^U",["^T",[["^2V","^2W","^2X"]]]]],"^W","Do not call this directly, use 'cat'"],"~$macroexpand-check",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",337,"^P",8,"^Q",337,"^R",25,"^1U",true,"^S",["^T",["^U",["^T",[["~$v","~$args"]]]]]],"^1U",true,"^;","~$cljs.spec.alpha/macroexpand-check","^N","out/cljs/spec/alpha.cljs","^R",25,"^Y",["^T",[["~$v","^:0"]]],"^Z",null,"^[",["^T",[null,null]],"^P",1,"^10",false,"^O",337,"^11","^1[","^Q",337,"^13",2,"^14",true,"^S",["^T",["^U",["^T",[["~$v","^:0"]]]]]],"~$reg-resolve",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",55,"^P",8,"^Q",55,"^R",19,"^1U",true,"^S",["^T",["^U",["^T",[["~$k"]]]]],"^W","returns the spec/regex at end of alias chain starting with k, nil if not found, k if k not ident"],"^1U",true,"^;","~$cljs.spec.alpha/reg-resolve","^N","out/cljs/spec/alpha.cljs","^R",19,"^Y",["^T",[["~$k"]]],"^Z",null,"^[",["^T",[null,null]],"^P",1,"^10",false,"^O",55,"^11",["^4",[null,"^12","^1["]],"^Q",55,"^13",1,"^14",true,"^S",["^T",["^U",["^T",[["~$k"]]]]],"^W","returns the spec/regex at end of alias chain starting with k, nil if not found, k if k not ident"],"~$explain-str",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",275,"^P",7,"^Q",275,"^R",18,"^S",["^T",["^U",["^T",[["^V","~$x"]]]]],"^W","Given a spec and a value that fails to conform, returns an explanation as a string."],"^;","~$cljs.spec.alpha/explain-str","^N","out/cljs/spec/alpha.cljs","^R",18,"^Y",["^T",[["^V","~$x"]]],"^Z",null,"^[",["^T",[null,null]],"^P",1,"^10",false,"^O",275,"^11","~$string","^Q",275,"^13",2,"^14",true,"^S",["^T",["^U",["^T",[["^V","~$x"]]]]],"^W","Given a spec and a value that fails to conform, returns an explanation as a string."],"~$*compile-asserts*",["^ ","^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",1477,"^P",3,"^Q",1477,"^R",20,"^1O",true,"^W","If true, compiler will enable spec asserts, which are then\nsubject to runtime control via check-asserts? If false, compiler\nwill eliminate all spec assert overhead. See 'assert'.\nInitially set to the negation of the ':elide-asserts' compiler option.\nDefaults to true."],"^;","~$cljs.spec.alpha/*compile-asserts*","^N","out/cljs/spec/alpha.cljs","^R",20,"^P",1,"^1O",true,"^O",1470,"^Q",1477,"^1Q","^12","^W","If true, compiler will enable spec asserts, which are then\nsubject to runtime control via check-asserts? If false, compiler\nwill eliminate all spec assert overhead. See 'assert'.\nInitially set to the negation of the ':elide-asserts' compiler option.\nDefaults to true."],"~$->t_cljs$spec$alpha1087",["^ ","^L",null,"^M",["^ ","^16",true,"^17",["^4",["^18","^19","^1:","^1;"]],"^1<",["^4",["^19","^1;"]],"^1=","^1>","^S",["^T",["^U",["^T",[["^5C","~$keys->specnames","^5?","^55","^56","^1A","^58","^57","~$map__1086","^5A","^59","^5:","^5;","^1B","^5<","^5=","~$k->s","^5>","~$meta1088"]]]]],"^W","Positional factory function for cljs.spec.alpha/t_cljs$spec$alpha1087.","^N",null],"^17",["^4",["^18","^19","^1:","^1;"]],"^;","~$cljs.spec.alpha/->t_cljs$spec$alpha1087","^N","out/cljs/spec/alpha.cljs","^Y",["^T",[["^5C","^::","^5?","^55","^56","^1A","^58","^57","^:;","^5A","^59","^5:","^5;","^1B","^5<","^5=","^:<","^5>","^:="]]],"^Z",null,"^[",["^T",[null,null]],"^16",true,"^P",5,"^10",false,"^1=","^1>","^O",430,"^11","^2N","^13",19,"^14",true,"^S",["^T",["^U",["^T",[["^5C","^::","^5?","^55","^56","^1A","^58","^57","^:;","^5A","^59","^5:","^5;","^1B","^5<","^5=","^:<","^5>","^:="]]]]],"^1<",["^4",["^19","^1;"]],"^W","Positional factory function for cljs.spec.alpha/t_cljs$spec$alpha1087."],"~$with-gen",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",211,"^P",7,"^Q",211,"^R",15,"^S",["^T",["^U",["^T",[["^V","~$gen-fn"]]]]],"^W","Takes a spec and a no-arg, generator-returning fn and returns a version of that spec that uses that generator"],"^;","~$cljs.spec.alpha/with-gen","^N","out/cljs/spec/alpha.cljs","^R",15,"^Y",["^T",[["^V","^:@"]]],"^Z",null,"^[",["^T",[null,null]],"^P",1,"^10",false,"^O",211,"^11",["^4",["^2Z","^12"]],"^Q",211,"^13",2,"^14",true,"^S",["^T",["^U",["^T",[["^V","^:@"]]]]],"^W","Takes a spec and a no-arg, generator-returning fn and returns a version of that spec that uses that generator"],"^6<",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",40,"^P",4,"^Q",40,"^R",12,"^52","^18","^W",null,"^S",["^T",["^U",["^T",[["^V","~$x"]]]]]],"^52","^18","^;","~$cljs.spec.alpha/conform*","^N","out/cljs/spec/alpha.cljs","^R",12,"^Y",["^T",[["^V","~$x"]]],"^Z",null,"^[",["^T",[null,null]],"^P",1,"^10",false,"^O",39,"^11","^12","^Q",40,"^13",2,"^14",true,"^S",["^T",["^U",["^T",[["^V","~$x"]]]]],"^W",null],"~$check-asserts?",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",1485,"^P",16,"^Q",1485,"^R",30,"^1Q","^37","^S",["^T",["^U",["^T",[[]]]]],"^W","Returns the value set by check-asserts."],"^;","~$cljs.spec.alpha/check-asserts?","^N","out/cljs/spec/alpha.cljs","^R",30,"^Y",["^T",[[]]],"^Z",null,"^[",["^T",[null,null]],"^P",1,"^10",false,"^O",1485,"^11","^37","^Q",1485,"^13",0,"^1Q","^37","^14",true,"^S",["^T",["^U",["^T",[[]]]]],"^W","Returns the value set by check-asserts."],"~$noret?",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",1052,"^P",8,"^Q",1052,"^R",14,"^1U",true,"^S",["^T",["^U",["^T",[["^43","~$pret"]]]]]],"^1U",true,"^;","~$cljs.spec.alpha/noret?","^N","out/cljs/spec/alpha.cljs","^R",14,"^Y",["^T",[["^43","^:F"]]],"^Z",null,"^[",["^T",[null,null]],"^P",1,"^10",false,"^O",1052,"^11",["^4",["^37","^12","^1["]],"^Q",1052,"^13",2,"^14",true,"^S",["^T",["^U",["^T",[["^43","^:F"]]]]]],"~$rep-impl",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",1006,"^P",19,"^Q",1006,"^R",27,"^1J",true,"^S",["^T",["^U",["^T",[["^K","~$p"]]]]],"^W","Do not call this directly, use '*'"],"^;","~$cljs.spec.alpha/rep-impl","^N","out/cljs/spec/alpha.cljs","^R",27,"^Y",["^T",[["^K","~$p"]]],"^Z",null,"^1J",true,"^[",["^T",[null,null]],"^P",1,"^10",false,"^O",1006,"^11",["^4",["^2Z","^12","^1["]],"^Q",1006,"^13",2,"^14",true,"^S",["^T",["^U",["^T",[["^K","~$p"]]]]],"^W","Do not call this directly, use '*'"],"~$op-describe",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",1143,"^P",8,"^Q",1143,"^R",19,"^1U",true,"^S",["^T",["^U",["^T",[["~$p"]]]]]],"^1U",true,"^;","~$cljs.spec.alpha/op-describe","^N","out/cljs/spec/alpha.cljs","^R",19,"^Y",["^T",[["~$p"]]],"^Z",null,"^[",["^T",[null,null]],"^P",1,"^10",false,"^O",1143,"^11",["^4",["^2Z","^12","^1["]],"^Q",1143,"^13",1,"^14",true,"^S",["^T",["^U",["^T",[["~$p"]]]]]],"~$describe",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",206,"^P",7,"^Q",206,"^R",15,"^S",["^T",["^U",["^T",[["^V"]]]]],"^W","returns an abbreviated description of the spec as data"],"^;","~$cljs.spec.alpha/describe","^N","out/cljs/spec/alpha.cljs","^R",15,"^Y",["^T",[["^V"]]],"^Z",null,"^[",["^T",[null,null]],"^P",1,"^10",false,"^O",206,"^11",["^4",[null,"^12","^2K"]],"^Q",206,"^13",1,"^14",true,"^S",["^T",["^U",["^T",[["^V"]]]]],"^W","returns an abbreviated description of the spec as data"],"~$explain-1",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",387,"^P",8,"^Q",387,"^R",17,"^1U",true,"^S",["^T",["^U",["^T",[["^K","^1K","^21","^22","^23","~$v"]]]]]],"^1U",true,"^;","~$cljs.spec.alpha/explain-1","^N","out/cljs/spec/alpha.cljs","^R",17,"^Y",["^T",[["^K","^1K","^21","^22","^23","~$v"]]],"^Z",null,"^[",["^T",[null,null]],"^P",1,"^10",false,"^O",387,"^11",["^4",["^26","^12"]],"^Q",387,"^13",6,"^14",true,"^S",["^T",["^U",["^T",[["^K","^1K","^21","^22","^23","~$v"]]]]]],"~$explain-out",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",264,"^P",7,"^Q",264,"^R",18,"^S",["^T",["^U",["^T",[["^1Y"]]]]],"^W","Prints explanation data (per 'explain-data') to *out* using the printer in *explain-out*,\n    by default explain-printer."],"^;","~$cljs.spec.alpha/explain-out","^N","out/cljs/spec/alpha.cljs","^R",18,"^Y",["^T",[["^1Y"]]],"^Z",null,"^[",["^T",[null,null]],"^P",1,"^10",false,"^O",264,"^11","^12","^Q",264,"^13",1,"^14",true,"^S",["^T",["^U",["^T",[["^1Y"]]]]],"^W","Prints explanation data (per 'explain-data') to *out* using the printer in *explain-out*,\n    by default explain-printer."],"~$re-gen",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",1214,"^P",8,"^Q",1214,"^R",14,"^1U",true,"^S",["^T",["^U",["^T",[["~$p","^6@","^21","^4Z","~$f"]]]]]],"^1U",true,"^;","~$cljs.spec.alpha/re-gen","^N","out/cljs/spec/alpha.cljs","^R",14,"^Y",["^T",[["~$p","^6@","^21","^4Z","~$f"]]],"^Z",null,"^[",["^T",[null,null]],"^P",1,"^10",false,"^O",1214,"^11",["^4",["^12","^1["]],"^Q",1214,"^13",5,"^14",true,"^S",["^T",["^U",["^T",[["~$p","^6@","^21","^4Z","~$f"]]]]]],"~$t_cljs$spec$alpha1154",["^ ","^2Q",9,"^17",["^4",["^18","^19","^1:","^1;"]],"^;","^1H","^N","out/cljs/spec/alpha.cljs","^2R",true,"^16",true,"^P",6,"^O",556,"^2S",false,"^1Q","^2T","^1<",["^4",["^19","^1;"]]],"~$filter-alt",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",1020,"^P",8,"^Q",1020,"^R",18,"^1U",true,"^S",["^T",["^U",["^T",[["^2W","^2V","^2X","~$f"]]]]]],"^1U",true,"^;","~$cljs.spec.alpha/filter-alt","^N","out/cljs/spec/alpha.cljs","^R",18,"^Y",["^T",[["^2W","^2V","^2X","~$f"]]],"^Z",null,"^[",["^T",[null,null]],"^P",1,"^10",false,"^O",1020,"^11","^26","^Q",1020,"^13",4,"^14",true,"^S",["^T",["^U",["^T",[["^2W","^2V","^2X","~$f"]]]]]],"~$t_cljs$spec$alpha1235",["^ ","^2Q",6,"^17",["^4",["^18","^19","^1:","^1;"]],"^;","^2I","^N","out/cljs/spec/alpha.cljs","^2R",true,"^16",true,"^P",5,"^O",780,"^2S",false,"^1Q","^2T","^1<",["^4",["^19","^1;"]]],"~$and-preds",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",726,"^P",8,"^Q",726,"^R",17,"^1U",true,"^S",["^T",["^U",["^T",[["~$x","^3G","^2X"]]]]]],"^1U",true,"^;","~$cljs.spec.alpha/and-preds","^N","out/cljs/spec/alpha.cljs","^R",17,"^Y",["^T",[["~$x","^3G","^2X"]]],"^Z",null,"^[",["^T",[null,null]],"^P",1,"^10",false,"^O",726,"^11",["^4",[null,"^2C"]],"^Q",726,"^13",3,"^14",true,"^S",["^T",["^U",["^T",[["~$x","^3G","^2X"]]]]]],"~$call-valid?",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",1321,"^P",8,"^Q",1321,"^R",19,"^1U",true,"^S",["^T",["^U",["^T",[["~$f","^4@","^:0"]]]]]],"^1U",true,"^;","~$cljs.spec.alpha/call-valid?","^N","out/cljs/spec/alpha.cljs","^R",19,"^Y",["^T",[["~$f","^4@","^:0"]]],"^Z",null,"^[",["^T",[null,null]],"^P",1,"^10",false,"^O",1321,"^11",["^4",["^37","^1["]],"^Q",1321,"^13",3,"^14",true,"^S",["^T",["^U",["^T",[["~$f","^4@","^:0"]]]]]],"~$op-unform",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",1089,"^P",8,"^Q",1089,"^R",17,"^1U",true,"^S",["^T",["^U",["^T",[["~$p","~$x"]]]]]],"^1U",true,"^;","~$cljs.spec.alpha/op-unform","^N","out/cljs/spec/alpha.cljs","^R",17,"^Y",["^T",[["~$p","~$x"]]],"^Z",null,"^[",["^T",[null,null]],"^P",1,"^10",false,"^O",1089,"^11",["^4",["^26","^12"]],"^Q",1089,"^13",2,"^14",true,"^S",["^T",["^U",["^T",[["~$p","~$x"]]]]]],"~$rep*",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",999,"^P",8,"^Q",999,"^R",12,"^1U",true,"^S",["^T",["^U",["^T",[["^43","^44","^30","~$splice","^K"]]]]]],"^1U",true,"^;","~$cljs.spec.alpha/rep*","^N","out/cljs/spec/alpha.cljs","^R",12,"^Y",["^T",[["^43","^44","^30","^;3","^K"]]],"^Z",null,"^[",["^T",[null,null]],"^P",1,"^10",false,"^O",999,"^11",["^4",["^2Z","^12","^1["]],"^Q",999,"^13",5,"^14",true,"^S",["^T",["^U",["^T",[["^43","^44","^30","^;3","^K"]]]]]],"^2;",["^ ","^L",null,"^M",["^ ","^52","^1:","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^R",12,"^34",["^ ","^10",false,"^35",2,"^13",2,"^Y",[["~$_"],["~$_","^K"]],"^S",["^T",[["~$_"],["~$_","^K"]]],"^[",["^T",[null,null]]],"^P",4,"^O",132,"^Q",132,"^S",["^T",["^U",["^T",[["~$_"],["~$_","^K"]]]]],"^W",null],"^52","^1:","^;","~$cljs.spec.alpha/specize*","^N","out/cljs/spec/alpha.cljs","^R",12,"^34",["^ ","^10",false,"^35",2,"^13",2,"^Y",[["~$_"],["~$_","^K"]],"^S",["^T",[["~$_"],["~$_","^K"]]],"^[",["^T",[null,null]]],"^Y",[["~$_"],["~$_","^K"]],"^Z",null,"^35",2,"^[",["^T",[null,null]],"^P",1,"^10",false,"^2:",[["^ ","^35",1,"^10",false,"^1Q","^12"],["^ ","^35",2,"^10",false,"^1Q","^12"]],"^O",131,"^Q",132,"^13",2,"^14",true,"^S",["^T",[["~$_"],["~$_","^K"]]],"^W",null],"~$maybe-impl",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",1048,"^P",19,"^Q",1048,"^R",29,"^1J",true,"^S",["^T",["^U",["^T",[["~$p","^K"]]]]],"^W","Do not call this directly, use '?'"],"^;","~$cljs.spec.alpha/maybe-impl","^N","out/cljs/spec/alpha.cljs","^R",29,"^Y",["^T",[["~$p","^K"]]],"^Z",null,"^1J",true,"^[",["^T",[null,null]],"^P",1,"^10",false,"^O",1048,"^11",["^4",["^2Z","^12"]],"^Q",1048,"^13",2,"^14",true,"^S",["^T",["^U",["^T",[["~$p","^K"]]]]],"^W","Do not call this directly, use '?'"],"~$pcat",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",992,"^P",8,"^Q",992,"^R",12,"^1U",true,"^S",["^T",["^U",["^T",[["~$&","^2W"]]]]],"^34",["^ ","^10",true,"^35",0,"^13",0,"^Y",[["^T",["^2W"]]],"^S",["^T",[["~$&","^2W"]]],"^[",["^T",[null]]]],"^1U",true,"^;","~$cljs.spec.alpha/pcat","^N","out/cljs/spec/alpha.cljs","^R",12,"^34",["^ ","^10",true,"^35",0,"^13",0,"^Y",[["^T",["^2W"]]],"^S",["^T",[["~$&","^2W"]]],"^[",["^T",[null]]],"^Y",[["^T",["^2W"]]],"^Z",null,"^35",0,"^[",["^T",[null]],"^P",1,"^10",true,"^2:",[["^ ","^35",0,"^10",true,"^1Q",["^4",["^12","^1W","^1["]]]],"^O",992,"^11","^12","^Q",992,"^13",0,"^14",true,"^S",["^T",[["~$&","^2W"]]]],"^6>",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",42,"^P",4,"^Q",42,"^R",12,"^52","^18","^W",null,"^S",["^T",["^U",["^T",[["^V","^21","^22","^23","~$x"]]]]]],"^52","^18","^;","~$cljs.spec.alpha/explain*","^N","out/cljs/spec/alpha.cljs","^R",12,"^Y",["^T",[["^V","^21","^22","^23","~$x"]]],"^Z",null,"^[",["^T",[null,null]],"^P",1,"^10",false,"^O",39,"^11","^12","^Q",42,"^13",5,"^14",true,"^S",["^T",["^U",["^T",[["^V","^21","^22","^23","~$x"]]]]],"^W",null],"~$validate-fn",["^ ","^L",null,"^M",["^ ","^N","/Users/shivamsinghal/projects/open-source/clj-formatter/out/cljs/spec/alpha.cljs","^O",1332,"^P",8,"^Q",1332,"^R",19,"^1U",true,"^S",["^T",["^U",["^T",[["~$f","^4@","~$iters"]]]]],"^W","returns f if valid, else smallest"],"^1U",true,"^;","~$cljs.spec.alpha/validate-fn","^N","out/cljs/spec/alpha.cljs","^R",19,"^Y",["^T",[["~$f","^4@","^;<"]]],"^Z",null,"^[",["^T",[null,null]],"^P",1,"^10",false,"^O",1332,"^11",["^4",[null,"^12","^1["]],"^Q",1332,"^13",3,"^14",true,"^S",["^T",["^U",["^T",[["~$f","^4@","^;<"]]]]],"^W","returns f if valid, else smallest"]],"~:cljs.spec/registry-ref",[["~:cljs.spec.alpha/kvs->map",["^T",["~$cljs.spec.alpha/conformer",["^T",["~$fn*",["~$p1__1449#"],["^T",["~$cljs.core/zipmap",["^T",["~$cljs.core/map","~:cljs.spec.alpha/k","^;B"]],["^T",["^;D","~:cljs.spec.alpha/v","^;B"]]]]]],["^T",["^;A",["~$p1__1450#"],["^T",["^;D",["^T",["~$cljs.core/fn",[["~$k","~$v"]],["^ ","^;E","~$k","^;F","~$v"]]],"^;G"]]]]]]]],"~:require-macros",["^ ","~$c","^?","^?","^?","~$s","^<","^<","^<","^D","^E","^E","^E"],"~:cljs.analyzer/constants",["^ ","~:seen",["^4",["^K","^1F","^1E","^8G","~:args","~:cljs.spec.alpha/failure","~$cljs.spec.alpha/*","~:max-tries","~:path","~:req-un","~:opt-un","^3<","^6M","~$cljs.spec.alpha/+","~:p2","^3=","^9N","~:cljs.spec.alpha/unknown","~$cljs.core/sequential?","~:cljs.spec.alpha/value","~:gfn","~:cljs.spec.alpha/recursion-limit","~:cljs.spec.alpha/name","~:pred-exprs","^8L","~:keys-pred","~:gen-max","~:shrunk","~:fn","~$cljs.spec.alpha/alt","^5C","~$cljs.core/vector?","^1C","^9U","^5Z","^9P","~$cljs.core/=","^;G","~:opt-keys","^4;","^::","~:cljs.spec.alpha/rep","~:pred","^1D","~:splice","^94","^2X","^5?","~:cljs.spec.alpha/accept","^4:","~:else","^9J","~$cljs.core/count","~$cljs.spec.alpha/and","^55","^56","~$cljs.spec.alpha/cat","~:_","^8P","~:maybe","~:via","~$cljs.spec.alpha/every","~:req-specs","~$cljs.spec.alpha/or","^1A","~:cljs.spec.alpha/gfn","^8Q","^4>","~$v","~:cljs.spec.alpha/spec","^58","~:conform-keys","^57","^:;","^3;","~$cljs.spec.alpha/fspec","^5A","~$fn","~:amp","^3U","^4?","^4R","~$cljs.spec.alpha/nilable","^59","^;F","~$cljs.spec.alpha/tuple","^1K","^8;","~$cljs.core/map?","^8S","~:p1","^;C","^7Q","~:cljs.spec.alpha/problems","^95","~$%","^;D","^;?","~$method","~:distinct","^:=","^5:","^6","~$cljs.spec.alpha/keys","^3D","^8T","^9T","~:reason","~$cljs.spec.alpha/merge","~:cljs.spec.alpha/invalid","^3G","^96","~:req","^97","^98","~$nil?","~:assertion-failed","^81","^;A","~$cljs.core/<=","^6P","^4A","~:cljs.spec.alpha/amp","~:id","^5W","^8M","~:min-count","~:kind","~:smallest","~$cljs.core/set?","~:count","^7P","~$cljs.core/nil?","^1?","~:req-keys","^1@","~$k","^;E","^;H","~$cljs.core/list?","^8E","^9=","^4<","~:opt-specs","~:cljs.spec.alpha/args","^4=","~$ifn?","~:pred-forms","^5;","^V","^8","~$distinct?","~:max-count","^99","^8C","^8R","~:max-elements","^9:","~$cljs.spec.alpha/multi-spec","~$cljs.core/coll?","^1B","~:num-elements","^4@","^8F","^5<","~$apply","^6Y","^8J","^8O","^80","~:min-elements","^5=","^;B","^9;","^8U","~:cljs.spec.alpha/alt","~$cljs.core/or","^9M","~:cljs.spec.alpha/pred","^9","~:cljs.spec.alpha/nil","^9G","^:<","^;@","~:in","^8N","^8K","~:accept","~$cljs.spec.alpha/&","~:opt","~:cljs.spec.alpha/pcat","^9<","^5>","~$cljs.spec.alpha/?"]],"~:order",["^4R","^;Z","^;U","^<U","^<I","~$%","^<<","^<E","^<O","^<F","^;W","^;P","^=H","^<9","^3U","^<S","^<A","^;Y","^;L","^=9","^6","^9","^=K","^;Q","^;R","^;X","^;[","^<0","^<7","^<C","^<V","^=6","^=8","^=;","^<M","^<R","^5C","^::","^5?","^55","^56","^1A","^58","^57","^:;","^5A","^59","^5:","^5;","^1B","^5<","^5=","^:<","^5>","^:=","^K","^1K","^3;","^3<","^3=","^<P","^=?","^1?","^1@","^1C","^1D","^1E","^1F","^<5","^<6","^<=","^<L","^2X","^3G","^4@","^7P","^7Q","^<D","^8","^9T","^80","^9U","^<>","^81","^=@","^<Y","^=<","^<T","^8;","^=3","^=7","^==","^8P","^<1","^8S","^<G","^8N","^<Q","^8R","^=4","^=0","^=1","^8U","^8L","^=A","^;O","^=C","^=>","^<B","^8G","^94","^8Q","^95","^8T","^96","^97","^98","^8M","^8E","^V","^99","^8C","^9:","^8F","^6Y","^8J","^8O","^9;","^8K","^9<","^9=","^9N","^<;","^9G","^9J","^9M","^9P","^=L","^;T","^<:","^<[","^<8","^<N","^;N","^<J","^<Z","^=D","^=G","^<@","^=J","^;S","^<?","~:_","^=M","^<4","^=I","^;H","^=E","^=5","^;V","^3D","^5Z","^<3","^=2","^<2","^=B","^=:","^<H","^4:","^4;","^4<","^4=","^4>","^4?","^4A","^;?","^;@","^;A","^;B","^;C","^;D","^;E","^;F","^;G","~$k","~$v","^6P","^6M","^=F","^<W","^<K","^5W","^;M","^<X"]],"^W",null,"~:as-aliases",["^ "]]